nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
usage: VSGNet_Bayesian_Optimization.py [-h] [--benchmark BENCHMARK]
                                       [--initpoints INITPOINTS]
                                       [--niters NITERS]
                                       [--vital_params_path VITAL_PARAMS_PATH]
                                       [--botarget BOTARGET]
                                       [--resultDataAfterFormat RESULTDATAAFTERFORMAT]
                                       [--resultDataBeforeFormat RESULTDATABEFOREFORMAT]
VSGNet_Bayesian_Optimization.py: error: unrecognized arguments: --VSGNet_initpoints=10 --csv_toconfig=/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/ --default_runtime=1241.583
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
usage: VSGNet_Bayesian_Optimization.py [-h] [--benchmark BENCHMARK]
                                       [--initpoints INITPOINTS]
                                       [--VSGNet_initpoints VSGNET_INITPOINTS]
                                       [--niters NITERS]
                                       [--default_runtime DEFAULT_RUNTIME]
                                       [--stop_file_path STOP_FILE_PATH]
VSGNet_Bayesian_Optimization.py: error: unrecognized arguments: --csv_toconfig=/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
usage: VSGNet_Bayesian_Optimization.py [-h] [--benchmark BENCHMARK]
                                       [--initpoints INITPOINTS]
                                       [--VSGNet_initpoints VSGNET_INITPOINTS]
                                       [--niters NITERS]
                                       [--default_runtime DEFAULT_RUNTIME]
                                       [--stop_file_path STOP_FILE_PATH]
VSGNet_Bayesian_Optimization.py: error: unrecognized arguments: --csv_toconfig=/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 311, in <module>
    optimizer = BayesianOptimization(
TypeError: __init__() got an unexpected keyword argument 'default_runtime'
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 13日 星期三 16:23:31 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1456
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 324, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
TypeError: cannot unpack non-iterable float object
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 13日 星期三 17:23:14 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1457
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 325, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 42, in black_box_function
    return -schafferRun(i)
TypeError: bad operand type for unary -: 'tuple'
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 09:01:24 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1446
runtime:(289.294, 'success')
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 326, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 42, in black_box_function
    return -schafferRun(i)
TypeError: bad operand type for unary -: 'tuple'
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 09:17:01 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1442
runtime:(288.552, 'success')
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 327, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 42, in black_box_function
    runtime,status=-schafferRun(i)
TypeError: bad operand type for unary -: 'tuple'
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 09:31:43 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1434
runtime:286.858
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 326, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
TypeError: cannot unpack non-iterable float object
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 09:48:32 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1457
runtime:291.439
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 326, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 217, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 185, in getTestSamples
    target, status = self._space.target_func(**params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 42, in black_box_function
    return -schafferRun(i)
TypeError: bad operand type for unary -: 'tuple'
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 10:08:24 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 14日 星期四 10:13:18 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 14日 星期四 10:18:50 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 14日 星期四 10:22:46 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 10	 bo迭代搜索次数：--niters = 100
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1431
runtime:286.394
生成测试集 - 配置成功 target -286.394  conf {'spark.broadcast.blockSize': 27.85536429155959, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 4.4402676724513395, 'spark.executor.instances': 8.554031568612787, 'spark.executor.memory': 9.117561268266025, 'spark.executor.memoryOverhead': 857.7637567760185, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 4.772750629629654, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 457.8426654015389, 'spark.storage.memoryMapThreshold': 1.7653979023280013}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1431
runtime:325.242
生成测试集 - 配置成功 target -325.242  conf {'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:228.356
生成测试集 - 配置成功 target -228.356  conf {'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:299.945
生成测试集 - 配置成功 target -299.945  conf ================= config5 =================
2022年 07月 14日 星期四 10:27:53 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 14日 星期四 10:31:51 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 14日 星期四 10:36:48 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 14日 星期四 10:42:13 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 14日 星期四 10:46:17 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 14日 星期四 10:51:27 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 14日 星期四 10:55:16 CST
cmd

end before line
finish
================= config12 =================
2022年 07月 14日 星期四 11:42:50 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 14日 星期四 11:47:57 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 14日 星期四 11:52:01 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:231.101
生成测试集 - 配置成功 target -231.101  conf {'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
X_test [array([2.78553643e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       4.44026767e+00, 8.55403157e+00, 9.11756127e+00, 8.57763757e+02,
       7.00896775e+01, 8.37264065e+01, 4.77275063e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 4.57842665e+02, 1.76539790e+00]), array([4.42139656e+00, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       5.26332288e+00, 1.37473372e+01, 1.11989917e+01, 1.33256352e+03,
       6.22895006e+01, 9.79040891e+01, 8.51163105e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.84651246e+02, 3.38991993e+00]), array([3.24775359e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       5.76791661e+00, 1.21985502e+01, 8.61400657e+00, 9.51670759e+02,
       9.86624151e+01, 7.17612099e+01, 1.44958113e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 3.90399194e+02, 8.94975482e+00]), array([4.06676768e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       6.68765865e+00, 1.05685471e+01, 1.37890403e+01, 1.29357829e+03,
       9.16827891e+01, 4.30156134e+01, 9.54540333e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.06328497e+02, 9.36493510e+00]), array([4.48356089e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       6.79778639e+00, 1.21809090e+01, 8.39600104e+00, 1.41973985e+03,
       1.04372114e+02, 1.20610355e+02, 7.40372283e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.07458916e+02, 8.20569405e+00])]  y_test [-286.394, -325.242, -228.356, -299.945, -231.101]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:289.47
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:316.466
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:237.366
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1141
runtime:302.355
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:221.599
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
runtime:2215
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:299.461
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:236.583
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
================= config15 =================
2022年 07月 14日 星期四 11:56:59 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 14日 星期四 12:04:31 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 14日 星期四 12:10:52 CST
cmd

end before line
finish
================= config18 =================
2022年 07月 14日 星期四 12:17:19 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 14日 星期四 12:23:48 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 14日 星期四 12:30:11 CST
cmd

end before line
finish
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:290.473
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:306.193
训练集长度= 10
accuracy= 0.025266213157831074
所有模型的可信度  [0.025266213157831074]
三个采集函数选出的max_idx [7461, 7461, 7461]
max_means [-469.98595665 -469.98595665 -469.98595665]  max_stds [582.01771211 582.01771211 582.01771211]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.33477389424665144, 0.33477389424665144, 0.33477389424665144]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 1 2 0 2 2 2 1 2 2 1 0 0 2 0 1 2 1 1 0 1 0 1 2 2 2 2 2 1 1 2 1 1 0 0
 2 1 1 1 1 1 2 0 0 1 2 0 0 2 0 2 2 0 0 0 1 1 0 1 2 2 2 0 2 0 1 0 2 0 2 0 0
 0 1 0 1 2 2 2 1 1 1 2 0 2 2 1 2 1 2 2 2 1 0 1 2 0 1]
每个概率被转中的次数, count: [30 33 37]
choose which one? [2]
ys [1027.84524429 1027.86649162 1027.84586921 ... 1027.97655729 1027.93287341
 1027.85316969]
1  ys.argmax() 7461
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:231.442
训练集长度= 11
accuracy= 0.025266242519535097
所有模型的可信度  [0.025266213157831074, 0.025266242519535097]
三个采集函数选出的max_idx [2739, 227, 9568]
max_means [-341.69905981 -340.57460716 -366.24798697]  max_stds [539.09648754 534.08641913 548.9423583 ]
所有模型的可信度所占权重  [0.49999970947677463, 0.5000002905232255]
三个函数的累计增益为[0.5792403074711584, 0.5792463613350628, 0.5634677780506152]
probability [0.3363853837878654, 0.3363888994812773, 0.3272257167308573]
probabilityTotal [0.33638538 0.67277428 1.        ]
每一轮选择的下标，result: [2 2 1 2 0 0 0 0 0 1 2 2 2 1 2 1 0 0 2 0 0 2 0 2 2 1 0 2 0 2 1 1 1 1 1 0 1
 1 2 1 1 0 2 0 1 1 1 0 1 1 0 2 2 2 0 1 1 2 1 2 0 2 2 0 2 2 2 1 2 1 1 0 0 0
 1 0 1 2 2 2 1 2 2 0 2 2 0 0 0 2 0 2 2 0 2 1 0 0 0 0]
每个概率被转中的次数, count: [34 29 37]
choose which one? [2]
ys [1020.35130097  903.34115308  964.1844947  ...  918.91260535 1003.59893176
 1001.41443927]
2  ys.argmax() 9568
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:238.625
训练集长度= 12
accuracy= 0.025266263350387376
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376]
三个采集函数选出的max_idx [3098, 3098, 8693]
max_means [-290.75098678 -290.75098678 -325.10511039]  max_stds [496.67235269 496.67235269 518.05016812]
所有模型的可信度所占权重  [0.33333298348458773, 0.3333333708487068, 0.33333364566670565]
三个函数的累计增益为[0.6935098269448412, 0.6935118449013669, 0.6644370826609011]
probability [0.3380569194584984, 0.3380579031275686, 0.323885177413933]
probabilityTotal [0.33805692 0.67611482 1.        ]
每一轮选择的下标，result: [2 2 0 1 2 1 2 1 0 1 2 1 0 1 0 2 2 0 2 2 2 0 2 1 1 2 0 2 1 2 1 0 1 2 2 2 0
 2 1 0 1 2 1 0 2 1 2 1 0 2 0 0 0 2 1 1 1 0 1 0 1 0 2 0 2 0 1 1 0 2 0 0 1 2
 0 2 2 0 2 2 1 1 1 1 1 1 0 0 1 2 2 1 1 1 0 0 2 0 0 2]
每个概率被转中的次数, count: [31 34 35]
choose which one? [2]
ys [875.41916716 916.34210957 822.10782672 ... 906.72765435 911.8625228
 932.70025901]
3  ys.argmax() 8693
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:232.071
训练集长度= 13
accuracy= 0.025266272919839537
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537]
三个采集函数选出的max_idx [1302, 741, 9085]
max_means [-277.94564274 -268.6110145  -332.80546242]  max_stds [468.22565894 456.00236692 503.46486324]
所有模型的可信度所占权重  [0.24999965537950852, 0.24999994590250227, 0.2500001520159336, 0.2500002467020556]
三个函数的累计增益为[0.749922034246815, 0.7567603432764985, 0.7005105382108651]
probability [0.3397627950420312, 0.3428609877649853, 0.3173762171929834]
probabilityTotal [0.3397628  0.68262378 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 0 0 1 0 2 1 1 1 2 1 1 2 2 0 2 1 2 1 0 0 2 0 0 0 2 0 0 0 2 1 2 2
 2 1 1 0 0 1 2 1 0 2 1 1 0 1 1 2 0 1 1 1 0 2 2 1 0 0 0 0 1 2 1 2 0 2 1 1 1
 2 2 1 2 0 0 0 2 0 0 0 0 2 2 1 1 2 2 1 1 0 1 2 1 0 1]
每个概率被转中的次数, count: [33 36 31]
choose which one? [1]
ys [0.27166381 0.27794086 0.24727302 ... 0.34262731 0.34230201 0.30404629]
4  ys.argmax() 741
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:229.964
训练集长度= 14
accuracy= 0.025266312257568934
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934]
三个采集函数选出的max_idx [3854, 9390, 7220]
max_means [-274.88547612 -254.47699406 -306.85101521]  max_stds [458.53286555 414.07475103 474.77431193]
所有模型的可信度所占权重  [0.19999962255434925, 0.19999985497262598, 0.2000000198632872, 0.20000009561214627, 0.20000040699759142]
三个函数的累计增益为[0.7824164652370384, 0.7983990970740246, 0.741600982335675]
probability [0.3368975591568788, 0.3437794563229263, 0.319322984520195]
probabilityTotal [0.33689756 0.68067702 1.        ]
每一轮选择的下标，result: [1 1 1 2 1 2 0 2 1 2 0 0 1 1 1 1 1 2 0 2 0 1 1 0 2 2 1 2 1 2 1 2 1 1 2 0 2
 2 2 2 0 1 0 1 0 0 2 0 0 2 0 2 1 0 0 0 1 1 2 2 0 1 1 2 2 0 2 2 1 1 0 1 1 0
 2 2 1 0 0 0 1 0 0 1 0 2 0 1 1 2 2 1 2 0 1 0 2 1 0 0]
每个概率被转中的次数, count: [32 36 32]
choose which one? [1]
ys [0.31551224 0.33278366 0.35361071 ... 0.36933164 0.33681779 0.36149095]
5  ys.argmax() 9390
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:239.485
训练集长度= 15
accuracy= 0.025266349908634377
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377]
三个采集函数选出的max_idx [6931, 9788, 2418]
max_means [-255.66303991 -242.8183474  -296.16828287]  max_stds [429.06096579 373.04968848 456.46966138]
所有模型的可信度所占权重  [0.16666625420776668, 0.16666644788955018, 0.16666658529835376, 0.16666664842236592, 0.16666690791008443, 0.16666715627187909]
三个函数的累计增益为[0.81787901236302, 0.8304148791342401, 0.7672862077413829]
probability [0.338584927331039, 0.3437745158589339, 0.317640556810027]
probabilityTotal [0.33858493 0.68235944 1.        ]
每一轮选择的下标，result: [1 1 2 1 1 0 1 1 0 2 1 2 0 2 1 2 1 0 2 1 2 1 1 2 1 1 0 0 0 2 1 0 2 0 0 0 2
 2 2 1 2 2 2 1 0 2 2 2 0 2 2 1 1 2 1 2 0 2 2 0 2 0 0 0 1 2 0 0 2 0 0 0 0 2
 2 0 0 2 0 1 1 0 1 1 0 0 2 2 0 0 1 0 2 2 2 2 0 1 1 0]
================= config21 =================
2022年 07月 14日 星期四 12:36:09 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 14日 星期四 12:43:35 CST
cmd

end before line
finish
================= config23 =================
2022年 07月 14日 星期四 12:51:00 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 14日 星期四 12:57:19 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 14日 星期四 13:03:33 CST
cmd

end before line
finish
每个概率被转中的次数, count: [35 28 37]
choose which one? [2]
ys [649.92796513 564.98964889 837.47694189 ... 844.38681476 605.79671308
 600.63733403]
6  ys.argmax() 2418
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:286.012
训练集长度= 16
accuracy= 0.02526638565770899
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899]
三个采集函数选出的max_idx [3581, 3581, 8328]
max_means [-239.21859147 -239.21859147 -300.64820863]  max_stds [396.38967704 396.38967704 444.01052601]
所有模型的可信度所占权重  [0.1428567004941935, 0.14285686650704757, 0.14285698428594884, 0.14285703839221134, 0.14285726081011746, 0.14285747369152338, 0.1428576758189579]
三个函数的累计增益为[0.8487688663093803, 0.853114107457757, 0.7762239064561369]
probability [0.3425069649267538, 0.3442604167988479, 0.3132326182743983]
probabilityTotal [0.34250696 0.68676738 1.        ]
每一轮选择的下标，result: [2 1 0 2 1 1 2 0 0 0 2 0 2 0 0 1 2 0 0 1 2 1 2 2 1 0 0 1 0 1 1 1 0 1 1 1 0
 0 1 1 2 1 0 0 1 2 1 1 1 0 2 1 1 2 1 1 1 1 1 0 0 2 1 2 0 2 1 0 1 0 1 1 1 1
 2 1 1 1 0 2 1 0 2 2 1 0 2 1 2 0 1 1 2 0 0 1 1 2 0 1]
每个概率被转中的次数, count: [30 46 24]
choose which one? [1]
ys [0.36690189 0.35065241 0.23713737 ... 0.41969296 0.29323666 0.33360318]
7  ys.argmax() 3581
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:297.602
训练集长度= 17
accuracy= 0.025266433127394877
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877]
三个采集函数选出的max_idx [6738, 6738, 9879]
max_means [-226.72800708 -226.72800708 -321.90758078]  max_stds [370.06105303 370.06105303 434.37433643]
所有模型的可信度所占权重  [0.12499952528418858, 0.12499967054533402, 0.12499977360180037, 0.12499982094474686, 0.12500001556027826, 0.12500020183137783, 0.125000378692759, 0.1250006135395152]
三个函数的累计增益为[0.8754391212286323, 0.8792412045674847, 0.7658709439486513]
probability [0.3473204975978448, 0.3488289308459562, 0.30385057155619916]
probabilityTotal [0.3473205  0.69614943 1.        ]
每一轮选择的下标，result: [1 2 0 0 2 1 1 2 2 0 0 1 0 2 0 0 1 1 0 1 1 2 0 2 1 0 1 0 0 0 1 0 2 2 1 2 0
 2 1 0 0 0 1 1 2 1 0 1 2 2 1 0 0 1 1 2 1 2 0 0 2 1 0 0 0 1 0 2 2 1 0 0 1 0
 1 1 1 0 1 1 2 1 0 1 0 2 0 1 0 1 1 1 1 0 0 2 1 2 0 0]
每个概率被转中的次数, count: [39 38 23]
choose which one? [0]
ys [ 62.36086915  88.25379605  32.59345353 ...  30.44886602 103.06077262
  27.99698835]
8  ys.argmax() 6738
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:228.676
训练集长度= 18
accuracy= 0.025266480404939628
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628]
三个采集函数选出的max_idx [7746, 7746, 6698]
max_means [-230.14229616 -230.14229616 -313.53990461]  max_stds [359.63818114 359.63818114 421.00807228]
所有模型的可信度所占权重  [0.11111060544452961, 0.11111073456545052, 0.11111082617112938, 0.11111086825371679, 0.11111104124516995, 0.11111120681935595, 0.11111136402935412, 0.11111157278186903, 0.1111117806894248]
三个函数的累计增益为[0.8841036384207916, 0.8874832655095346, 0.7764728290779777]
probability [0.34697131584784174, 0.3482976690117658, 0.30473101514039236]
probabilityTotal [0.34697132 0.69526898 1.        ]
每一轮选择的下标，result: [2 1 2 1 1 1 1 2 1 2 1 2 0 0 0 0 0 1 1 0 1 1 1 2 0 0 0 2 0 1 1 2 1 0 0 2 1
 0 1 1 1 1 0 1 1 2 0 2 0 2 1 2 1 2 2 2 1 2 2 2 1 0 2 2 0 1 2 2 1 0 0 1 1 1
 1 1 0 2 1 2 0 0 2 0 1 2 1 2 1 0 0 0 1 2 0 1 2 0 1 2]
每个概率被转中的次数, count: [29 40 31]
choose which one? [1]
ys [0.27273368 0.2419245  0.19837604 ... 0.17969599 0.28744213 0.42350757]
9  ys.argmax() 7746
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:227.192
训练集长度= 19
accuracy= 0.02526650773290746
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746]
三个采集函数选出的max_idx [4518, 4518, 6869]
max_means [-235.85287274 -235.85287274 -278.30647673]  max_stds [362.00351457 362.00351457 393.73801371]
所有模型的可信度所占权重  [0.0999994738224391, 0.09999959003118532, 0.0999996724762377, 0.09999971035053944, 0.09999986604273663, 0.10000001505939811, 0.10000015654829589, 0.10000034442542578, 0.10000053154209297, 0.10000063970164925]
三个函数的累计增益为[0.8875699266091734, 0.8906115888270891, 0.810714226277607]
probability [0.3428372615814938, 0.34401214945701025, 0.3131505889614959]
probabilityTotal [0.34283726 0.68684941 1.        ]
每一轮选择的下标，result: [0 0 2 2 0 2 2 2 2 1 0 1 0 1 1 2 1 1 1 2 2 1 1 2 0 1 0 2 1 1 1 1 2 1 2 1 1
 2 2 1 2 0 1 1 1 1 1 1 0 2 0 1 0 1 2 0 0 1 2 0 2 2 2 2 1 0 0 1 2 1 0 1 1 2
 1 0 2 0 2 2 1 0 1 1 1 1 1 2 1 1 0 0 2 1 1 0 2 2 1 1]
每个概率被转中的次数, count: [23 45 32]
choose which one? [1]
ys [0.21773702 0.18410156 0.25005688 ... 0.27501651 0.30630424 0.26992753]
10  ys.argmax() 4518
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:240.967
训练集长度= 20
accuracy= 0.025266543535316273
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273]
三个采集函数选出的max_idx [227, 227, 9242]
max_means [-236.71470147 -236.71470147 -282.55313659]  max_stds [351.91640873 351.91640873 385.00830987]
所有模型的可信度所占权重  [0.09090854798759189, 0.09090865363183159, 0.09090872858182596, 0.0909087630129849, 0.09090890455124544, 0.09090904002084146, 0.09090916864702081, 0.09090933944429028, 0.09090950955023053, 0.09090960787703002, 0.09090973669510732]
三个函数的累计增益为[0.8935095342881162, 0.8962746797946857, 0.8118730519323172]
probability [0.34343860198644777, 0.3445014420240999, 0.31205995598945246]
probabilityTotal [0.3434386  0.68794004 1.        ]
每一轮选择的下标，result: [0 1 1 1 2 2 1 2 2 0 0 0 1 0 1 1 0 1 2 0 0 0 1 2 1 0 1 0 1 2 2 0 0 2 1 0 2
 2 0 1 1 2 2 2 0 0 1 0 1 1 2 1 1 1 1 0 0 0 0 2 1 1 0 1 1 0 0 0 1 1 2 2 2 2
 2 1 0 1 0 1 2 2 0 0 0 0 0 0 2 0 0 2 1 2 0 1 1 1 2 0]
每个概率被转中的次数, count: [38 35 27]
choose which one? [0]
ys [87.40849922 73.94680722 65.67870823 ... 54.70172965 41.83008567
 94.76517221]
11  ys.argmax() 227
================= config26 =================
2022年 07月 14日 星期四 13:10:09 CST
cmd

end before line
finish
================= config27 =================
2022年 07月 14日 星期四 13:16:50 CST
cmd

end before line
finish
================= config28 =================
2022年 07月 14日 星期四 13:23:12 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 14日 星期四 13:30:42 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 14日 星期四 13:37:43 CST
cmd

end before line
finish
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:234.383
训练集长度= 21
accuracy= 0.025266531798236742
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742]
三个采集函数选出的max_idx [5385, 7099, 5385]
max_means [-278.12671778 -218.42113441 -278.12671778]  max_stds [375.77118747 273.86018342 375.77118747]
所有模型的可信度所占权重  [0.08333278955064617, 0.08333288639114565, 0.08333295509526915, 0.08333298665714739, 0.08333311640048109, 0.0833332405808754, 0.08333335848814125, 0.08333351505221831, 0.08333367098257727, 0.08333376111542694, 0.08333387919859912, 0.08333384048747244]
三个函数的累计增益为[0.8568712444818958, 0.923822964334228, 0.8201769416808089]
probability [0.32945547660758917, 0.35519751301702074, 0.31534701037539004]
probabilityTotal [0.32945548 0.68465299 1.        ]
每一轮选择的下标，result: [1 1 0 1 0 1 0 0 1 2 1 1 1 2 0 0 1 1 1 1 0 0 0 2 0 2 2 1 1 0 2 1 2 1 0 2 2
 2 2 2 0 0 2 2 1 0 2 0 0 1 0 2 2 0 2 0 2 0 2 1 2 1 2 0 0 0 1 1 2 2 1 2 0 1
 1 1 1 1 0 1 0 2 0 1 0 1 1 1 2 2 2 0 0 2 0 1 0 0 2 0]
每个概率被转中的次数, count: [35 34 31]
choose which one? [0]
ys [60.4319563  56.90853487 73.93330956 ... 73.53841451 54.36090553
 41.7185218 ]
12  ys.argmax() 5385
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:231.627
训练集长度= 22
accuracy= 0.02526654093903132
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132]
三个采集函数选出的max_idx [6728, 3787, 4423]
max_means [-262.47435655 -222.99314485 -315.13111344]  max_stds [357.30340746 275.61670336 379.70147071]
所有模型的可信度所占权重  [0.076922536818458, 0.07692262620964395, 0.07692268962880341, 0.07692271876283041, 0.07692283852584827, 0.07692295315384771, 0.07692306199126989, 0.07692320651188474, 0.0769233504475293, 0.07692343364704159, 0.07692354264683877, 0.07692350691350879, 0.07692353474249539]
三个函数的累计增益为[0.8729313582538025, 0.9237478001606505, 0.7873123232502152]
probability [0.33782284672681645, 0.35748871724822806, 0.3046884360249555]
probabilityTotal [0.33782285 0.69531156 1.        ]
每一轮选择的下标，result: [0 1 2 0 1 0 0 2 2 2 1 2 0 0 0 1 2 1 2 2 2 2 0 2 1 0 0 0 0 2 1 2 1 2 2 2 0
 1 1 1 2 1 0 1 2 2 2 2 0 0 0 0 1 2 0 0 2 0 2 1 2 2 1 2 0 1 1 2 1 0 2 2 1 2
 0 0 0 1 0 0 0 0 0 2 0 0 0 1 0 1 1 1 0 0 1 2 1 0 2 0]
每个概率被转中的次数, count: [39 27 34]
choose which one? [0]
ys [56.56016729 97.0684762  65.70336338 ... 37.22809501 91.20230971
 43.15687919]
13  ys.argmax() 6728
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:294.771
训练集长度= 23
accuracy= 0.02526648576118008
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008]
三个采集函数选出的max_idx [3221, 9505, 9754]
max_means [-240.37749019 -239.37885239 -276.99151615]  max_stds [322.24372956 316.35331443 355.30440148]
所有模型的可信度所占权重  [0.0714280506794807, 0.07142813368555961, 0.07142819257476327, 0.07142821962778105, 0.0714283308362677, 0.07142843727652426, 0.07142853833981766, 0.07142867253749532, 0.07142880619198645, 0.07142888344865564, 0.07142898466272579, 0.07142895148178545, 0.07142897732298033, 0.07142882133417702]
三个函数的累计增益为[0.8978066484137971, 0.9085143142518963, 0.8239483439219395]
probability [0.3413363970621557, 0.3454073360383591, 0.31325626689948527]
probabilityTotal [0.3413364  0.68674373 1.        ]
每一轮选择的下标，result: [1 1 1 2 0 0 1 1 2 0 1 1 0 2 0 1 1 0 2 1 2 2 1 2 1 2 1 2 1 1 2 0 0 2 0 2 1
 1 1 0 0 0 1 0 2 1 2 2 0 1 2 2 0 0 0 1 0 2 1 0 2 0 2 1 1 0 1 0 1 1 2 0 2 0
 1 0 2 1 2 2 1 1 1 2 1 2 2 2 2 0 0 0 0 1 2 2 1 1 0 2]
每个概率被转中的次数, count: [30 37 33]
choose which one? [1]
ys [0.26229718 0.23576024 0.32568009 ... 0.25185135 0.07649715 0.34101168]
14  ys.argmax() 9505
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:281.702
训练集长度= 24
accuracy= 0.025266492714056288
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288]
三个采集函数选出的max_idx [860, 3456, 4492]
max_means [-260.28827966 -220.44835768 -305.85051547]  max_stds [329.22633967 281.06882977 359.4789003 ]
所有模型的可信度所占权重  [0.066666163861592, 0.06666624133391283, 0.06666629629715574, 0.06666632154663266, 0.0666664253411941, 0.06666652468540855, 0.06666661901112532, 0.06666674426225963, 0.06666686900641997, 0.0666669411126264, 0.0666670355790681, 0.06666700461019824, 0.06666702872864073, 0.06666688313912761, 0.06666690148463833]
三个函数的累计增益为[0.8779821339933653, 0.9356683537196628, 0.7967189307812814]
probability [0.3363440162043406, 0.35844288823279535, 0.30521309556286397]
probabilityTotal [0.33634402 0.6947869  1.        ]
每一轮选择的下标，result: [0 1 0 2 0 0 1 0 1 2 0 1 0 2 0 2 2 0 1 0 2 2 0 1 0 0 1 2 2 1 0 2 1 0 0 1 1
 1 1 1 0 2 0 1 2 0 2 0 2 0 2 1 1 1 2 0 1 2 0 1 0 0 0 2 2 1 0 1 2 1 2 1 2 0
 0 2 0 1 0 2 1 2 1 1 2 0 2 1 0 2 0 1 2 0 1 0 2 1 1 2]
每个概率被转中的次数, count: [36 33 31]
choose which one? [0]
ys [53.29385022 80.33691433 41.31823698 ... 83.26736213 73.23137727
 38.39816081]
15  ys.argmax() 860
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:237.768
训练集长度= 25
accuracy= 0.025266468585930325
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325]
三个采集函数选出的max_idx [8852, 7963, 1524]
max_means [-251.71950759 -231.70438911 -278.67498574]  max_stds [320.13630638 285.76868822 333.66579424]
所有模型的可信度所占权重  ================= config31 =================
2022年 07月 14日 星期四 13:44:11 CST
cmd

end before line
finish
================= config32 =================
2022年 07月 14日 星期四 13:50:40 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 14日 星期四 13:56:54 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 14日 星期四 14:04:28 CST
cmd

end before line
finish
[0.06249951859172359, 0.06249959122201271, 0.06249964275004467, 0.06249966642142548, 0.06249976372881121, 0.06249985686399732, 0.0624999452943426, 0.06250006271726218, 0.06250017966489373, 0.06250024726445141, 0.0625003358267263, 0.06250030679341546, 0.06250032940445167, 0.06250019291430502, 0.06250021011321856, 0.06250015042891811]
三个函数的累计增益为[0.8890560010276809, 0.9241555425935334, 0.82258349374398]
probability [0.3373008858520362, 0.35061737710734214, 0.3120817370406216]
probabilityTotal [0.33730089 0.68791826 1.        ]
每一轮选择的下标，result: [2 2 1 0 2 0 1 1 2 1 0 0 2 2 0 0 0 0 1 2 0 2 0 1 1 2 0 1 0 0 2 2 2 0 1 2 2
 2 0 0 2 0 2 0 1 2 0 1 1 2 0 0 0 0 2 2 1 1 1 1 1 1 1 1 2 0 0 2 2 0 1 0 0 0
 1 1 2 0 0 2 2 0 0 2 1 0 1 0 1 0 0 2 1 2 2 0 1 2 2 1]
每个概率被转中的次数, count: [38 29 33]
choose which one? [0]
ys [53.64110215 42.63053464 56.86556912 ... 14.77214221 22.74631759
 75.42947296]
16  ys.argmax() 8852
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:238.595
训练集长度= 26
accuracy= 0.025266498840491543
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543]
三个采集函数选出的max_idx [1316, 8262, 4293]
max_means [-239.59378224 -225.49890862 -267.99064374]  max_stds [306.82546507 240.08184546 326.68929299]
所有模型的可信度所占权重  [0.0588230638501464, 0.05882313220805107, 0.05882318070501205, 0.05882320298395397, 0.058823294567356424, 0.05882338222398359, 0.0588234654525262, 0.05882357596819179, 0.05882368603652756, 0.058823749659627174, 0.058823833012338816, 0.058823805686875584, 0.05882382696784633, 0.05882369850655906, 0.05882371469376838, 0.05882365852032105, 0.05882372895691458]
三个函数的累计增益为[0.9052686534143819, 0.9345819802209625, 0.8364788108619228]
probability [0.3382500817586869, 0.34920289134902005, 0.3125470268922929]
probabilityTotal [0.33825008 0.68745297 1.        ]
每一轮选择的下标，result: [1 2 1 1 2 1 1 1 1 0 0 2 1 1 1 2 1 0 1 1 1 2 1 1 2 2 1 1 0 0 1 0 1 1 1 2 2
 1 1 1 1 2 0 2 0 0 2 1 1 2 0 2 1 1 2 2 1 0 2 1 2 1 1 1 0 1 2 1 1 1 0 1 0 1
 0 2 2 0 2 0 1 2 0 0 2 2 0 2 0 1 0 2 2 2 2 1 0 2 2 0]
每个概率被转中的次数, count: [24 44 32]
choose which one? [1]
ys [0.24350139 0.13182623 0.13422241 ... 0.40747471 0.20211176 0.36385352]
17  ys.argmax() 8262
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:223.119
训练集长度= 27
accuracy= 0.025266513239966294
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294]
三个采集函数选出的max_idx [7936, 6896, 7936]
max_means [-254.29997278 -216.26433068 -254.29997278]  max_stds [314.04069573 246.49666193 314.04069573]
所有模型的可信度所占权重  [0.05555510362964107, 0.055555168189870156, 0.05555521399254545, 0.05555523503376374, 0.05555532152918035, 0.055555404315976664, 0.05555548292069406, 0.05555558729657747, 0.055555691249982816, 0.05555575133845256, 0.05555583006044067, 0.05555580425306441, 0.055555824351754574, 0.055555703027232194, 0.055555718315148744, 0.05555566526246017, 0.05555573178589497, 0.05555576344731993]
三个函数的累计增益为[0.8898503754196831, 0.9526096887935225, 0.8542850908311999]
probability [0.329971993740369, 0.35324423852643816, 0.3167837677331927]
probabilityTotal [0.32997199 0.68321623 1.        ]
每一轮选择的下标，result: [1 1 0 0 1 1 1 1 1 0 2 0 2 0 2 0 0 2 1 1 1 0 0 2 0 0 2 0 2 2 0 1 2 2 0 0 2
 2 0 1 1 0 2 2 0 1 0 1 1 1 1 2 2 2 1 2 1 0 1 2 0 1 0 1 1 2 2 2 2 1 2 2 1 0
 1 2 1 2 0 1 1 2 1 2 1 0 0 1 0 1 2 2 0 2 0 2 0 1 1 1]
每个概率被转中的次数, count: [30 37 33]
choose which one? [1]
ys [0.0571757  0.35778222 0.11704878 ... 0.05791459 0.16306166 0.35102993]
18  ys.argmax() 6896
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:292.203
训练集长度= 28
accuracy= 0.02526657447558205
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205]
三个采集函数选出的max_idx [6329, 6329, 616]
max_means [-236.03456841 -236.03456841 -303.4214319 ]  max_stds [278.1338617  278.1338617  322.53579235]
所有模型的可信度所占权重  [0.0526311337278135, 0.052631194890115945, 0.052631238282110034, 0.05263125821588932, 0.05263134015888899, 0.05263141858846005, 0.052631493056062885, 0.05263159193844666, 0.052631690420588184, 0.05263174734648842, 0.052631821925189795, 0.05263179747610443, 0.052631816516962616, 0.052631701577978716, 0.05263171606126338, 0.05263166580083788, 0.05263172882301882, 0.052631758818043266, 0.052631886375737076]
三个函数的累计增益为[0.9120531910678467, 0.9266830629142233, 0.7989257246054611]
probability [0.3457809220710879, 0.3513274522804709, 0.3028916256484412]
probabilityTotal [0.34578092 0.69710837 1.        ]
每一轮选择的下标，result: [1 2 2 1 1 0 2 1 1 0 2 2 0 1 0 0 0 2 2 1 2 0 0 0 1 1 2 1 0 2 1 2 0 1 1 0 1
 1 0 1 1 2 1 1 2 1 2 1 0 0 0 1 1 2 1 1 1 0 0 2 0 0 1 0 1 2 0 0 1 0 2 0 2 2
 1 0 1 2 2 1 1 0 0 2 2 2 1 1 0 1 1 2 2 0 1 1 0 1 0 0]
每个概率被转中的次数, count: [33 40 27]
choose which one? [1]
ys [0.26297263 0.23719748 0.27563848 ... 0.09597222 0.17514285 0.14577918]
19  ys.argmax() 6329
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:235.209
训练集长度= 29
accuracy= 0.025266578219894177
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177]
三个采集函数选出的max_idx [5643, 1882, 3394]
max_means [-250.3241875  -230.64265688 -278.89675985]  max_stds [287.47748738 263.54897723 308.9354676 ]
所有模型的可信度所占权重  ================= config35 =================
2022年 07月 14日 星期四 14:11:01 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 14日 星期四 14:17:13 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 14日 星期四 14:23:44 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 14日 星期四 14:30:03 CST
cmd

end before line
finish
[0.04999956206822351, 0.049999620172393434, 0.04999966139477548, 0.04999968033186012, 0.049999758177686496, 0.04999983268575669, 0.0499999034299582, 0.04999999736819465, 0.050000090926201085, 0.050000145005790114, 0.050000215855535206, 0.05000019262891106, 0.05000021071772093, 0.05000010152571892, 0.05000011528483523, 0.0500000675374453, 0.05000012740849926, 0.05000015590376395, 0.050000277083536784, 0.05000028449319352]
三个函数的累计增益为[0.8952806347463966, 0.935288714722657, 0.8255276984366982]
probability [0.33706623613481934, 0.3521289688793948, 0.31080479498578584]
probabilityTotal [0.33706624 0.68919521 1.        ]
每一轮选择的下标，result: [1 1 0 1 2 1 0 2 2 2 2 1 2 1 1 1 2 2 1 0 1 1 2 2 0 1 1 1 0 1 1 1 2 0 1 2 0
 0 0 1 2 2 1 0 1 1 1 0 1 2 1 1 2 1 0 0 1 1 1 2 0 0 0 2 0 0 0 0 2 2 1 0 2 0
 2 1 2 2 1 1 0 0 0 0 1 0 1 1 1 2 0 2 1 2 1 2 0 2 1 2]
每个概率被转中的次数, count: [29 41 30]
choose which one? [1]
ys [0.18899506 0.30644896 0.32671053 ... 0.26591382 0.22624032 0.198776  ]
20  ys.argmax() 1882
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:236.838
训练集长度= 30
accuracy= 0.025266589778197384
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384]
三个采集函数选出的max_idx [6041, 5535, 4435]
max_means [-236.84105956 -231.00458001 -276.32171881]  max_stds [270.37070165 222.72893833 295.8646588 ]
所有模型的可信度所占权重  [0.04761861660178868, 0.04761867193907717, 0.047618711198477146, 0.047618729233790576, 0.04761880337265113, 0.047618874332697216, 0.0476189417081075, 0.047619031173068406, 0.0476191202759056, 0.047619171780261024, 0.047619239256188974, 0.04761921713560103, 0.04761923436303395, 0.04761913037068153, 0.04761914347459799, 0.04761909800090661, 0.04761915502094131, 0.04761918215928069, 0.04761929756855436, 0.04761930462536824, 0.0476193264090208]
三个函数的累计增益为[0.913795469032106, 0.9339118160081573, 0.8270292298898609]
probability [0.3416394339896236, 0.34916030449920976, 0.3092002615111667]
probabilityTotal [0.34163943 0.69079974 1.        ]
每一轮选择的下标，result: [0 0 0 1 1 1 0 0 2 2 1 0 2 1 2 0 1 1 2 0 2 2 1 1 0 1 1 1 2 2 0 1 2 2 2 0 1
 1 0 1 2 0 0 0 0 1 2 0 0 0 2 2 1 1 2 0 2 1 2 0 1 1 0 0 2 0 1 0 0 2 1 0 0 2
 0 0 0 1 2 1 1 0 0 1 2 2 0 0 1 0 1 2 2 0 0 0 0 0 1 2]
每个概率被转中的次数, count: [41 31 28]
choose which one? [0]
ys [21.1767561  28.77261691 33.25517967 ... 25.92879417 36.43329296
 40.56667131]
21  ys.argmax() 6041
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1107
runtime:238.46
训练集长度= 31
accuracy= 0.025266614896723355
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355]
三个采集函数选出的max_idx [5306, 8799, 4211]
max_means [-245.92404906 -231.97651433 -285.56893108]  max_stds [266.06215315 209.68973859 300.13407707]
所有模型的可信度所占权重  [0.04545411987883326, 0.045454172700774016, 0.04545421017564414, 0.04545422739116524, 0.04545429816005556, 0.04545436589462391, 0.04545443020749553, 0.04545451560584072, 0.04545460065852247, 0.045454649821755524, 0.04545471423057579, 0.04545469311547569, 0.04545470955983836, 0.04545461029444195, 0.04545462280272195, 0.04545457939603005, 0.04545463382422805, 0.04545465972899848, 0.04545476989236179, 0.0454547766284093, 0.04545479742188936, 0.04545484261031881]
三个函数的累计增益为[0.9017256933054706, 0.9324910735228916, 0.8172005895044672]
probability [0.340091947860161, 0.3516953192207425, 0.30821273291909645]
probabilityTotal [0.34009195 0.69178727 1.        ]
每一轮选择的下标，result: [2 0 1 2 2 0 2 1 0 2 1 0 2 2 1 0 0 1 1 1 1 0 0 1 0 1 0 1 1 2 1 1 2 0 0 1 1
 1 1 2 1 0 0 1 0 2 0 1 1 0 1 1 2 1 1 1 1 0 1 0 1 1 2 1 1 0 1 0 2 2 0 1 2 1
 2 0 2 0 0 0 0 1 0 2 0 0 1 2 1 0 2 1 2 1 1 1 0 0 2 0]
每个概率被转中的次数, count: [34 43 23]
choose which one? [1]
ys [0.24978908 0.18140259 0.28162359 ... 0.19177223 0.1569787  0.30805194]
22  ys.argmax() 8799
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:220.988
训练集长度= 32
accuracy= 0.025266631484272294
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294]
三个采集函数选出的max_idx [6645, 4662, 2422]
max_means [-232.97236415 -224.89696474 -296.21988396]  max_stds [253.5768819  227.59077349 294.73179099]
所有模型的可信度所占权重  [0.04347784019816122, 0.043477890723480045, 0.04347792656899678, 0.04347794303601182, 0.04347801072797269, 0.043478075517539544, 0.04347813703418011, 0.04347821871952822, 0.04347830007424184, 0.043478347099928316, 0.04347840870834582, 0.04347838851129986, 0.043478404240685324, 0.043478309291205414, 0.04347832125564341, 0.043478279736211975, 0.0434783317979503, 0.04347835657641861, 0.04347846195003751, 0.04347846839321138, 0.04347848828262087, 0.04347853150632247, 0.04347856005000638]
三个函数的累计增益为[0.9204068012818357, 0.9465939969591197, 0.8014633054495299]
probability [0.34492006094776134, 0.3547336445897774, 0.3003462944624611]
probabilityTotal [0.34492006 0.69965371 1.        ]
每一轮选择的下标，result: [0 2 1 0 1 1 2 1 0 1 1 0 0 0 1 1 2 1 1 0 0 1 0 1 1 1 0 1 1 0 0 0 0 2 2 2 0
 2 1 0 0 2 0 0 1 0 1 2 0 1 1 0 1 2 1 0 1 2 2 1 1 2 0 1 1 0 1 0 2 1 1 2 0 2
 2 0 1 0 2 0 2 0 1 1 0 1 1 0 2 2 1 2 1 2 2 1 0 1 0 0]
每个概率被转中的次数, count: [36 40 24]
choose which one? [1]
ys [0.01925911 0.36751072 0.29844958 ... 0.1029536  0.13746997 0.04144531]
23  ys.argmax() 4662
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:226.783
训练集长度= 33
accuracy= 0.025266643049869773
所有模型的可信度  ================= config39 =================
2022年 07月 14日 星期四 14:35:38 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 14日 星期四 14:38:10 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 14日 星期四 14:45:47 CST
cmd

end before line
finish
[0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773]
三个采集函数选出的max_idx [4089, 5035, 970]
max_means [-243.57683652 -220.46402223 -267.6618852 ]  max_stds [253.46857402 188.27945553 280.33372268]
所有模型的可信度所占权重  [0.04166625078222741, 0.04166629920230981, 0.04166633355425285, 0.04166634933513743, 0.04166641420658009, 0.04166647629656268, 0.04166653524999186, 0.041666613531759863, 0.041666691496669905, 0.041666736562939, 0.04166679560432105, 0.041666776248824595, 0.04166679132281439, 0.041666700329590634, 0.04166671179550687, 0.04166667200606391, 0.04166672189854788, 0.041666745644572754, 0.04166684662759332, 0.04166685280229972, 0.04166687186297799, 0.041666913285679355, 0.04166694064003474, 0.04166695971274192]
三个函数的累计增益为[0.9054937867358537, 0.9562101937749213, 0.8359620902668827]
probability [0.335658218244494, 0.35445832385743503, 0.3098834578980709]
probabilityTotal [0.33565822 0.69011654 1.        ]
每一轮选择的下标，result: [0 0 2 0 0 1 1 0 0 1 1 2 1 1 1 2 1 2 2 0 1 2 0 2 1 2 1 1 2 2 1 1 2 0 0 2 0
 0 1 0 0 2 0 0 0 2 2 0 0 2 0 2 0 1 0 0 2 0 2 1 0 1 1 1 2 2 1 1 2 1 0 0 1 0
 0 0 1 1 1 1 1 0 0 0 2 1 0 2 2 1 0 1 0 0 1 0 1 1 1 2]
每个概率被转中的次数, count: [38 36 26]
choose which one? [0]
ys [15.28712579 25.76803799 34.09662887 ... 11.40264372 27.76716969
 41.49008827]
24  ys.argmax() 4089
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
runtime:2209
训练集长度= 34
accuracy= 0.02526659465103585
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585]
三个采集函数选出的max_idx [8984, 8512, 1998]
max_means [-253.76199378 -251.99431906 -279.81804401]  max_stds [420.38428657 405.92801361 441.49600118]
所有模型的可信度所占权重  [0.039999592562910656, 0.03999963904618025, 0.03999967202403881, 0.039999687173684906, 0.03999974945025712, 0.0399998090566282, 0.03999986565190863, 0.03999994080239053, 0.040000015648688846, 0.04000005891229832, 0.04000011559201349, 0.0400000970107407, 0.04000011148176793, 0.040000024128291005, 0.040000035135568345, 0.03999999693771092, 0.04000004483448573, 0.040000067630664944, 0.04000016457434484, 0.04000017050206177, 0.04000018880030916, 0.04000022856609434, 0.04000025482627013, 0.04000027313606527, 0.04000019651462519]
三个函数的累计增益为[0.9108689681844977, 0.9264972521100947, 0.8503474478196542]
probability [0.3389010440325593, 0.3447157571513723, 0.3163831988160684]
probabilityTotal [0.33890104 0.6836168  1.        ]
每一轮选择的下标，result: [0 2 0 2 1 1 1 0 1 1 0 0 0 1 2 2 0 2 0 0 2 2 1 1 2 1 1 0 1 2 2 0 2 1 0 0 1
 1 1 0 1 1 1 2 1 1 2 2 1 0 2 1 1 0 0 2 0 2 1 0 2 0 1 1 2 1 0 2 0 2 1 0 2 2
 1 1 2 0 1 1 2 2 1 0 0 0 0 1 2 1 2 0 0 1 0 0 1 1 0 2]
每个概率被转中的次数, count: [33 38 29]
choose which one? [1]
ys [0.35450452 0.40170968 0.34035984 ... 0.24083127 0.33971839 0.38161976]
25  ys.argmax() 8512
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:296.199
训练集长度= 35
accuracy= 0.025266637442055873
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585, 0.025266637442055873]
三个采集函数选出的max_idx [8050, 8050, 6895]
max_means [-242.7638291  -242.7638291  -282.66863426]  max_stds [414.88907643 414.88907643 435.81806923]
所有模型的可信度所占权重  [0.03846113692234635, 0.03846118161778653, 0.038461213327257854, 0.03846122789422155, 0.03846128777552577, 0.03846134508932955, 0.0384613995078546, 0.038461471767914986, 0.03846154373549124, 0.03846158533510516, 0.038461639834817436, 0.038461621968213525, 0.03846163588265925, 0.03846155188895278, 0.03846156247287061, 0.03846152574417088, 0.038461571798750344, 0.03846159371814786, 0.038461686933201, 0.03846169263292737, 0.038461710227391546, 0.03846174846371373, 0.038461773713876345, 0.038461791319444126, 0.03846171764500123, 0.03846178278302844]
三个函数的累计增益为[0.9220486423417265, 0.9364963844978227, 0.8487552446619769]
probability [0.3405786391881602, 0.3459152257161419, 0.31350613509569786]
probabilityTotal [0.34057864 0.68649386 1.        ]
每一轮选择的下标，result: [2 0 0 1 0 0 1 1 0 2 1 2 1 0 1 0 1 2 1 2 1 1 1 1 1 1 2 0 0 1 1 2 0 2 0 1 2
 0 1 0 1 0 0 0 0 1 0 2 2 1 0 1 2 1 1 2 1 2 1 1 2 2 0 1 1 1 2 2 2 2 1 2 1 2
 1 1 2 2 0 0 1 1 1 1 0 0 1 1 1 2 2 0 0 1 0 0 0 2 2 0]
每个概率被转中的次数, count: [30 42 28]
choose which one? [1]
ys [0.25965411 0.39544121 0.29432135 ... 0.38756786 0.32284282 0.36275166]
26  ys.argmax() 8050
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:237.165
训练集长度= 36
accuracy= 0.02526666581722593
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585, 0.025266637442055873, 0.02526666581722593]
三个采集函数选出的max_idx [8636, 1641, 9286]
max_means [-258.34514058 -252.93255126 -307.27564079]  max_stds [411.73887883 401.90928554 436.87152978]
所有模型的可信度所占权重  [0.03703664011546261, 0.037036683155504194, 0.037036713690542206, 0.037036727717984844, 0.037036785381447015, 0.03703684057250204, 0.03703689297551165, 0.03703696255925424, 0.03703703186134552, 0.03703707192022191, 0.0370371244014118, 0.037037107196538716, 0.03703712059563089, 0.037037039712824835, 0.03703704990474288, 0.03703701453637516, 0.037037058885217175, 0.03703707999277931, 0.037037169755398225, 0.0370371752440221, 0.03703719218683476, 0.037037229006986666, 0.03703725332195135, 0.03703727027545636, 0.037037199329716185, 0.0370372620552065, 0.037037303649130965]
三个函数的累计增益为[0.9081681594326297, 0.9265519262203195, 0.8281754278742757]
================= config42 =================
2022年 07月 14日 星期四 14:52:16 CST
cmd

end before line
finish
================= config43 =================
2022年 07月 14日 星期四 14:58:41 CST
cmd

end before line
finish
================= config44 =================
2022年 07月 14日 星期四 15:05:12 CST
cmd

end before line
finish
probability [0.3410453601424586, 0.3479490357445625, 0.31100560411297884]
probabilityTotal [0.34104536 0.6889944  1.        ]
每一轮选择的下标，result: [0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 2 0 2 2 2 0 2 2 2 1 2 2 1 1 1 0 2 1
 0 2 1 2 1 2 0 2 0 0 0 0 1 2 2 2 1 1 1 2 1 2 1 2 1 2 1 1 1 1 0 1 2 1 0 2 2
 2 0 0 0 1 2 0 0 2 1 1 1 2 0 1 2 1 2 1 0 0 0 1 0 2 0]
每个概率被转中的次数, count: [36 33 31]
choose which one? [0]
ys [123.03462085 105.42670115  81.63728385 ... 120.84574777  99.66145307
 118.41745115]
27  ys.argmax() 8636
configNum = 42	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 42 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:229.0
训练集长度= 37
accuracy= 0.02526668343821021
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585, 0.025266637442055873, 0.02526666581722593, 0.02526668343821021]
三个采集函数选出的max_idx [1653, 1653, 8216]
max_means [-223.82523636 -223.82523636 -264.37633365]  max_stds [377.59430959 377.59430959 417.31040136]
所有模型的可信度所占权重  [0.035713892897250715, 0.03571393440013626, 0.035713963844628896, 0.03571397737108763, 0.03571403297512475, 0.035714086195055665, 0.03571413672651497, 0.03571420382510497, 0.03571427065210271, 0.03571430928029405, 0.03571435988714146, 0.03571434329673281, 0.03571435621728234, 0.035714278223169915, 0.035714288051088124, 0.03571425394588601, 0.03571429671082875, 0.035714317064543644, 0.035714403621330326, 0.03571440891393043, 0.035714425251638024, 0.0357144607567745, 0.03571448420334097, 0.03571450055135905, 0.0357144321394146, 0.03571449262469178, 0.03571453273310763, 0.03571455764043907]
三个函数的累计增益为[0.9420148672348807, 0.9555903047425209, 0.8656029416947759]
probability [0.34091347031512076, 0.34582639650423763, 0.31326013318064166]
probabilityTotal [0.34091347 0.68673987 1.        ]
每一轮选择的下标，result: [2 1 2 1 0 1 0 0 2 2 1 2 2 2 2 1 0 2 1 2 1 2 1 1 1 1 1 1 0 1 2 0 2 1 0 1 0
 1 1 2 2 1 2 2 0 0 1 1 0 0 1 1 2 0 0 0 0 0 1 0 2 2 0 0 0 2 1 0 0 0 1 0 1 0
 1 0 1 1 0 2 2 2 2 2 0 2 1 2 0 1 0 2 2 2 2 1 0 0 0 1]
每个概率被转中的次数, count: [34 34 32]
choose which one? [0]
ys [ 79.53279326 101.32846918 131.26408727 ...  88.34570035  99.87272221
 127.42275463]
28  ys.argmax() 1653
configNum = 43	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 43 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:232.263
训练集长度= 38
accuracy= 0.02526671841242139
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585, 0.025266637442055873, 0.02526666581722593, 0.02526668343821021, 0.02526671841242139]
三个采集函数选出的max_idx [1177, 7730, 5124]
max_means [-245.03396203 -242.48062227 -312.95791837]  max_stds [392.07336421 371.10857889 427.65588208]
所有模型的可信度所占权重  [0.034482368649849965, 0.03448240872158909, 0.034482437150745573, 0.03448245021077064, 0.03448250389741052, 0.03448255528215546, 0.03448260407113551, 0.03448266885596093, 0.034482733378559415, 0.034482770674732585, 0.034482819536501126, 0.034482803518180505, 0.034482815993189975, 0.03448274068855307, 0.0344827501775746, 0.03448271724842415, 0.034482758538700885, 0.034482778190557443, 0.03448286176260141, 0.03448286687269648, 0.03448288264702996, 0.03448291692784074, 0.034482939565897895, 0.03448295535018632, 0.03448288929729493, 0.034482947696854775, 0.03448298642220979, 0.03448301047066026, 0.03448305820213612]
三个函数的累计增益为[0.9223533497781193, 0.936820877397355, 0.823647727808902]
probability [0.3437996875135498, 0.34919234042231123, 0.30700797206413893]
probabilityTotal [0.34379969 0.69299203 1.        ]
每一轮选择的下标，result: [2 2 1 1 0 1 1 1 0 0 0 2 1 0 2 1 0 1 2 1 0 1 0 1 0 1 2 0 0 1 2 0 0 2 0 1 1
 2 0 0 0 2 1 0 1 1 1 0 1 0 1 0 0 2 1 1 0 0 0 0 0 0 1 1 2 1 2 0 1 2 0 0 0 1
 0 2 1 0 1 1 2 0 1 1 2 2 2 1 2 1 1 1 2 2 0 0 0 1 2 2]
每个概率被转中的次数, count: [38 38 24]
choose which one? [0]
ys [ 81.30671304 109.20123839  81.32548767 ... 116.30708957  91.97739114
  92.77477878]
29  ys.argmax() 1177
configNum = 44	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 44 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1104
runtime:228.076
训练集长度= 39
accuracy= 0.02526673579724386
所有模型的可信度  [0.025266213157831074, 0.025266242519535097, 0.025266263350387376, 0.025266272919839537, 0.025266312257568934, 0.025266349908634377, 0.02526638565770899, 0.025266433127394877, 0.025266480404939628, 0.02526650773290746, 0.025266543535316273, 0.025266531798236742, 0.02526654093903132, 0.02526648576118008, 0.025266492714056288, 0.025266468585930325, 0.025266498840491543, 0.025266513239966294, 0.02526657447558205, 0.025266578219894177, 0.025266589778197384, 0.025266614896723355, 0.025266631484272294, 0.025266643049869773, 0.02526659465103585, 0.025266637442055873, 0.02526666581722593, 0.02526668343821021, 0.02526671841242139, 0.02526673579724386]
三个采集函数选出的max_idx [3474, 7432, 6549]
max_means [-257.50242598 -243.51086498 -302.94936819]  max_stds [399.48428761 369.26417132 418.92229666]
所有模型的可信度所占权重  [0.033332945943953626, 0.033332984679956004, 0.03333301216146535, 0.0333330247861523, 0.033333076683221295, 0.03333312635512588, 0.03333317351779186, 0.033333236143103524, 0.033333298514929235, 0.03333333456788536, 0.033333381800913525, 0.03333336631654177, 0.03333337837571381, 0.033333305581254226, 0.03333331475397217, 0.03333328292247002, 0.03333332283639172, 0.03333334183318046, 0.03333342261946438, 0.0333334275592214, 0.03333344280773899, 0.03333347594584573, 0.03333349782929414, 0.033333513087434846, 0.03333344923632646, 0.03333350568921666, 0.03333354312371481, 0.03333356637054301, 0.03333361251095524, 0.03333363544622235]
三个函数的累计增益为[0.911349185164014, 0.9361611293164768, 0.83143118229216]
probability [0.3401900288833952, 0.34945187509480147, 0.31035809602180336]
probabilityTotal [0.34019003 0.6896419  1.        ]
每一轮选择的下标，result: [0 1 1 2 0 0 1 0 1 0 1 0 0 1 1 0 0 1 2 0 1 2 0 2 1 0 2 0 1 0 0 2 1 1 2 0 1
 0 2 0 1 1 2 1 0 1 0 2 1 1 2 1 2 0 0 0 1 0 2 1 0 0 0 0 0 0 1 0 1 1 1 2 0 1
 1 1 2 0 2 0 0 1 0 0 2 0 0 0 0 0 1 1 1 1 0 1 2 2 2 1]
每个概率被转中的次数, count: [43 37 20]
choose which one? [0]
ys [104.82027377 104.11542096 111.59772152 ...  81.26660959  89.40768168
  96.49983059]
30  ys.argmax() 3474
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 235, in maximize
    x_probe = next(self._queue)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 26, in __next__
    raise StopIteration("Queue is empty, no more objects to retrieve.")
StopIteration: Queue is empty, no more objects to retrieve.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 327, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 238, in maximize
    x_probe = self.suggest(util)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 145, in suggest
    suggestion = acq_max(
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/util.py", line 85, in acq_max
    res = minimize(lambda x: -ac(x.reshape(1, -1), gp=gp, y_max=y_max, sc=sc),
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 623, in minimize
    return _minimize_lbfgsb(fun, x0, args, jac, bounds,
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/lbfgsb.py", line 360, in _minimize_lbfgsb
    f, g = func_and_grad(x)
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 268, in fun_and_grad
    self._update_grad()
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 238, in _update_grad
    self._update_grad_impl()
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 155, in update_grad
    self.g = approx_derivative(fun_wrapped, self.x, f0=self.f,
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_numdiff.py", line 486, in approx_derivative
    return _dense_difference(fun_wrapped, x0, f0, h,
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_numdiff.py", line 557, in _dense_difference
    df = fun(x) - f0
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_numdiff.py", line 437, in fun_wrapped
    f = np.atleast_1d(fun(x, *args, **kwargs))
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 134, in fun_wrapped
    return fun(np.copy(x), *args)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/util.py", line 85, in <lambda>
    res = minimize(lambda x: -ac(x.reshape(1, -1), gp=gp, y_max=y_max, sc=sc),
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/util.py", line 148, in utility
    return self._combineAC(x, gp, y_max, self.xi, self.kappa, sc)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/util.py", line 195, in _combineAC
    POI = self._poi(x, gp, y_max, xi)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/util.py", line 173, in _poi
    mean, std = gp.predict(x, return_std=True)
  File "/usr/local/home/python3/python3/lib/python3.8/site-packages/sklearn/gaussian_process/_gpr.py", line 326, in predict
    def predict(self, X, return_std=False, return_cov=False):
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 15:15:16 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 14日 星期四 15:20:20 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 14日 星期四 15:25:42 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 14日 星期四 15:29:41 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1479
runtime:295.947
生成测试集 - 配置成功 target -295.947  conf {'spark.broadcast.blockSize': 27.85536429155959, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 4.4402676724513395, 'spark.executor.instances': 8.554031568612787, 'spark.executor.memory': 9.117561268266025, 'spark.executor.memoryOverhead': 857.7637567760185, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 4.772750629629654, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 457.8426654015389, 'spark.storage.memoryMapThreshold': 1.7653979023280013}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1479
runtime:314.471
生成测试集 - 配置成功 target -314.471  conf {'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1161
runtime:232.289
生成测试集 - 配置成功 target -232.289  conf {'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1161
runtime:307.487
生成测试集 - 配置成功 target -307.487  conf ================= config5 =================
2022年 07月 14日 星期四 15:34:56 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 14日 星期四 15:39:02 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 14日 星期四 15:44:05 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 14日 星期四 15:49:20 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 14日 星期四 15:53:17 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 14日 星期四 15:58:26 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 14日 星期四 16:02:27 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1161
runtime:238.034
生成测试集 - 配置成功 target -238.034  conf {'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
X_test [array([2.78553643e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       4.44026767e+00, 8.55403157e+00, 9.11756127e+00, 8.57763757e+02,
       7.00896775e+01, 8.37264065e+01, 4.77275063e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 4.57842665e+02, 1.76539790e+00]), array([4.42139656e+00, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       5.26332288e+00, 1.37473372e+01, 1.11989917e+01, 1.33256352e+03,
       6.22895006e+01, 9.79040891e+01, 8.51163105e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.84651246e+02, 3.38991993e+00]), array([3.24775359e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       5.76791661e+00, 1.21985502e+01, 8.61400657e+00, 9.51670759e+02,
       9.86624151e+01, 7.17612099e+01, 1.44958113e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 3.90399194e+02, 8.94975482e+00]), array([4.06676768e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       6.68765865e+00, 1.05685471e+01, 1.37890403e+01, 1.29357829e+03,
       9.16827891e+01, 4.30156134e+01, 9.54540333e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.06328497e+02, 9.36493510e+00]), array([4.48356089e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       6.79778639e+00, 1.21809090e+01, 8.39600104e+00, 1.41973985e+03,
       1.04372114e+02, 1.20610355e+02, 7.40372283e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.07458916e+02, 8.20569405e+00])]  y_test [-295.947, -314.471, -232.289, -307.487, -238.034]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1161
runtime:295.821
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1161
runtime:307.606
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:229.884
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:301.506
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:232.694
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:617.327
训练集长度= 6
accuracy= 0.014898682144486008
所有模型的可信度  [0.014898682144486008]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-330.80633333 -330.80633333 -330.80633333]  max_stds [131.98874844 131.98874844 131.98874844]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.22224645395230547, 0.22224645395230547, 0.22224645395230547]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config12 =================
2022年 07月 14日 星期四 16:12:52 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 14日 星期四 16:16:57 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 14日 星期四 16:22:04 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 14日 星期四 16:26:04 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 14日 星期四 16:31:46 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 14日 星期四 16:36:51 CST
cmd

end before line
finish
[1 1 1 2 2 2 2 1 1 2 2 2 2 2 0 1 2 0 1 0 0 1 1 0 2 0 1 2 0 1 0 1 0 2 0 2 0
 0 0 2 0 2 1 2 2 2 0 0 2 0 1 2 2 1 2 1 2 1 0 0 2 0 2 2 1 2 2 0 0 2 0 2 1 2
 2 0 0 0 1 1 1 0 0 2 2 1 2 1 1 1 2 1 2 1 2 1 1 1 0 1]
每个概率被转中的次数, count: [29 32 39]
choose which one? [2]
ys [9.19668266 9.19668266 9.19668266 ... 9.19668266 9.19668266 9.19668266]
1 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8324]
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:237.843
训练集长度= 7
accuracy= 0.01489873079655758
所有模型的可信度  [0.014898682144486008, 0.01489873079655758]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-317.52585714 -317.52585714 -317.52585714]  max_stds [126.45369695 126.45369695 126.45369695]
所有模型的可信度所占权重  [0.499999183619201, 0.5000008163807991]
三个函数的累计增益为[0.35525474772003474, 0.35525474772003474, 0.35525474772003474]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 0 1 1 0 0 0 0 0 1 1 2 0 1 1 2 0 1 1 1 1 1 2 0 0 0 1 0 1 0 0 0 1 0 1 1
 2 2 0 2 1 0 2 0 0 0 2 0 1 1 2 1 1 2 1 1 1 0 1 0 0 2 0 1 0 2 2 1 0 0 1 2 1
 1 1 1 0 1 2 2 1 0 0 0 0 0 1 2 1 2 1 2 1 2 0 1 1 0 0]
每个概率被转中的次数, count: [39 41 20]
choose which one? [1]
ys [0.24413134 0.24413134 0.24413134 ... 0.24413134 0.24413134 0.24413134]
2 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2978]
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:298.577
训练集长度= 8
accuracy= 0.014898739473779907
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-315.15725 -315.15725 -315.15725]  max_stds [118.45249 118.45249 118.45249]
所有模型的可信度所占权重  [0.33333254294937603, 0.3333336314563043, 0.33333382559431973]
三个函数的累计增益为[0.3912545478897065, 0.3912545478897065, 0.3912545478897065]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 0 1 2 0 1 0 2 0 0 0 2 0 0 2 2 1 1 2 0 2 2 1 2 2 1 1 1 0 2 0 0 1 0 2 2
 2 1 2 0 2 0 2 0 1 1 2 0 1 2 1 2 1 2 2 0 2 2 0 2 2 0 1 1 1 0 1 2 2 2 2 1 2
 1 2 1 2 0 2 1 0 1 0 1 1 1 2 2 2 0 1 1 1 2 0 1 1 1 2]
每个概率被转中的次数, count: [26 33 41]
choose which one? [2]
ys [-10.02363577 -10.02363577 -10.02363577 ... -10.02363577 -10.02363577
 -10.02363577]
3 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9138]
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:232.052
训练集长度= 9
accuracy= 0.014898773301570998
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-305.92333333 -305.92333333 -305.92333333]  max_stds [114.69139012 114.69139012 114.69139012]
所有模型的可信度所占权重  [0.24999917300656016, 0.24999998938599158, 0.25000013498936674, 0.2500007026180815]
三个函数的累计增益为[0.4292116508029038, 0.4292116508029038, 0.4292116508029038]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 0 1 2 2 1 2 0 1 0 0 2 0 1 1 0 2 0 0 1 1 0 2 2 2 1 1 0 2 2 0 1 1 1 2
 2 0 1 2 2 0 2 2 2 1 1 0 0 1 2 2 1 2 2 0 0 1 1 2 1 1 0 2 0 2 1 1 2 0 2 1 1
 2 0 0 0 1 1 1 1 1 0 2 1 0 1 0 1 2 0 0 2 2 0 1 0 2 2]
每个概率被转中的次数, count: [31 35 34]
choose which one? [1]
ys [0.25366823 0.25366823 0.25366823 ... 0.25366823 0.25366823 0.25366823]
4 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8814]
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:334.634
训练集长度= 10
accuracy= 0.014898762783624309
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-308.7944 -308.7944 -308.7944]  max_stds [109.14618952 109.14618952 109.14618952]
所有模型的可信度所占权重  [0.19999925422517167, 0.1999999073284419, 0.20000002381109303, 0.20000047791387368, 0.20000033672141967]
三个函数的累计增益为[0.42601480912464046, 0.42601480912464046, 0.42601480912464046]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 0 1 1 2 0 1 2 2 1 0 0 0 1 1 0 0 0 0 2 2 2 0 0 2 1 1 0 0 0 1 2 0 0 1 2
 1 0 1 0 0 0 0 1 1 0 2 1 1 0 2 0 0 0 0 0 1 1 2 0 1 2 1 1 2 0 0 2 0 0 1 1 2
 0 1 2 2 0 1 1 2 2 0 2 0 2 1 2 1 0 1 0 1 2 2 1 1 0 1]
每个概率被转中的次数, count: [40 35 25]
choose which one? [0]
ys [14.996828 14.996828 14.996828 ... 14.996828 14.996828 14.996828]
5 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7022]
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1149
runtime:297.027
训练集长度= 11
accuracy= 0.014898766702626649
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-307.72463636 -307.72463636 -307.72463636]  max_stds [104.12177758 104.12177758 104.12177758]
所有模型的可信度所占权重  [0.16666599111426017, 0.1666665353668088, 0.16666663243565324, 0.16666701085451435, 0.1666668931941742, 0.16666693703458924]
三个函数的累计增益为[0.4258011486386887, 0.4258011486386887, 0.4258011486386887]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 2 0 1 1 1 0 0 1 1 2 0 2 2 1 0 1 1 2 2 1 1 2 1 0 1 2 1 2 1 0 2 0 2 1
 1 1 1 2 1 2 1 2 1 2 1 0 0 0 2 2 1 0 0 2 2 2 1 1 0 0 2 0 0 0 0 2 0 1 0 2 2
 0 2 0 2 2 1 1 0 1 1 1 2 1 0 0 0 2 2 0 1 0 0 0 1 1 1]
每个概率被转中的次数, count: [32 37 31]
choose which one? [1]
ys [0.22735306 0.22735306 0.22735306 ... 0.22735306 0.22735306 0.22735306]
6 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8227]
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:222.971
训练集长度= 12
accuracy= 0.014898792569832078
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078]
三个采集函数选出的max_idx [7285, 7285, 7285]
max_means ================= config18 =================
2022年 07月 14日 星期四 16:43:03 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 14日 星期四 16:49:37 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 14日 星期四 16:55:52 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 14日 星期四 17:02:06 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 14日 星期四 17:08:19 CST
cmd

end before line
finish
[-299.65155536 -299.65155536 -299.65155536]  max_stds [102.39145982 102.39145982 102.39145982]
所有模型的可信度所占权重  [0.14285649527359257, 0.1428569617755533, 0.14285704497738003, 0.14285736933624824, 0.14285726848457647, 0.14285730606205704, 0.14285755409059236]
三个函数的累计增益为[0.42953732344318607, 0.42953732344318607, 0.42953732344318607]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 0 2 1 0 2 1 0 2 2 1 0 2 2 2 2 2 2 2 0 2 0 2 1 0 2 0 2 2 0 1 1 0 0 1 0
 1 0 2 1 1 0 0 2 1 0 0 1 0 1 0 1 0 0 0 0 2 1 1 1 0 0 1 1 0 1 1 0 0 0 1 1 2
 2 0 2 1 0 2 1 0 1 2 1 2 2 0 1 2 2 1 1 2 0 1 0 0 2 1]
每个概率被转中的次数, count: [38 32 30]
choose which one? [0]
ys [13.24154384 13.23542549 13.23439135 ... 13.23298045 13.23102401
 13.23379547]
7  ys.argmax() 7285
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:233.124
训练集长度= 13
accuracy= 0.014898811640199097
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097]
三个采集函数选出的max_idx [9405, 9405, 9405]
max_means [-290.56914427 -290.56914427 -290.56914427]  max_stds [99.78133196 99.78133196 99.78133196]
所有模型的可信度所占权重  [0.12499936838609745, 0.12499977657510089, 0.12499984937666145, 0.12500013319052358, 0.12500004494535666, 0.12500007782563508, 0.12500029485049066, 0.1250004548501342]
三个函数的累计增益为[0.4546813818510719, 0.4546813818510719, 0.4546813818510719]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 0 1 1 1 2 2 1 0 0 2 2 2 0 1 0 1 0 2 1 2 1 0 1 0 0 2 2 2 1 0 1 1
 1 0 0 0 2 0 1 2 2 2 0 1 1 1 1 2 0 2 1 0 0 2 1 2 2 0 1 1 1 1 1 2 1 2 1 1 1
 0 1 2 2 2 1 2 1 2 1 1 2 0 1 0 1 1 1 1 1 2 1 0 1 1 0]
每个概率被转中的次数, count: [25 45 30]
choose which one? [1]
ys [0.23419825 0.2346153  0.23430926 ... 0.23411432 0.23480991 0.23299419]
8  ys.argmax() 9405
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:225.778
训练集长度= 14
accuracy= 0.014898829586526968
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968]
三个采集函数选出的max_idx [5121, 5121, 5121]
max_means [-282.29767156 -282.29767156 -282.29767156]  max_stds [97.49716372 97.49716372 97.49716372]
所有模型的可信度所占权重  [0.11111048988238315, 0.11111085271685761, 0.11111091742932105, 0.11111116970817386, 0.11111109126806769, 0.11111112049496613, 0.11111131340584504, 0.11111145562767387, 0.11111158946671157]
三个函数的累计增益为[0.48188004598937967, 0.48188004598937967, 0.48188004598937967]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 0 2 1 2 2 0 1 2 1 1 2 1 2 2 0 2 0 1 0 1 0 1 1 1 1 2 1 0 1 2 2 0 0 0
 1 1 2 0 0 1 0 2 2 1 2 0 1 1 0 2 0 1 2 1 2 2 1 0 1 2 0 0 1 2 2 1 1 1 1 2 1
 2 0 1 1 2 2 2 1 1 1 2 2 1 0 0 0 1 1 1 2 2 0 1 0 2 0]
每个概率被转中的次数, count: [28 39 33]
choose which one? [1]
ys [0.24832766 0.24543451 0.24487663 ... 0.24318747 0.24632866 0.24632138]
9  ys.argmax() 5121
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:226.728
训练集长度= 15
accuracy= 0.014898846060809743
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743]
三个采集函数选出的max_idx [134, 134, 134]
max_means [-273.80950093 -273.80950093 -273.80950093]  max_stds [95.15630251 95.15630251 95.15630251]
所有模型的可信度所占权重  [0.0999993867849908, 0.09999971333584112, 0.0999997715770267, 0.09999999862787137, 0.09999992803181403, 0.09999995433600838, 0.10000012795570547, 0.10000025595528214, 0.10000037641035091, 0.10000048698510908]
三个函数的累计增益为[0.5131285095279212, 0.5131285095279212, 0.5131285095279212]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 2 1 1 0 0 1 0 2 1 1 0 2 0 0 1 2 0 0 1 1 1 0 0 0 0 1 1 2 0 0 2 1 2 0 0
 1 1 1 0 1 2 1 0 0 1 2 2 2 0 0 0 2 2 2 1 1 1 1 0 0 0 2 0 2 2 0 2 2 0 2 1 2
 0 0 0 2 1 1 1 1 1 1 0 1 1 2 0 1 0 0 1 0 2 0 0 0 2 1]
每个概率被转中的次数, count: [40 35 25]
choose which one? [0]
ys [14.58152483 14.92449666 14.33295102 ... 15.00494742 15.25581072
 13.61205767]
10  ys.argmax() 134
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:224.113
训练集长度= 16
accuracy= 0.01489885845637029
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029]
三个采集函数选出的max_idx [7250, 7250, 6223]
max_means [-265.96227411 -265.96227411 -268.14274153]  max_stds [92.27540235 92.27540235 93.31453543]
所有模型的可信度所占权重  [0.09090848631859931, 0.09090878318285482, 0.09090883612935972, 0.09090904253911153, 0.09090897836091083, 0.0909090022738024, 0.09090916010980885, 0.09090927647300005, 0.09090938597755126, 0.09090948650000658, 0.09090956213499465]
三个函数的累计增益为[0.5444672375940549, 0.5444672375940549, 0.5379887242954502]
probability [0.33466068820389744, 0.33466068820389744, 0.3306786235922051]
probabilityTotal [0.33466069 0.66932138 1.        ]
每一轮选择的下标，result: [1 0 2 1 0 2 1 0 2 1 0 2 0 0 2 0 0 2 0 1 1 2 0 2 1 2 1 2 2 2 1 0 0 2 2 1 0
 0 2 0 0 0 1 2 2 1 0 2 2 0 2 1 0 1 0 1 0 2 1 0 2 1 0 0 2 2 0 2 0 1 1 1 0 1
 0 0 1 0 1 0 0 1 0 2 1 2 2 1 0 0 2 2 0 1 1 2 1 0 1 2]
每个概率被转中的次数, count: [38 30 32]
choose which one? [0]
ys [14.91698704 15.42374096 15.78782734 ... 16.08042435 15.36752129
 15.54927339]
11  ys.argmax() 7250
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:291.422
训练集长度= 17
accuracy= 0.014898856960282267
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267]
三个采集函数选出的max_idx [6634, 6634, 3630]
max_means [-268.92421861 -268.92421861 -269.74963363]  max_stds ================= config23 =================
2022年 07月 14日 星期四 17:15:45 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 14日 星期四 17:21:59 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 14日 星期四 17:28:17 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 14日 星期四 17:34:34 CST
cmd

end before line
finish
[89.90990065 89.90990065 90.50415571]
所有模型的可信度所占权重  [0.08333274382654815, 0.08333301595200042, 0.08333306448627603, 0.08333325369513503, 0.08333319486514265, 0.08333321678528396, 0.08333336146822858, 0.08333346813444201, 0.08333356851357143, 0.08333366065911645, 0.08333372999115948, 0.08333372162309587]
三个函数的累计增益为[0.5365320584274154, 0.5365320584274154, 0.5339771240100472]
probability [0.333863279164301, 0.333863279164301, 0.33227344167139805]
probabilityTotal [0.33386328 0.66772656 1.        ]
每一轮选择的下标，result: [1 1 0 1 1 1 0 0 1 2 1 1 1 0 1 2 0 1 1 2 0 2 1 2 1 0 0 0 2 1 0 2 0 1 0 1 0
 0 2 1 2 1 0 2 1 1 0 0 0 2 0 1 0 0 0 2 2 0 2 0 1 0 1 1 1 0 0 1 1 2 0 0 2 1
 1 2 2 1 2 2 1 1 2 2 1 0 2 1 0 0 0 2 0 0 2 1 2 1 0 0]
每个概率被转中的次数, count: [37 37 26]
choose which one? [0]
ys [14.51372769 14.14369089 14.572453   ... 14.24239903 14.322205
 14.13331946]
12  ys.argmax() 6634
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:227.384
训练集长度= 18
accuracy= 0.014898862557694039
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039]
三个采集函数选出的max_idx [4881, 4881, 4579]
max_means [-258.71617175 -258.71617175 -259.69829426]  max_stds [86.51447994 86.51447994 87.13974509]
所有模型的可信度所占权重  [0.07692250296926709, 0.07692275416189498, 0.07692279896274741, 0.07692297361701116, 0.07692291931242383, 0.0769229395463926, 0.07692307309982821, 0.07692317156091016, 0.0769232642185322, 0.07692334927592542, 0.07692341327470958, 0.07692340555034617, 0.07692343445001122]
三个函数的累计增益为[0.5772296264804878, 0.5772296264804878, 0.5735390090109697]
probability [0.3340452587155781, 0.3340452587155781, 0.33190948256884373]
probabilityTotal [0.33404526 0.66809052 1.        ]
每一轮选择的下标，result: [0 0 0 1 1 2 1 1 2 0 2 0 1 2 1 2 2 0 2 1 0 2 2 1 0 0 2 2 0 0 2 0 2 0 0 2 0
 0 0 0 1 2 0 1 2 1 0 2 2 2 1 2 0 1 1 2 2 2 0 1 1 0 1 0 2 1 2 0 2 1 1 2 1 2
 2 2 1 1 2 1 2 0 0 0 2 1 1 2 1 2 0 1 1 1 1 1 1 2 0 0]
每个概率被转中的次数, count: [31 33 36]
choose which one? [2]
ys [-54.65354296 -45.59423864 -49.49347652 ... -45.80162911 -51.20355567
 -50.65590689]
13  ys.argmax() 4579
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:231.874
训练集长度= 19
accuracy= 0.014898861642952132
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132]
三个采集函数选出的max_idx [3794, 3794, 3794]
max_means [-248.43271991 -248.43271991 -248.43271991]  max_stds [83.37165591 83.37165591 83.37165591]
所有模型的可信度所占权重  [0.07142801507137365, 0.07142824832159456, 0.07142828992237248, 0.07142845210127853, 0.07142840167560684, 0.07142842046428596, 0.07142854447814982, 0.0714286359062674, 0.07142872194545967, 0.07142880092729893, 0.07142886035472192, 0.07142885318210108, 0.07142888001749555, 0.07142887563199365]
三个函数的累计增益为[0.6248229993248001, 0.6248229993248001, 0.62399936507914]
probability [0.33347986306295463, 0.33347986306295463, 0.33304027387409074]
probabilityTotal [0.33347986 0.66695973 1.        ]
每一轮选择的下标，result: [2 2 0 0 1 1 2 1 1 1 2 1 0 0 0 2 1 0 2 2 1 1 2 0 0 0 2 0 0 2 2 0 2 1 0 0 0
 2 1 1 0 2 1 0 1 1 2 2 2 0 2 2 2 0 1 2 2 2 2 0 0 1 2 1 1 1 2 2 0 1 1 2 0 1
 2 2 1 1 1 2 1 1 0 0 0 0 1 0 2 0 1 2 2 0 1 0 1 1 2 1]
每个概率被转中的次数, count: [31 34 35]
choose which one? [2]
ys [-49.32375162 -58.31173074 -51.32798828 ... -49.62158606 -80.09942032
 -54.40270717]
14  ys.argmax() 3794
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:224.836
训练集长度= 20
accuracy= 0.014898857479648175
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175]
三个采集函数选出的max_idx [1682, 1682, 4743]
max_means [-237.31748255 -237.31748255 -248.95364639]  max_stds [77.83254199 77.83254199 83.13612863]
所有模型的可信度所占权重  [0.06666612971382897, 0.0666663474139774, 0.06666638624135983, 0.06666653760829866, 0.06666649054435088, 0.06666650808044675, 0.06666662382668899, 0.06666670915957608, 0.0666667894628009, 0.06666686317916466, 0.06666691864474472, 0.06666691195030039, 0.06666693699666192, 0.0666669329035279, 0.06666691427427204]
三个函数的累计增益为[0.6806874926514194, 0.6806874926514194, 0.6303578837186619]
probability [0.34175641886445735, 0.34175641886445735, 0.31648716227108525]
probabilityTotal [0.34175642 0.68351284 1.        ]
每一轮选择的下标，result: [0 2 1 0 2 2 1 1 2 2 2 0 0 0 1 2 2 0 2 1 2 1 2 0 2 1 0 2 1 0 1 1 2 0 2 1 2
 1 2 2 1 1 0 0 0 2 0 2 2 2 0 2 0 2 1 2 0 1 2 0 2 2 1 2 2 2 2 1 0 0 0 0 0 0
 2 1 0 0 1 0 0 0 0 1 1 0 0 2 2 2 0 1 1 2 2 1 0 0 0 0]
每个概率被转中的次数, count: [37 25 38]
choose which one? [2]
ys [-65.44540998 -45.82909001 -52.39546931 ... -58.7725921  -57.49342435
 -60.55269888]
15  ys.argmax() 4743
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:250.191
训练集长度= 21
accuracy= 0.01489886152565385
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385]
三个采集函数选出的max_idx [5190, 5190, 8694]
max_means [-243.18514249 -243.18514249 -248.5073586 ]  max_stds [75.2327173  75.2327173  80.45663281]
所有模型的可信度所占权重  [0.06249948103778175, 0.06249968513162006, 0.06249972153228201, 0.062499863438751815, 0.062499819316311774, 0.06249983575639755, 0.062499944268472614, 0.06250002426803435, 0.06250009955228886, 0.06250016866136265, 0.06250022066033102, 0.06250021438429101, 0.06250023786524911, 0.06250023402793692, 0.0625002165630139, 0.06250023353587449]
三个函数的累计增益为[0.6587100376389867, 0.6587100376389867, 0.6362797425625792]
probability [0.33716031072115604, 0.33716031072115604, 0.3256793785576879]
probabilityTotal [0.33716031 0.67432062 1.        ]
每一轮选择的下标，result: [2 0 1 0 2 0 1 1 2 2 2 0 1 2 0 2 1 2 1 2 0 0 0 1 2 0 1 1 2 1 1 2 0 0 2 0 2
 1 2 2 2 0 2 2 1 2 1 1 2 2 0 1 0 0 2 1 2 0 1 0 0 0 1 0 0 0 2 2 0 1 2 0 2 1
 0 2 0 1 1 1 0 1 1 2 1 1 2 2 0 2 0 1 0 0 2 1 2 2 0 0]
每个概率被转中的次数, count: ================= config27 =================
2022年 07月 14日 星期四 17:41:09 CST
cmd

end before line
finish
================= config28 =================
2022年 07月 14日 星期四 17:47:39 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 14日 星期四 17:54:04 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 14日 星期四 18:00:31 CST
cmd

end before line
finish
[34 30 36]
choose which one? [2]
ys [-51.71952686 -72.10966348 -74.90888802 ... -89.21672056 -82.39341317
 -61.10798943]
16  ys.argmax() 8694
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:227.313
训练集长度= 22
accuracy= 0.014898861756959758
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758]
三个采集函数选出的max_idx [5706, 9646, 5098]
max_means [-239.6339386  -237.16951819 -248.97437978]  max_stds [74.52330331 70.80445825 79.82129517]
所有模型的可信度所占权重  [0.05882302799380449, 0.0588232200820805, 0.058823254341519485, 0.058823387900520406, 0.05882334637352718, 0.05882336184654567, 0.05882346397553496, 0.05882353926922349, 0.05882361012497681, 0.05882367516879662, 0.05882372410899133, 0.05882371820213146, 0.05882374030185184, 0.0588237366902647, 0.05882372025269372, 0.05882373622714722, 0.05882373714039]
三个函数的累计增益为[0.6837772605557879, 0.6927730099931693, 0.6398512469885613]
probability [0.33910768991625945, 0.34356897868198466, 0.3173233314017558]
probabilityTotal [0.33910769 0.68267667 1.        ]
每一轮选择的下标，result: [1 2 2 1 2 1 0 2 0 0 0 1 1 2 1 2 1 0 2 1 0 2 2 1 1 0 2 1 0 2 1 2 2 2 0 1 2
 0 0 1 2 0 0 1 2 2 0 1 2 1 2 2 2 0 2 1 1 0 0 1 2 1 0 1 0 0 0 1 2 1 0 2 0 0
 0 2 2 0 1 2 0 2 0 0 0 1 1 1 1 0 2 1 2 2 1 2 0 1 0 0]
每个概率被转中的次数, count: [34 32 34]
choose which one? [2]
ys [-72.9827986  -70.8037581  -85.18781816 ... -58.36799546 -84.15945683
 -59.52507533]
17  ys.argmax() 5098
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:233.143
训练集长度= 23
accuracy= 0.01489886239733033
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033]
三个采集函数选出的max_idx [7108, 7108, 4542]
max_means [-228.86171023 -228.86171023 -241.39219406]  max_stds [68.04869932 68.04869932 75.40788088]
所有模型的可信度所占权重  [0.055555070962245046, 0.05555525237891414, 0.055555284735044536, 0.055555410874075915, 0.055555371654145654, 0.055555386267549106, 0.055555482722686504, 0.05555555383337822, 0.05555562075268751, 0.055555682182949574, 0.0555557284042354, 0.055555722825535524, 0.05555574369748951, 0.05555574028654678, 0.05555572476217727, 0.05555573984915813, 0.05555574071166503, 0.055555743099516004]
三个函数的累计增益为[0.7454874281105701, 0.7459871936553009, 0.6768754739724119]
probability [0.3438039962161855, 0.3440344781599053, 0.31216152562390914]
probabilityTotal [0.343804   0.68783847 1.        ]
每一轮选择的下标，result: [0 0 0 1 2 2 0 2 2 1 0 1 1 1 1 1 0 0 0 0 2 0 0 1 0 1 2 1 1 0 2 1 2 1 1 0 0
 1 2 0 2 2 1 1 0 0 2 2 0 0 1 2 1 0 0 2 0 0 0 1 0 0 0 0 1 2 0 1 1 2 0 0 2 1
 2 2 0 2 0 0 1 1 0 1 0 1 0 1 2 2 0 2 2 0 2 0 1 2 0 0]
每个概率被转中的次数, count: [43 30 27]
choose which one? [0]
ys [ 4.04603315 12.73021262 10.14858652 ...  8.13673279 10.88721491
 15.06257843]
18  ys.argmax() 7108
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:223.093
训练集长度= 24
accuracy= 0.014898858286024694
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694]
三个采集函数选出的max_idx [8156, 8156, 6156]
max_means [-235.48041406 -235.48041406 -241.82592507]  max_stds [71.54413977 71.54413977 74.53575111]
所有模型的可信度所占权重  [0.0526311112722233, 0.052631283140618615, 0.05263131379378978, 0.05263143329390527, 0.05263139613818793, 0.05263140998246263, 0.052631501360998936, 0.052631568729011674, 0.052631632126241716, 0.0526316903233226, 0.05263173411190202, 0.05263172882681879, 0.05263174860024566, 0.052631745368826754, 0.05263173066153173, 0.05263174495445863, 0.0526317457715703, 0.052631748033744534, 0.05263173351013887]
三个函数的累计增益为[0.7203431144075565, 0.7208165764253194, 0.6803681493501512]
probability [0.3395397886201727, 0.33976295892639974, 0.32069725245342756]
probabilityTotal [0.33953979 0.67930275 1.        ]
每一轮选择的下标，result: [0 0 2 2 2 1 0 1 2 0 1 2 0 0 1 0 2 1 0 1 1 0 2 1 2 1 2 0 0 1 2 1 1 2 1 1 1
 1 2 2 1 2 1 1 2 2 0 1 0 0 1 1 2 1 2 0 2 0 0 2 1 1 1 0 0 2 2 2 0 2 0 2 2 1
 1 0 2 1 1 0 1 1 0 0 2 2 1 2 2 2 0 0 1 1 0 0 0 1 0 1]
每个概率被转中的次数, count: [31 37 32]
choose which one? [1]
ys [0.26733071 0.30139724 0.26862845 ... 0.18579539 0.19639087 0.24340067]
19  ys.argmax() 8156
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:229.059
训练集长度= 25
accuracy= 0.014898855988259832
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832]
三个采集函数选出的max_idx [7562, 7562, 8252]
max_means [-233.29637473 -233.29637473 -246.84157754]  max_stds [67.96856364 67.96856364 74.35331314]
所有模型的可信度所占权重  [0.04999954875250501, 0.04999971202745784, 0.049999741147966396, 0.049999854673060326, 0.04999981937513376, 0.04999983252719289, 0.04999991933679031, 0.04999998333639351, 0.05000004356375366, 0.05000009885097281, 0.050000140450117476, 0.050000135429289105, 0.05000015421404201, 0.05000015114419448, 0.05000013717226615, 0.05000015075054482, 0.0500001515268008, 0.05000015367586602, 0.05000013987844256, 0.05000013216720977]
三个函数的累计增益为[0.7364141059250193, 0.736863894779318, 0.6603059101052915]
probability [0.3451535710379317, 0.34536438480158066, 0.30948204416048763]
probabilityTotal [0.34515357 0.69051796 1.        ]
每一轮选择的下标，result: [1 0 2 2 2 1 1 0 2 1 1 1 0 1 2 2 2 2 1 2 0 1 1 2 2 2 0 0 1 2 1 0 1 0 0 0 1
 0 0 0 2 0 2 1 1 0 0 0 0 1 0 2 0 1 1 2 1 0 0 2 1 0 0 1 2 0 2 1 1 2 0 1 0 1
 0 2 0 0 0 2 1 2 1 0 0 2 2 1 0 0 2 1 1 2 2 0 2 0 0 2]
每个概率被转中的次数, count: [38 31 31]
choose which one? [0]
ys [ 9.18758861 13.86308993 13.83852765 ... 13.62207649 10.06080276
 11.55174521]
20  ys.argmax() 7562
================= config31 =================
2022年 07月 14日 星期四 18:06:48 CST
cmd

end before line
finish
================= config32 =================
2022年 07月 14日 星期四 18:13:09 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 14日 星期四 18:19:28 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 14日 星期四 18:25:46 CST
cmd

end before line
finish
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:234.179
训练集长度= 26
accuracy= 0.014898855241548353
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353]
三个采集函数选出的max_idx [9729, 6648, 6041]
max_means [-234.98474676 -232.9860955  -251.70728021]  max_stds [66.65962203 63.57213277 74.70321293]
所有模型的可信度所占权重  [0.04761861197925279, 0.04761876747918867, 0.04761879521300291, 0.047618903332126636, 0.04761886971505787, 0.04761888224082692, 0.04761896491662377, 0.04761902586861929, 0.04761908322800283, 0.04761913588249076, 0.04761917550071888, 0.047619170718978164, 0.04761918860921682, 0.04761918568555287, 0.047619172378956104, 0.04761918531064848, 0.04761918604993979, 0.047619188096668326, 0.04761917495626665, 0.04761916761223633, 0.04761916522562496]
三个函数的累计增益为[0.7320765371255118, 0.7414270418538236, 0.6406412347126216]
probability [0.34627549275921055, 0.35069832352640995, 0.3030261837143795]
probabilityTotal [0.34627549 0.69697382 1.        ]
每一轮选择的下标，result: [0 2 1 2 2 0 0 2 1 1 2 0 1 2 1 1 2 0 1 0 2 1 2 1 2 1 1 0 0 1 2 1 2 1 0 1 0
 2 1 0 2 0 1 1 0 0 1 0 1 2 1 2 0 2 1 0 2 0 1 2 2 2 1 0 0 1 1 0 0 0 0 1 2 1
 2 0 2 2 1 0 0 2 0 2 2 0 2 1 2 1 2 1 1 2 0 1 0 0 1 1]
每个概率被转中的次数, count: [32 36 32]
choose which one? [1]
ys [0.25951191 0.26231129 0.15966862 ... 0.17822717 0.31183045 0.18382563]
21  ys.argmax() 6648
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:227.651
训练集长度= 27
accuracy= 0.014898851132728073
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073]
三个采集函数选出的max_idx [409, 409, 1277]
max_means [-227.32598168 -227.32598168 -240.18064238]  max_stds [62.97972149 62.97972149 70.36086937]
所有模型的可信度所占权重  [0.04545412508363341, 0.045454273515375586, 0.04545429998855927, 0.04545440319316708, 0.04545437110415009, 0.04545438306056481, 0.04545446197836303, 0.0454545201598075, 0.04545457491194087, 0.04545462517303797, 0.04545466299043377, 0.04545465842604536, 0.045454675503089646, 0.04545467271231979, 0.045454660010569595, 0.04545467235445654, 0.045454673060143634, 0.045454675013838854, 0.045454662470729414, 0.045454655460519355, 0.045454653182390545, 0.04545464064686364]
三个函数的累计增益为[0.7817014441000248, 0.782515895382152, 0.6965077182864046]
probability [0.3457746626082841, 0.34613492370209936, 0.3080904136896166]
probabilityTotal [0.34577466 0.69190959 1.        ]
每一轮选择的下标，result: [0 1 0 0 0 2 0 1 2 0 0 0 2 0 2 1 0 1 1 0 2 0 2 2 2 1 1 1 1 0 0 0 1 0 2 0 1
 0 0 0 0 2 1 0 2 0 0 2 2 2 2 1 1 0 0 0 0 0 0 0 1 1 0 1 2 1 2 2 0 0 0 0 0 0
 2 0 1 1 1 0 0 2 1 0 2 1 2 0 2 0 1 0 1 0 1 0 0 1 0 1]
每个概率被转中的次数, count: [49 28 23]
choose which one? [0]
ys [ 9.74883775 10.35947866 15.98125161 ... 10.02176264  4.3766957
 12.37411486]
22  ys.argmax() 409
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:225.135
训练集长度= 28
accuracy= 0.014898850575500496
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496]
三个采集函数选出的max_idx [5095, 5095, 3613]
max_means [-232.75541458 -232.75541458 -246.78660191]  max_stds [63.37815928 63.37815928 71.65288119]
所有模型的可信度所占权重  [0.043477854887537803, 0.04347799686571327, 0.043478022187886704, 0.04347812090532882, 0.04347809021148923, 0.04347810164805881, 0.04347817713464166, 0.04347823278645313, 0.04347828515805428, 0.04347833323388199, 0.04347836940703996, 0.04347836504110361, 0.04347838137566625, 0.04347837870623445, 0.04347836655673535, 0.0434783783639305, 0.04347837903893549, 0.04347838090768727, 0.04347836890993149, 0.043478362204513774, 0.04347836002543424, 0.04347834803493131, 0.04347834640881032]
三个函数的累计增益为[0.7550147348184817, 0.7557937751056314, 0.6677185303364058]
probability [0.34657120194762114, 0.3469288014966525, 0.3064999965557264]
probabilityTotal [0.3465712 0.6935    1.       ]
每一轮选择的下标，result: [1 0 0 0 1 1 2 2 2 0 0 2 1 0 0 2 1 2 0 2 1 1 1 2 0 1 2 2 2 2 2 2 1 2 0 2 1
 1 1 2 2 0 1 2 0 1 0 2 0 2 1 0 2 1 2 1 2 0 0 1 1 1 1 2 2 0 1 0 2 0 0 2 1 2
 0 0 1 1 2 0 1 0 2 0 0 1 2 1 1 1 0 1 1 0 2 1 1 0 0 0]
每个概率被转中的次数, count: [32 35 33]
choose which one? [1]
ys [0.09207716 0.21903986 0.23265956 ... 0.17871218 0.20162633 0.14367227]
23  ys.argmax() 5095
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:233.766
训练集长度= 29
accuracy= 0.014898847984771946
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946]
三个采集函数选出的max_idx [832, 3192, 2634]
max_means [-233.24807902 -232.22129569 -238.02349178]  max_stds [64.52819516 62.86170146 66.5188418 ]
所有模型的可信度所占权重  [0.04166627448684597, 0.041666410549253956, 0.041666434816335016, 0.04166652942054331, 0.0416665000056159, 0.04166651096566093, 0.041666583306964086, 0.04166663663994609, 0.041666686829393444, 0.041666732902058225, 0.04166676756799868, 0.04166676338397666, 0.041666779037931354, 0.041666776479726074, 0.041666764836456975, 0.04166677615168481, 0.041666776798564543, 0.04166677858945154, 0.0416667670916031, 0.04166676066557827, 0.04166675857729387, 0.04166674708639609, 0.04166674552803026, 0.041666738282690984]
三个函数的累计增益为[0.7581859332137805, 0.763708021803913, 0.7113989470131761]
probability ================= config35 =================
2022年 07月 14日 星期四 18:32:14 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 14日 星期四 18:38:34 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 14日 星期四 18:44:49 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 14日 星期四 18:51:10 CST
cmd

end before line
finish
[0.33949238477600313, 0.341965006519936, 0.31854260870406104]
probabilityTotal [0.33949238 0.68145739 1.        ]
每一轮选择的下标，result: [2 0 1 2 1 1 1 0 1 1 1 2 1 2 1 1 0 0 0 1 1 0 2 1 1 2 0 1 2 0 2 2 1 0 0 0 1
 1 2 2 2 0 1 1 2 2 1 0 0 1 0 2 0 2 1 0 0 0 2 1 0 2 2 1 0 1 1 2 2 1 1 0 0 0
 0 2 0 2 0 0 0 1 1 1 1 2 1 1 1 0 0 1 2 1 1 2 1 1 1 1]
每个概率被转中的次数, count: [31 43 26]
choose which one? [1]
ys [0.24989796 0.20870076 0.20927492 ... 0.14151893 0.17857117 0.17186839]
24  ys.argmax() 3192
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:226.201
训练集长度= 30
accuracy= 0.014898845715371645
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645]
三个采集函数选出的max_idx [4939, 4939, 6089]
max_means [-224.35498857 -224.35498857 -237.96837625]  max_stds [56.67908224 56.67908224 66.58321272]
所有模型的可信度所占权重  [0.039999621001053795, 0.03999975162095728, 0.03999977491735364, 0.03999986573738791, 0.03999983749905937, 0.03999984802070193, 0.03999991746834861, 0.03999996866800813, 0.04000001684987457, 0.04000006107962999, 0.040000094358930746, 0.04000009034226985, 0.04000010537006542, 0.0400001029141885, 0.04000009173665087, 0.040000102599268915, 0.04000010322027341, 0.04000010493952482, 0.04000009390159102, 0.04000008773260756, 0.04000008572785466, 0.04000007469659349, 0.04000007320056238, 0.040000066245037116, 0.04000006015220615]
三个函数的累计增益为[0.8163264411118818, 0.817234178699678, 0.7161890604393184]
probability [0.3474099594407538, 0.34779627190434326, 0.304793768654903]
probabilityTotal [0.34740996 0.69520623 1.        ]
每一轮选择的下标，result: [2 1 0 2 1 1 1 1 0 2 2 1 0 0 2 0 0 2 1 0 0 1 2 0 1 1 1 2 1 1 0 1 2 0 1 1 0
 0 2 1 2 1 2 0 1 0 2 0 2 1 1 2 2 2 2 1 1 0 0 0 1 0 0 2 1 0 2 1 2 2 0 1 0 1
 0 1 2 2 1 1 2 1 0 1 0 2 2 0 1 2 1 2 0 1 1 1 1 0 2 1]
每个概率被转中的次数, count: [30 40 30]
choose which one? [1]
ys [0.18340346 0.24171673 0.15681328 ... 0.08342356 0.14664383 0.23638806]
25  ys.argmax() 4939
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:222.15
训练集长度= 31
accuracy= 0.014898840864563162
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645, 0.014898840864563162]
三个采集函数选出的max_idx [8323, 8323, 8145]
max_means [-216.13467097 -216.13467097 -241.54168037]  max_stds [52.66380148 52.66380148 66.93277459]
所有模型的可信度所占权重  [0.0384611722965597, 0.03846129789261505, 0.03846132029299515, 0.03846140761994722, 0.03846138046770947, 0.03846139058467302, 0.03846145736125334, 0.03846150659169295, 0.038461552920408586, 0.03846159544901764, 0.03846162744834383, 0.03846162358617008, 0.03846163803597285, 0.038461635674552845, 0.03846162492692099, 0.03846163537174556, 0.038461635968865246, 0.03846163762199152, 0.03846162700859412, 0.038461621076879525, 0.038461619149232594, 0.038461608542251176, 0.038461607103759794, 0.03846160041575503, 0.03846159455726398, 0.03846158203482884]
三个函数的累计增益为[0.8778507755158339, 0.878723600079931, 0.6953710891056505]
probability [0.3580221453345961, 0.35837811759281407, 0.28359973707258984]
probabilityTotal [0.35802215 0.71640026 1.        ]
每一轮选择的下标，result: [0 1 2 1 1 0 2 1 1 1 2 1 2 1 1 0 2 0 0 2 0 1 0 0 0 2 1 1 1 1 1 0 1 2 0 2 2
 2 0 0 1 0 0 2 2 1 2 0 1 1 0 1 1 2 0 0 1 2 0 0 2 0 1 0 1 0 1 1 2 0 0 1 1 0
 2 2 1 0 0 0 0 2 1 2 2 0 1 0 2 2 2 1 0 1 2 1 1 0 0 0]
每个概率被转中的次数, count: [37 36 27]
choose which one? [0]
ys [ 2.26770936  9.6791522   5.67448348 ... 11.6024703   5.27136819
  8.74335298]
26  ys.argmax() 8323
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:228.369
训练集长度= 32
accuracy= 0.014898840085708537
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645, 0.014898840864563162, 0.014898840085708537]
三个采集函数选出的max_idx [2194, 2194, 8818]
max_means [-228.51259535 -228.51259535 -240.26315573]  max_stds [55.94535261 55.94535261 64.7763044 ]
所有模型的可信度所占权重  [0.03703668295139361, 0.037036803895738366, 0.0370368254664739, 0.037036909559091044, 0.03703688341249277, 0.03703689315475358, 0.037036957458124645, 0.03703700486521275, 0.037037049478048235, 0.03703709043152198, 0.03703712124568671, 0.03703711752655658, 0.03703713144118091, 0.037037129167220996, 0.03703711881765, 0.037037128875628815, 0.03703712945063293, 0.03703713104253224, 0.03703712082222404, 0.03703711511020281, 0.03703711325395029, 0.03703710303982043, 0.03703710165460657, 0.03703709521430595, 0.03703708957279627, 0.03703707751415551, 0.037037075577998235]
三个函数的累计增益为[0.7950004734266389, 0.7958409711213892, 0.702076789885101]
probability [0.3467199403310534, 0.3470865027675714, 0.3061935569013752]
probabilityTotal [0.34671994 0.69380644 1.        ]
每一轮选择的下标，result: [0 1 2 0 1 1 0 2 1 2 0 0 0 2 1 2 0 1 1 2 1 2 0 2 1 1 1 2 1 2 1 2 1 1 0 1 0
 0 0 2 2 0 2 2 1 2 1 1 0 1 1 2 0 2 2 0 1 2 1 2 1 0 0 1 0 2 0 2 0 0 1 2 0 1
 2 1 0 1 0 0 0 1 2 0 2 0 0 2 1 2 1 0 2 0 2 2 0 1 1 1]
每个概率被转中的次数, count: [33 35 32]
choose which one? [1]
ys [0.28043404 0.2082423  0.16529789 ... 0.24246419 0.10291678 0.23759109]
27  ys.argmax() 2194
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:237.267
训练集长度= 33
accuracy= 0.01489883736056854
所有模型的可信度  ================= config39 =================
2022年 07月 14日 星期四 18:57:21 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 14日 星期四 19:03:33 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 14日 星期四 19:09:49 CST
cmd

end before line
finish
[0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645, 0.014898840864563162, 0.014898840085708537, 0.01489883736056854]
三个采集函数选出的max_idx [8216, 8932, 8696]
max_means [-235.0996561  -231.50035368 -239.93790399]  max_stds [59.68386742 50.39147648 64.40460868]
所有模型的可信度所占权重  [0.035713943180568336, 0.035714059805468636, 0.03571408060582012, 0.03571416169512703, 0.0357141364823366, 0.03571414587665924, 0.03571420788347944, 0.03571425359745585, 0.03571429661697447, 0.03571433610782294, 0.03571436582148088, 0.03571436223517693, 0.03571437565284999, 0.03571437346010299, 0.035714363480159834, 0.03571437317892482, 0.03571437373339306, 0.035714375268438785, 0.03571436541314189, 0.03571435990512158, 0.03571435811516385, 0.035714348265824654, 0.035714346930082755, 0.035714340719793056, 0.03571433527976604, 0.03571432365179137, 0.03571432178478263, 0.03571431525229243]
三个函数的累计增益为[0.7584772051573451, 0.7715692906940596, 0.7061703135135182]
probability [0.33917874241037915, 0.34503331137788124, 0.3157879462117396]
probabilityTotal [0.33917874 0.68421205 1.        ]
每一轮选择的下标，result: [0 2 1 1 2 2 0 0 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 2 1 1 2 1 0 2 1 0 1 2 0 2 0
 2 2 0 1 2 1 0 2 2 2 2 2 2 0 1 2 0 2 2 0 2 2 0 0 2 1 1 2 1 1 2 0 2 1 2 0 2
 0 0 0 0 0 0 0 0 2 0 2 1 1 1 2 0 2 2 0 2 2 0 2 1 2 0]
每个概率被转中的次数, count: [35 28 37]
choose which one? [2]
ys [-158.18913573 -123.13793826 -102.09508953 ... -130.5500929  -120.74635024
  -92.28263266]
28  ys.argmax() 8696
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:225.112
训练集长度= 34
accuracy= 0.014898836176773744
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645, 0.014898840864563162, 0.014898840085708537, 0.01489883736056854, 0.014898836176773744]
三个采集函数选出的max_idx [6470, 6470, 2465]
max_means [-227.96763086 -227.96763086 -235.79413655]  max_stds [54.59830233 54.59830233 61.51154338]
所有模型的可信度所占权重  [0.034482427009536354, 0.034482539612885464, 0.03448255969598293, 0.034482637989104815, 0.03448261364572159, 0.034482622716101835, 0.03448268258475427, 0.03448272672238554, 0.03448276825847141, 0.0344828063875655, 0.03448283507661381, 0.0344828316139756, 0.03448284456896994, 0.034482842451834965, 0.03448283281602803, 0.0344828421803526, 0.034482842715701234, 0.034482844197814305, 0.034482834682355475, 0.03448282936426705, 0.03448282763603204, 0.03448281812632547, 0.03448281683664367, 0.034482810840502046, 0.0344828055880623, 0.03448279436105257, 0.034482792558423486, 0.034482786251191735, 0.03448278351134419]
三个函数的累计增益为[0.8043386338578336, 0.8055446700986926, 0.7298271480166341]
probability [0.3437769973543121, 0.34429246123995744, 0.3119305414057304]
probabilityTotal [0.343777   0.68806946 1.        ]
每一轮选择的下标，result: [1 1 0 1 0 1 1 2 0 0 1 1 0 1 0 1 0 1 2 2 2 1 0 0 0 2 0 1 2 1 1 1 0 2 2 2 0
 2 2 1 2 1 2 1 2 1 2 1 0 2 1 0 0 2 0 2 2 0 1 1 0 2 1 1 0 1 1 0 1 2 1 1 1 0
 0 2 1 1 1 1 1 1 2 0 0 0 1 2 1 0 2 0 1 1 1 2 1 1 0 1]
每个概率被转中的次数, count: [29 45 26]
choose which one? [1]
ys [0.1049896  0.1131745  0.08739879 ... 0.21491065 0.21765872 0.28259417]
29  ys.argmax() 6470
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:227.325
训练集长度= 35
accuracy= 0.014898833371271064
所有模型的可信度  [0.014898682144486008, 0.01489873079655758, 0.014898739473779907, 0.014898773301570998, 0.014898762783624309, 0.014898766702626649, 0.014898792569832078, 0.014898811640199097, 0.014898829586526968, 0.014898846060809743, 0.01489885845637029, 0.014898856960282267, 0.014898862557694039, 0.014898861642952132, 0.014898857479648175, 0.01489886152565385, 0.014898861756959758, 0.01489886239733033, 0.014898858286024694, 0.014898855988259832, 0.014898855241548353, 0.014898851132728073, 0.014898850575500496, 0.014898847984771946, 0.014898845715371645, 0.014898840864563162, 0.014898840085708537, 0.01489883736056854, 0.014898836176773744, 0.014898833371271064]
三个采集函数选出的max_idx [1281, 1281, 3225]
max_means [-223.63776934 -223.63776934 -241.47157355]  max_stds [48.83151684 48.83151684 61.40174977]
所有模型的可信度所占权重  [0.03333301218308489, 0.03333312103298709, 0.033333140446647626, 0.03333321612999744, 0.033333192598060744, 0.03333320136609482, 0.03333325923912449, 0.033333301905500615, 0.033333342057049575, 0.033333378915173205, 0.033333406647919415, 0.03333340330070254, 0.03333341582386351, 0.03333341377729974, 0.03333340446268653, 0.033333413514866794, 0.03333341403237046, 0.03333341546507974, 0.033333406266803034, 0.03333340112598431, 0.03333339945535716, 0.033333390262640976, 0.033333389015948595, 0.03333338321967846, 0.03333337814232013, 0.03333336728954425, 0.03333336554700283, 0.03333335945001225, 0.033333356801493005, 0.033333350524705964]
三个函数的累计增益为[0.8383075995004943, 0.8394734345125912, 0.6972566330861878]
probability [0.3529660228607457, 0.3534568929754588, 0.29357708416379547]
probabilityTotal [0.35296602 0.70642292 1.        ]
每一轮选择的下标，result: [1 0 1 1 1 0 1 2 0 2 2 2 2 1 1 0 0 1 0 0 2 0 2 0 1 1 1 2 0 0 0 2 2 0 2 1 2
 1 0 2 0 0 2 2 1 2 0 1 2 0 2 2 0 2 1 2 2 2 1 0 2 1 1 0 0 2 0 2 1 2 1 2 2 1
 1 1 0 0 1 1 0 2 1 0 1 0 0 1 1 1 1 1 1 1 0 1 2 2 0 2]
每个概率被转中的次数, count: [31 36 33]
choose which one? [1]
ys [0.23843275 0.15714932 0.22293246 ... 0.18004972 0.14265031 0.10498908]
30  ys.argmax() 1281
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1110
runtime:227.21
{'maxIndex': 31, 'target': -222.15, 'params': {'spark.broadcast.blockSize': 41.50232477532118, 'spark.broadcast.checksum': 0.4960585493814825, 'spark.broadcast.compress': 0.4467304622622891, 'spark.default.parallelism': 462.2539190482607, 'spark.executor.cores': 6.730239472078997, 'spark.executor.instances': 9.581530136645611, 'spark.executor.memory': 8.774070180493553, 'spark.executor.memoryOverhead': 1365.084962002246, 'spark.kryoserializer.buffer': 119.13699635690057, 'spark.kryoserializer.buffer.max': 89.21835705995747, 'spark.locality.wait': 4.8204125363009815, 'spark.maxRemoteBlockSizeFetchToMem': 1991753914.917767, 'spark.memory.fraction': 0.8238955202721336, 'spark.memory.offHeap.enabled': 0.8519910712390077, 'spark.memory.offHeap.size': 726.4869074615498, 'spark.memory.storageFraction': 0.7941519693609617, 'spark.rdd.compress': 0.20472213073892498, 'spark.reducer.maxBlocksInFlightPerAddress': 1149391865.6430917, 'spark.reducer.maxReqsInFlight': 1819283396.5871372, 'spark.reducer.maxSizeInFlight': 59.120766335281566, 'spark.scheduler.mode': 0.7741855392991813, 'spark.scheduler.revive.interval': 821.1323949936408, 'spark.shuffle.compress': 0.7383811836683062, 'spark.shuffle.file.buffer': 38.88261766365424, 'spark.shuffle.io.numConnectionsPerPeer': 1.5177891178319798, 'spark.shuffle.sort.bypassMergeThreshold': 221.09767797589723, 'spark.storage.memoryMapThreshold': 2.9859417687920917}}
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 19:47:08 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 14日 星期四 19:52:09 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 14日 星期四 19:57:51 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 14日 星期四 20:02:07 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1471
runtime:294.262
生成测试集 - 配置成功 target -294.262  conf {'spark.broadcast.blockSize': 27.85536429155959, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 4.4402676724513395, 'spark.executor.instances': 8.554031568612787, 'spark.executor.memory': 9.117561268266025, 'spark.executor.memoryOverhead': 857.7637567760185, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 4.772750629629654, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 457.8426654015389, 'spark.storage.memoryMapThreshold': 1.7653979023280013}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1471
runtime:333.999
生成测试集 - 配置成功 target -333.999  conf {'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1243
runtime:248.605
生成测试集 - 配置成功 target -248.605  conf {'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1243
runtime:312.203
生成测试集 - 配置成功 target -312.203  conf ================= config5 =================
2022年 07月 14日 星期四 20:07:27 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 14日 星期四 20:11:14 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 14日 星期四 20:16:04 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 14日 星期四 20:21:42 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 14日 星期四 20:25:41 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 14日 星期四 20:30:47 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 14日 星期四 20:34:44 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:220.126
生成测试集 - 配置成功 target -220.126  conf {'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
X_test [array([2.78553643e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       4.44026767e+00, 8.55403157e+00, 9.11756127e+00, 8.57763757e+02,
       7.00896775e+01, 8.37264065e+01, 4.77275063e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 4.57842665e+02, 1.76539790e+00]), array([4.42139656e+00, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       5.26332288e+00, 1.37473372e+01, 1.11989917e+01, 1.33256352e+03,
       6.22895006e+01, 9.79040891e+01, 8.51163105e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.84651246e+02, 3.38991993e+00]), array([3.24775359e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       5.76791661e+00, 1.21985502e+01, 8.61400657e+00, 9.51670759e+02,
       9.86624151e+01, 7.17612099e+01, 1.44958113e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 3.90399194e+02, 8.94975482e+00]), array([4.06676768e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       6.68765865e+00, 1.05685471e+01, 1.37890403e+01, 1.29357829e+03,
       9.16827891e+01, 4.30156134e+01, 9.54540333e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.06328497e+02, 9.36493510e+00]), array([4.48356089e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       6.79778639e+00, 1.21809090e+01, 8.39600104e+00, 1.41973985e+03,
       1.04372114e+02, 1.20610355e+02, 7.40372283e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.07458916e+02, 8.20569405e+00])]  y_test [-294.262, -333.999, -248.605, -312.203, -220.126]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:282.355
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:329.549
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:232.354
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:299.119
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.921
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
runtime:2201
训练集长度= 6
accuracy= 0.04020330104931924
所有模型的可信度  [0.04020330104931924]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-595.54966667 -595.54966667 -595.54966667]  max_stds [718.85520544 718.85520544 718.85520544]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.3050196339888981, 0.3050196339888981, 0.3050196339888981]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 0 1 0 2 2 0 0 2 2 0 2 1 2 0 1 0 2 0 2 1 0 2 1 2 1 0 1 1 2 1 1 0 2 0
 2 0 0 0 2 2 2 2 1 2 1 1 2 1 2 2 0 0 0 2 1 1 2 2 0 0 2 2 2 1 0 1 0 0 2 2 0
 0 0 0 0 0 1 2 0 0 1 0 1 1 1 1 1 2 2 2 1 0 0 2 1 2 2]
每个概率被转中的次数, count: [36 28 36]
choose which one? [0]
ys ================= config12 =================
2022年 07月 14日 星期四 21:19:34 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 14日 星期四 21:23:26 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 14日 星期四 21:28:17 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 14日 星期四 21:32:13 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 14日 星期四 21:37:53 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 14日 星期四 21:42:59 CST
cmd

end before line
finish
[139.97796337 139.97796337 139.97796337 ... 139.97796337 139.97796337
 139.97796337]
1 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5627]
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:225.23
训练集长度= 7
accuracy= 0.040203397067713795
所有模型的可信度  [0.04020330104931924, 0.040203397067713795]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-542.64685714 -542.64685714 -542.64685714]  max_stds [678.02892301 678.02892301 678.02892301]
所有模型的可信度所占权重  [0.4999994029204233, 0.5000005970795767]
三个函数的累计增益为[0.4723499184493507, 0.4723499184493507, 0.4723499184493507]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 1 0 1 2 2 2 1 0 0 0 0 0 0 2 2 1 1 0 0 1 1 0 1 2 1 0 1 1 1 2 1 1 0 2
 1 1 2 1 1 0 0 1 0 1 0 1 1 0 2 1 2 0 2 1 1 2 2 0 1 2 1 2 1 0 1 2 0 2 1 1 0
 1 1 0 1 0 0 0 2 1 0 0 1 2 1 2 1 2 2 1 1 2 1 1 1 0 0]
每个概率被转中的次数, count: [30 44 26]
choose which one? [1]
ys [0.31983992 0.31983992 0.31983992 ... 0.31983992 0.31983992 0.31983992]
2 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [348]
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:282.452
训练集长度= 8
accuracy= 0.04020345609929619
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-510.1225 -510.1225 -510.1225]  max_stds [640.04894699 640.04894699 640.04894699]
所有模型的可信度所占权重  [0.3333326394493257, 0.33333343555472145, 0.3333339249959528]
三个函数的累计增益为[0.5364066926166537, 0.5364066926166537, 0.5364066926166537]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 2 0 2 2 1 1 0 2 0 2 2 1 0 2 0 0 2 1 0 2 1 0 1 1 0 2 0 2 1 0 0 0 1 1 0
 2 1 2 1 0 1 2 0 0 1 0 0 2 2 1 0 1 1 2 1 2 2 1 0 2 1 1 1 1 1 1 2 2 2 1 1 0
 0 2 1 0 1 1 0 1 1 1 1 2 2 0 1 0 1 0 1 1 2 0 1 1 2 1]
每个概率被转中的次数, count: [29 42 29]
choose which one? [1]
ys [0.32811995 0.32811995 0.32811995 ... 0.32811995 0.32811995 0.32811995]
3 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1046]
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.537
训练集长度= 9
accuracy= 0.040203512885584304
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-478.83522222 -478.83522222 -478.83522222]  max_stds [609.89813233 609.89813233 609.89813233]
所有模型的可信度所占权重  [0.24999928037112001, 0.24999987744969104, 0.25000024453032205, 0.2500005976488669]
三个函数的累计增益为[0.5770175465810102, 0.5770175465810102, 0.5770175465810102]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 1 0 1 2 2 1 1 1 1 2 1 2 1 2 1 0 0 0 0 2 0 1 2 1 1 1 1 2 1 2 1 0 1 0 2
 0 0 2 1 1 0 1 2 2 0 0 1 2 0 2 2 0 1 2 0 0 2 2 0 0 0 2 2 0 1 0 0 1 1 0 2 2
 2 2 0 0 1 2 2 2 2 2 0 2 1 2 1 0 0 2 2 0 0 0 1 0 0 2]
每个概率被转中的次数, count: [35 30 35]
choose which one? [2]
ys [1092.26236665 1092.26236665 1092.26236665 ... 1092.26236665 1092.26236665
 1092.26236665]
4 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7905]
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:332.412
训练集长度= 10
accuracy= 0.0402035394613424
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-464.1929 -464.1929 -464.1929]  max_stds [580.2652299 580.2652299 580.2652299]
所有模型的可信度所占权重  [0.19999930223221016, 0.19999977989477546, 0.20000007355910102, 0.20000035605376448, 0.20000048826014893]
三个函数的累计增益为[0.5985875243541698, 0.5985875243541698, 0.5985875243541698]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 0 0 2 0 0 1 1 2 2 0 0 0 2 0 1 1 1 1 1 1 0 0 1 1 0 0 1 2 0 0 0 1 2 0
 0 1 2 0 2 1 2 0 1 1 2 1 1 1 2 1 1 2 0 1 2 0 0 1 1 2 1 0 0 1 1 0 2 2 1 2 0
 1 1 0 0 1 0 1 2 1 2 0 1 2 2 1 1 0 0 2 1 2 0 1 0 2 1]
每个概率被转中的次数, count: [34 40 26]
choose which one? [1]
ys [0.3402369 0.3402369 0.3402369 ... 0.3402369 0.3402369 0.3402369]
5 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8458]
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:297.455
训练集长度= 11
accuracy= 0.040203566973037286
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-449.03490909 -449.03490909 -449.03490909]  max_stds [555.33376418 555.33376418 555.33376418]
所有模型的可信度所占权重  [0.16666599837128204, 0.16666639642321243, 0.16666664114335625, 0.16666687655545318, 0.16666698672738284, 0.1666671007793133]
三个函数的累计增益为[0.615468908228095, 0.615468908228095, 0.615468908228095]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 2 1 2 0 0 2 2 1 0 2 1 2 2 0 0 2 1 0 0 1 2 1 1 0 2 1 2 1 1 2 0 1 1 2 2
 1 0 1 2 1 2 0 1 1 1 1 1 1 2 2 1 1 1 2 2 0 0 1 0 1 0 2 0 1 0 2 1 1 0 2 1 1
 2 2 2 2 1 2 2 0 1 2 2 2 0 2 2 1 2 1 0 0 0 2 1 1 2 1]
每个概率被转中的次数, count: [23 39 38]
choose which one? [1]
ys [0.34347053 0.34347053 0.34347053 ... 0.34347053 0.34347053 0.34347053]
6 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6791]
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:230.903
训练集长度= 12
accuracy= 0.040203599966463985
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985]
三个采集函数选出的max_idx [7285, 7285, 7285]
max_means [-430.10402753 -430.10402753 -430.10402753]  max_stds [535.09462251 535.09462251 535.09462251]
所有模型的可信度所占权重  [0.14285650012800102, 0.142856841315203, 0.14285705107522362, 0.14285725285692222, 0.14285734728995858, 0.1428574450487083, 0.1428575622859834]
================= config18 =================
2022年 07月 14日 星期四 21:49:14 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 14日 星期四 21:56:25 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 14日 星期四 22:02:52 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 14日 星期四 22:09:26 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 14日 星期四 22:15:56 CST
cmd

end before line
finish
三个函数的累计增益为[0.6331151628793892, 0.6331151628793892, 0.6331151628793892]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 2 2 1 1 2 0 1 2 0 2 2 1 0 0 2 2 0 2 2 1 1 2 2 2 1 2 1 1 0 1 1 2 0 2 1
 1 1 1 2 0 2 1 0 1 0 2 0 0 2 2 1 2 2 1 0 0 1 0 2 0 1 2 2 2 2 2 1 1 2 2 1 1
 2 0 1 0 1 0 0 2 0 1 1 0 2 2 2 1 0 0 0 1 2 2 2 0 1 0]
每个概率被转中的次数, count: [28 32 40]
choose which one? [2]
ys [947.57095636 947.56127987 947.55814686 ... 947.55848527 947.55796254
 947.55879115]
7  ys.argmax() 7285
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:286.529
训练集长度= 13
accuracy= 0.040203645911849176
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176]
三个采集函数选出的max_idx [9405, 9405, 722]
max_means [-378.18122223 -378.18122223 -390.18602686]  max_stds [506.63494004 506.63494004 512.39207184]
所有模型的可信度所占权重  [0.12499937388071188, 0.12499967241936136, 0.12499985595928584, 0.1250000325181821, 0.1250001151470468, 0.12500020068590917, 0.12500030326847258, 0.12500044612103026]
三个函数的累计增益为[0.6721615123909891, 0.6721615123909891, 0.6645476054519748]
probability [0.33459671433033455, 0.33459671433033455, 0.3308065713393309]
probabilityTotal [0.33459671 0.66919343 1.        ]
每一轮选择的下标，result: [0 0 1 0 0 2 1 1 0 0 1 0 0 1 1 2 2 1 2 2 2 1 0 0 0 1 0 0 1 0 2 0 0 0 2 2 1
 1 0 2 1 1 2 1 0 2 0 0 2 0 2 1 0 0 0 2 1 0 2 1 1 1 2 1 1 0 2 2 1 1 1 1 2 0
 0 2 0 1 2 0 0 2 2 1 1 1 0 0 1 0 1 0 2 2 0 0 0 1 0 1]
每个概率被转中的次数, count: [40 34 26]
choose which one? [0]
ys [122.35203035 124.28530342 120.36788605 ... 121.43299628 124.30039279
 117.03430914]
8  ys.argmax() 9405
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.302
训练集长度= 14
accuracy= 0.040203666787058015
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015]
三个采集函数选出的max_idx [5121, 5121, 3626]
max_means [-361.36202074 -361.36202074 -369.71231567]  max_stds [490.73479272 490.73479272 496.70750791]
所有模型的可信度所占权重  [0.11111050408921956, 0.11111076945678745, 0.11111093260331288, 0.11111108954448272, 0.11111116299232907, 0.11111123902683886, 0.11111133021129826, 0.11111145719129184, 0.11111151488443934]
三个函数的累计增益为[0.6915940632476842, 0.6915940632476842, 0.6855848136952145]
probability [0.33430158032904855, 0.33430158032904855, 0.3313968393419028]
probabilityTotal [0.33430158 0.66860316 1.        ]
每一轮选择的下标，result: [2 2 0 1 1 2 0 1 0 1 2 2 0 2 0 2 0 0 0 0 0 0 2 2 0 1 1 2 2 2 2 0 2 0 1 0 0
 1 1 0 0 1 2 2 0 0 0 2 0 1 0 1 2 2 1 1 0 2 1 2 1 1 0 0 0 0 0 1 2 0 2 2 1 0
 0 2 1 2 0 2 2 1 2 2 2 0 2 2 1 0 2 1 2 1 0 0 2 2 2 1]
每个概率被转中的次数, count: [37 25 38]
choose which one? [2]
ys [884.65277165 881.62692737 883.51062891 ... 873.65977492 883.40037045
 892.7051591 ]
9  ys.argmax() 3626
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:236.887
训练集长度= 15
accuracy= 0.040203684638770124
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124]
三个采集函数选出的max_idx [7259, 7259, 9352]
max_means [-346.11214768 -346.11214768 -348.12182396]  max_stds [476.88800638 476.88800638 478.67513696]
所有模型的可信度所占权重  [0.09999941290060196, 0.09999965173131567, 0.09999979856312868, 0.09999993981012394, 0.10000000591315869, 0.1000000743441896, 0.10000015641016959, 0.10000027069211721, 0.10000032261592878, 0.1000003670192659]
三个函数的累计增益为[0.7097950579802399, 0.7097950579802399, 0.7072614972146698]
probability [0.33373040863936715, 0.33373040863936715, 0.3325391827212657]
probabilityTotal [0.33373041 0.66746082 1.        ]
每一轮选择的下标，result: [0 0 0 0 2 1 2 1 2 0 1 2 2 0 1 1 1 0 0 2 2 1 0 2 0 1 0 2 0 2 2 1 1 0 0 2 0
 1 0 2 2 1 2 2 0 0 2 0 1 1 0 0 2 2 0 0 2 2 0 1 0 0 0 2 0 2 2 1 1 1 0 0 1 1
 1 2 2 0 0 1 1 1 0 2 2 2 0 2 2 2 2 0 0 2 1 1 1 0 0 1]
每个概率被转中的次数, count: [38 28 34]
choose which one? [0]
ys [120.71768233 119.7499826  119.50927781 ... 122.60923468 123.94718387
 120.58888121]
10  ys.argmax() 7259
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:243.514
训练集长度= 16
accuracy= 0.040203695189417354
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354]
三个采集函数选出的max_idx [4639, 4639, 4639]
max_means [-323.60171605 -323.60171605 -323.60171605]  max_stds [463.26862071 463.26862071 463.26862071]
所有模型的可信度所占权重  [0.09090852468154736, 0.09090874180030038, 0.09090887528371903, 0.09090900369003245, 0.09090906378367893, 0.09090912599368478, 0.09090920059909446, 0.09090930449173698, 0.09090935169518516, 0.09090939206184084, 0.09090941591917964]
三个函数的累计增益为[0.7339577632352919, 0.7339577632352919, 0.732682031668805]
probability [0.3335265735075409, 0.3335265735075409, 0.3329468529849181]
probabilityTotal [0.33352657 0.66705315 1.        ]
每一轮选择的下标，result: [0 1 2 1 1 2 2 0 0 2 0 1 1 2 2 1 2 0 0 1 0 2 1 2 0 0 2 2 2 1 2 0 0 2 1 2 2
 0 2 1 2 2 1 2 0 1 2 2 0 2 2 2 1 2 2 2 0 1 2 0 0 1 1 1 1 1 0 1 0 2 1 2 0 2
 2 0 2 2 0 1 2 2 0 0 1 2 1 1 1 1 2 2 0 1 1 0 1 0 0 1]
每个概率被转中的次数, count: [28 32 40]
choose which one? [2]
ys [834.66186514 834.90307522 835.88695922 ... 839.05220205 831.57836954
 837.31420013]
11  ys.argmax() 4639
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:281.442
训练集长度= 17
accuracy= 0.04020370478038905
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905]
三个采集函数选出的max_idx [3032, 3032, 140]
max_means [-322.49513808 -322.49513808 -335.91327768]  max_stds [444.97032172 444.97032172 452.90222079]
所有模型的可信度所占权重  ================= config23 =================
2022年 07月 14日 星期四 22:23:05 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 14日 星期四 22:30:26 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 14日 星期四 22:36:41 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 14日 星期四 22:42:58 CST
cmd

end before line
finish
[0.08333278780776342, 0.08333298683322377, 0.08333310919298531, 0.0833332268987352, 0.08333328198456029, 0.08333333901038087, 0.08333340739865135, 0.08333350263354339, 0.08333354590335713, 0.08333358290611309, 0.08333360477533337, 0.08333362465535288]
三个函数的累计增益为[0.7396803114179601, 0.7396803114179601, 0.7284910321791003]
probability [0.3350226496140783, 0.3350226496140783, 0.32995470077184336]
probabilityTotal [0.33502265 0.6700453  1.        ]
每一轮选择的下标，result: [2 0 0 1 2 1 0 0 1 1 0 1 1 2 1 1 0 2 1 0 1 0 2 0 0 2 1 1 2 2 1 1 0 1 2 1 2
 0 1 1 2 0 2 1 0 2 1 1 0 1 1 2 2 1 2 1 0 0 1 2 2 1 1 1 2 1 2 2 2 2 1 1 2 1
 2 0 2 2 1 1 0 1 2 0 1 0 2 0 0 1 0 2 1 0 2 1 2 2 1 2]
每个概率被转中的次数, count: [25 41 34]
choose which one? [1]
ys [0.38021198 0.37411511 0.38113037 ... 0.38614969 0.37615842 0.37014791]
12  ys.argmax() 3032
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:293.372
训练集长度= 18
accuracy= 0.04020371137587419
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419]
三个采集函数选出的max_idx [7214, 7214, 6383]
max_means [-313.96847975 -313.96847975 -325.5128805 ]  max_stds [432.71630097 432.71630097 438.48783929]
所有模型的可信度所占权重  [0.07692255170484968, 0.07692273542060753, 0.07692284836804791, 0.07692295701947877, 0.07692300786791839, 0.07692306050712257, 0.07692312363473908, 0.07692321154384543, 0.07692325148520072, 0.07692328564158123, 0.07692330582854812, 0.07692332417933019, 0.07692333679873042]
三个函数的累计增益为[0.7516669768165383, 0.7516669768165383, 0.7406096673624394]
probability [0.33497587451999544, 0.33497587451999544, 0.330048250960009]
probabilityTotal [0.33497587 0.66995175 1.        ]
每一轮选择的下标，result: [0 0 2 0 1 0 1 1 2 1 2 1 2 1 1 2 1 0 2 1 1 0 2 1 1 0 1 0 0 2 0 2 2 1 2 2 1
 2 0 1 0 0 0 0 2 0 0 0 0 0 1 1 0 2 2 0 0 2 0 0 1 0 1 2 0 1 2 0 1 0 2 2 1 1
 1 1 0 1 1 1 0 2 1 1 1 0 0 1 1 2 0 1 1 2 2 1 1 0 2 0]
每个概率被转中的次数, count: [36 38 26]
choose which one? [1]
ys [0.38958916 0.38977689 0.38020342 ... 0.37549998 0.3885406  0.36065751]
13  ys.argmax() 7214
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.644
训练集长度= 19
accuracy= 0.04020371623379866
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866]
三个采集函数选出的max_idx [5882, 5882, 2511]
max_means [-282.97138177 -282.97138177 -305.43340232]  max_stds [410.1415574  410.1415574  424.88120273]
所有模型的可信度所占权重  [0.07142806587291209, 0.07142823646607314, 0.07142834134581301, 0.07142844223640216, 0.07142848945279857, 0.07142853833204738, 0.07142859695053377, 0.07142867858039785, 0.07142871566878993, 0.07142874738542103, 0.07142876613045702, 0.0714287831704647, 0.07142879488847627, 0.07142880351941303]
三个函数的累计增益为[0.7830617772795139, 0.7830617772795139, 0.7618036355038996]
probability [0.3363772632675623, 0.3363772632675623, 0.32724547346487537]
probabilityTotal [0.33637726 0.67275453 1.        ]
每一轮选择的下标，result: [2 0 1 2 2 1 1 1 2 2 1 2 2 1 2 1 2 1 2 0 2 2 0 0 2 1 0 2 2 2 2 2 0 2 0 0 1
 2 2 2 2 2 1 0 1 2 1 0 0 2 0 1 0 0 1 0 0 1 1 0 0 0 0 2 0 1 0 0 2 2 0 1 0 1
 2 0 0 2 0 2 0 2 1 0 2 0 2 1 2 1 2 0 1 2 2 1 0 0 2 1]
每个概率被转中的次数, count: [34 26 40]
choose which one? [2]
ys [753.11436419 742.4346715  760.07145872 ... 752.51418144 658.44360007
 761.0913093 ]
14  ys.argmax() 2511
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:227.024
训练集长度= 20
accuracy= 0.04020372160590171
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171]
三个采集函数选出的max_idx [1325, 4485, 1682]
max_means [-279.70538977 -279.0215858  -308.42284762]  max_stds [401.11503378 400.15906103 417.39660273]
所有模型的可信度所占权重  [0.06666617977974212, 0.06666633899998987, 0.066666436887725, 0.06666653105225363, 0.06666657512088035, 0.06666662074150227, 0.06666667545207725, 0.0666667516399332, 0.06666678625575799, 0.06666681585794035, 0.06666683335330333, 0.0666668492573069, 0.06666686019411523, 0.0666668682496544, 0.0666668771578181]
三个函数的累计增益为[0.792025890501842, 0.7925731608140548, 0.7635726320152746]
probability [0.33729471150859613, 0.3375277738166453, 0.3251775146747586]
probabilityTotal [0.33729471 0.67482249 1.        ]
每一轮选择的下标，result: [1 0 1 0 2 0 2 2 1 2 1 2 2 1 1 2 1 2 0 2 0 0 1 1 1 2 2 1 1 2 2 2 0 0 0 1 1
 0 2 0 1 0 1 1 2 0 0 2 1 2 2 1 1 2 1 2 0 2 0 0 0 0 1 1 1 1 0 0 0 0 0 2 1 0
 1 1 2 1 1 2 1 2 0 0 1 1 1 1 0 0 0 1 2 1 2 2 0 1 0 0]
每个概率被转中的次数, count: [33 38 29]
choose which one? [1]
ys [0.36647545 0.39388461 0.38712313 ... 0.39143532 0.41203361 0.36617166]
15  ys.argmax() 4485
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.089
训练集长度= 21
accuracy= 0.04020372174656346
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346]
三个采集函数选出的max_idx [9552, 9552, 5222]
max_means [-254.79244747 -254.79244747 -299.11579387]  max_stds [387.49347402 387.49347402 406.02515963]
所有模型的可信度所占权重  [0.062499531196468006, 0.06249968046542078, 0.062499772235154336, 0.062499860514382485, 0.062499901828711873, 0.06249994459803648, 0.062499995889190384, 0.06250006731529123, 0.06250009976762057, 0.06250012751966104, 0.0625001439215606, 0.062500158831561, 0.06250016908481679, 0.06250017663688326, 0.06250018498828509, 0.06250018520695604]
三个函数的累计增益为[0.8218803341867212, 0.8219145386825928, 0.7752685354534075]
probability [0.3397514638760871, 0.3397656034376025, 0.32048293268631045]
probabilityTotal [0.33975146 0.67951707 1.        ]
每一轮选择的下标，result: [2 0 2 2 1 2 0 2 0 2 0 2 0 2 2 2 1 1 0 0 1 1 1 2 1 2 1 0 2 2 2 2 0 2 0 2 0
 0 1 0 2 0 0 0 0 1 0 1 0 2 2 2 1 1 0 0 2 1 2 1 2 0 0 0 1 0 0 0 1 0 2 1 0 0
 0 0 2 2 0 1 2 1 0 1 1 2 1 2 1 0 0 2 0 1 0 1 1 1 2 2]
每个概率被转中的次数, count: [38 28 34]
choose which one? [0]
ys [115.59662251 104.77066995 113.07549747 ...  84.86390292  97.4420088
 114.74618511]
16 ================= config27 =================
2022年 07月 14日 星期四 22:49:11 CST
cmd

end before line
finish
================= config28 =================
2022年 07月 14日 星期四 22:55:36 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 14日 星期四 23:01:54 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 14日 星期四 23:08:09 CST
cmd

end before line
finish
================= config31 =================
2022年 07月 14日 星期四 23:14:23 CST
cmd

end before line
finish
 ys.argmax() 9552
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:227.425
训练集长度= 22
accuracy= 0.040203720274854964
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964]
三个采集函数选出的max_idx [5336, 9689, 4913]
max_means [-255.50614397 -252.00746698 -292.71358397]  max_stds [374.76523218 368.09500553 397.41181981]
所有模型的可信度所占权重  [0.05882307805798215, 0.05882321854638411, 0.05882330491788317, 0.05882338800420124, 0.05882342688826927, 0.05882346714174432, 0.05882351541576321, 0.05882358264031713, 0.058823613183680665, 0.05882363930324367, 0.05882365474032295, 0.05882366877326209, 0.05882367842338352, 0.05882368553120957, 0.058823693391351115, 0.05882369359715903, 0.05882369144384272]
三个函数的累计增益为[0.826992841559278, 0.8302234363280392, 0.7847730415490686]
probability [0.33865538844786963, 0.33997832411472456, 0.3213662874374058]
probabilityTotal [0.33865539 0.67863371 1.        ]
每一轮选择的下标，result: [0 2 0 1 0 1 2 0 2 1 2 2 1 0 1 0 0 1 0 2 1 2 2 2 2 2 0 0 1 0 0 0 0 2 0 1 2
 1 2 2 0 2 2 1 1 1 2 2 1 2 2 2 2 2 2 2 1 0 1 1 1 0 2 0 1 1 1 1 2 1 1 1 0 2
 2 2 1 0 1 2 0 2 2 2 2 1 0 0 1 0 0 1 0 2 2 1 2 1 0 2]
每个概率被转中的次数, count: [28 32 40]
choose which one? [2]
ys [672.7459211  652.01018142 648.9413763  ... 714.42988217 647.80829629
 710.7151761 ]
17  ys.argmax() 4913
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:229.477
训练集长度= 23
accuracy= 0.04020372122047502
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502]
三个采集函数选出的max_idx [3010, 3010, 2573]
max_means [-249.40333534 -249.40333534 -287.19314569]  max_stds [362.94274925 362.94274925 388.31978474]
所有模型的可信度所占权重  [0.055555120702772166, 0.055555253386242426, 0.05555533495931229, 0.05555541342971169, 0.05555545015354804, 0.05555548817071306, 0.05555553376283497, 0.05555559725268166, 0.055555626099187204, 0.05555565076765957, 0.055555665347121086, 0.05555567860045045, 0.055555687714452615, 0.055555694427398404, 0.055555701850864274, 0.05555570204523838, 0.05555570001155107, 0.05555570131826059]
三个函数的累计增益为[0.8386701255896307, 0.8388782190593309, 0.793269346917957]
probability [0.33943019286775916, 0.3395144133549325, 0.32105539377730835]
probabilityTotal [0.33943019 0.67894461 1.        ]
每一轮选择的下标，result: [0 1 2 2 0 0 0 1 1 2 1 0 0 2 1 1 1 0 2 0 2 0 2 2 1 0 2 2 0 1 2 1 1 0 0 1 1
 2 1 1 2 0 0 0 1 2 1 2 1 2 1 1 1 2 1 0 2 1 0 1 2 2 0 1 0 2 1 2 0 1 2 0 0 2
 2 1 1 1 2 1 1 2 1 2 0 2 1 2 1 2 0 2 0 0 2 1 0 2 2 2]
每个概率被转中的次数, count: [28 36 36]
choose which one? [1]
ys [0.22878905 0.40801711 0.35877531 ... 0.3136886  0.37230879 0.40424197]
18  ys.argmax() 3010
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:228.856
训练集长度= 24
accuracy= 0.04020370991208953
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953]
三个采集函数选出的max_idx [4779, 2251, 6156]
max_means [-251.1011447  -250.34106022 -267.35490029]  max_stds [365.12646428 358.34701507 376.34376469]
所有模型的可信度所占权重  [0.05263116049284165, 0.05263128619295587, 0.05263136347269674, 0.05263143781306596, 0.052631472604064526, 0.05263150862032168, 0.05263155181285291, 0.0526316119611213, 0.05263163928938634, 0.05263166265951518, 0.052631676471634914, 0.052631689027419076, 0.05263169766173585, 0.05263170402136792, 0.052631711054124196, 0.05263171123826806, 0.05263170931161716, 0.052631710549552346, 0.05263169574545826]
三个函数的累计增益为[0.8426741654183477, 0.8431819475212556, 0.8163050955104632]
probability [0.3367785267282327, 0.336981464133382, 0.32624000913838547]
probabilityTotal [0.33677853 0.67375999 1.        ]
每一轮选择的下标，result: [1 1 1 0 2 2 1 0 0 1 2 2 1 2 0 1 0 1 1 2 1 0 1 0 0 1 2 0 2 1 1 1 2 2 2 2 2
 2 2 1 0 0 1 1 2 1 2 2 1 2 2 0 0 0 0 1 2 1 1 0 2 0 1 2 2 1 1 1 0 1 2 0 1 1
 1 2 1 1 2 1 2 1 2 0 2 2 2 2 0 2 0 2 0 0 0 1 0 2 2 0]
每个概率被转中的次数, count: [27 36 37]
choose which one? [2]
ys [660.06011092 664.78972289 662.25719269 ... 576.50044116 617.50859405
 628.69171029]
19  ys.argmax() 6156
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:226.018
训练集长度= 25
accuracy= 0.04020371656026751
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751]
三个采集函数选出的max_idx [8036, 8036, 4923]
max_means [-234.04096145 -234.04096145 -271.52926193]  max_stds [346.5011736  346.5011736  367.21102908]
所有模型的可信度所占权重  [0.04999959650693173, 0.04999971592202601, 0.04999978933777108, 0.04999985996111341, 0.04999989301255812, 0.049999927227998335, 0.04999996826089811, 0.050000025401746265, 0.05000005136359496, 0.05000007356521471, 0.05000008668672689, 0.05000009861472043, 0.05000010681732039, 0.05000011285897013, 0.05000011954008779, 0.050000119715024445, 0.050000117884706305, 0.05000011906074459, 0.050000104996856885, 0.0500001132649893]
三个函数的累计增益为[0.8658162940192622, 0.8660191101790278, 0.8154279495528949]
probability [0.3399005810468055, 0.3399802022447735, 0.32011921670842103]
probabilityTotal [0.33990058 0.67988078 1.        ]
每一轮选择的下标，result: [2 0 2 2 1 0 0 2 0 1 2 1 0 1 2 1 1 1 2 0 0 2 0 2 1 0 2 0 1 2 2 1 2 1 1 1 2
 1 0 2 1 1 0 2 1 0 2 1 0 1 2 1 0 2 0 2 0 2 1 1 1 1 1 1 2 2 0 2 2 1 1 1 2 0
 2 2 2 0 0 0 1 1 1 0 2 1 2 1 1 2 2 1 0 1 1 0 2 2 0 2]
每个概率被转中的次数, count: [26 38 36]
choose which one? [1]
ys [0.37094663 0.42273128 0.4173078  ... 0.39574141 0.38710015 0.39521148]
20  ys.argmax() 8036
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
================= config32 =================
2022年 07月 14日 星期四 23:20:42 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 14日 星期四 23:26:55 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 14日 星期四 23:33:17 CST
cmd

end before line
finish
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:229.561
训练集长度= 26
accuracy= 0.04020371082428883
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883]
三个采集函数选出的max_idx [6890, 9729, 8379]
max_means [-242.66261526 -235.25219425 -269.10190986]  max_stds [335.55268735 305.04779872 360.97726713]
所有模型的可信度所占权重  [0.04761865852676203, 0.04761877225541175, 0.04761884217516189, 0.047618909435481124, 0.047618940913044326, 0.04761897349917458, 0.04761901257812279, 0.04761906699797268, 0.04761909172354037, 0.04761911286793799, 0.04761912536461499, 0.047619136724607686, 0.04761914453660686, 0.04761915029055842, 0.04761915665352697, 0.04761915682013329, 0.04761915507697334, 0.04761915619700969, 0.04761914280283227, 0.047619150677243295, 0.04761914388328352]
三个函数的累计增益为[0.8606668227411902, 0.8684717962743279, 0.8212394381624937]
probability [0.337466369081577, 0.3405266893000523, 0.3220069416183707]
probabilityTotal [0.33746637 0.67799306 1.        ]
每一轮选择的下标，result: [1 0 0 0 1 1 0 1 1 1 0 2 0 1 2 2 0 1 0 0 1 0 2 1 1 0 1 1 2 2 1 1 1 2 2 2 2
 2 1 2 1 2 0 1 2 2 1 1 1 0 0 2 2 1 0 2 1 2 1 2 2 0 2 0 0 0 1 0 1 0 2 0 2 1
 1 1 2 1 2 0 0 1 2 1 2 2 1 1 1 1 1 1 0 1 0 2 2 1 0 1]
每个概率被转中的次数, count: [27 42 31]
choose which one? [1]
ys [0.38280686 0.37734531 0.36700242 ... 0.34112748 0.41476492 0.37608698]
21  ys.argmax() 9729
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:224.233
训练集长度= 27
accuracy= 0.0402036978554472
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883, 0.0402036978554472]
三个采集函数选出的max_idx [1985, 1985, 9732]
max_means [-223.50732471 -223.50732471 -279.18944479]  max_stds [309.13987116 309.13987116 359.3702274 ]
所有模型的可信度所占权重  [0.045454170538033044, 0.045454279097190305, 0.04545434583876483, 0.04545441004179187, 0.04545444008855442, 0.04545447119349453, 0.04545450849612403, 0.04545456044234037, 0.045454584044016796, 0.04545460422730387, 0.04545461615594919, 0.04545462699957774, 0.04545463445648546, 0.045454639948893344, 0.04545464602263559, 0.04545464618166888, 0.0454546445177436, 0.04545464558686912, 0.045454632801518936, 0.04545464031800161, 0.045454633832858686, 0.04545461917018365]
三个函数的累计增益为[0.8867698225430731, 0.8873001930031521, 0.8125638538764742]
probability [0.34282773183550236, 0.34303277456162945, 0.31413949360286814]
probabilityTotal [0.34282773 0.68586051 1.        ]
每一轮选择的下标，result: [0 0 0 0 2 2 1 1 1 1 1 1 0 2 0 0 2 2 2 2 1 2 2 2 2 2 0 0 1 0 2 0 2 0 1 1 0
 1 0 1 2 1 2 2 0 2 0 1 2 0 2 0 0 1 1 2 1 2 2 1 1 2 2 2 0 0 1 2 0 1 2 2 2 2
 0 2 0 0 1 2 1 2 0 0 0 0 1 1 1 0 2 1 2 0 2 2 1 2 0 0]
每个概率被转中的次数, count: [33 28 39]
choose which one? [2]
ys [579.75013318 570.91320928 609.43154208 ... 584.21383918 511.45686464
 575.09030415]
22  ys.argmax() 9732
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:230.827
训练集长度= 28
accuracy= 0.0402037108186893
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883, 0.0402036978554472, 0.0402037108186893]
三个采集函数选出的max_idx [5095, 5095, 348]
max_means [-236.84389405 -236.84389405 -258.90633397]  max_stds [331.33632509 331.33632509 347.78688284]
所有模型的可信度所占权重  [0.04347789857859605, 0.043478002417781166, 0.04347806625754271, 0.0434781276691286, 0.043478156409507744, 0.043478186162056634, 0.043478221842829665, 0.043478271530510655, 0.04347829410602533, 0.043478313411776555, 0.043478324821784146, 0.04347833519394972, 0.04347834232664346, 0.04347834758025055, 0.043478353389916555, 0.043478353542035345, 0.043478351950454776, 0.04347835297309649, 0.04347834074363213, 0.0434783479333106, 0.04347834173013094, 0.043478327704964695, 0.043478341724075324]
三个函数的累计增益为[0.8756574799131602, 0.8761647907451355, 0.8364922513871815]
probability [0.3383118521551048, 0.3385078526131845, 0.32318029523171066]
probabilityTotal [0.33831185 0.6768197  1.        ]
每一轮选择的下标，result: [2 1 0 1 1 0 1 0 1 1 2 0 1 0 0 0 2 0 1 1 1 2 2 0 0 1 1 0 0 1 0 1 0 1 0 1 0
 1 2 1 0 0 0 1 2 2 0 1 1 1 1 0 0 2 1 0 1 1 1 0 0 2 1 0 2 1 0 0 0 1 0 2 0 2
 0 1 0 1 1 2 1 1 1 2 2 2 1 2 0 1 0 0 0 0 1 0 2 1 0 1]
每个概率被转中的次数, count: [40 41 19]
choose which one? [1]
ys [0.189686   0.42023222 0.38861528 ... 0.34003384 0.35950343 0.28317128]
23  ys.argmax() 5095
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:233.387
训练集长度= 29
accuracy= 0.040203707418004594
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883, 0.0402036978554472, 0.0402037108186893, 0.040203707418004594]
三个采集函数选出的max_idx [1650, 5700, 5588]
max_means [-249.78615706 -224.92560621 -271.54825187]  max_stds [334.91580547 286.88655629 344.58368016]
所有模型的可信度所占权重  [0.04166631638946651, 0.041666415902011554, 0.04166647708177851, 0.04166653593454397, 0.04166656347740528, 0.04166659199026252, 0.04166662618433414, 0.041666673801691576, 0.0416666954365582, 0.04166671393790176, 0.04166672487249156, 0.04166673481248283, 0.04166674164798049, 0.04166674668268692, 0.041666752250283094, 0.041666752396063586, 0.041666750870798984, 0.04166675185083056, 0.04166674013092809, 0.04166674702103611, 0.041666741076322705, 0.04166672763553938, 0.04166674107051941, 0.04166673754608233]
三个函数的累计增益为[0.8643450584665493, 0.8942767949663615, 0.8250960499981426]
probability [0.3345353830302993, 0.3461201371011923, 0.3193444798685083]
probabilityTotal [0.33453538 0.68065552 1.        ]
每一轮选择的下标，result: ================= config35 =================
2022年 07月 14日 星期四 23:39:52 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 14日 星期四 23:46:14 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 14日 星期四 23:52:43 CST
cmd

end before line
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/common/start_benchmark.py", line 33, in <module>
    for line in p.stderr:
KeyboardInterrupt
[0 0 0 2 0 2 0 0 2 2 1 2 1 1 0 2 1 1 1 0 2 0 1 2 0 1 1 2 0 1 1 1 2 0 2 0 0
 2 2 2 1 1 1 2 2 2 1 1 0 0 1 0 2 1 2 1 2 1 1 0 0 1 2 0 0 0 1 0 2 0 2 0 1 0
 2 1 1 0 2 0 1 2 1 2 1 0 0 2 1 0 1 2 1 2 0 1 1 2 0 2]
每个概率被转中的次数, count: [33 35 32]
choose which one? [1]
ys [0.33875486 0.35668528 0.38150495 ... 0.31766435 0.34633264 0.38180059]
24  ys.argmax() 5700
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:222.084
训练集长度= 30
accuracy= 0.0402037011233343
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883, 0.0402036978554472, 0.0402037108186893, 0.040203707418004594, 0.0402037011233343]
三个采集函数选出的max_idx [4244, 4939, 6483]
max_means [-241.71556215 -232.04111214 -282.31654898]  max_stds [317.42030313 303.30899712 342.5768503 ]
所有模型的可信度所占权重  [0.03999966126265068, 0.03999975679468802, 0.03999981552726067, 0.039999872025912014, 0.03999989846705724, 0.03999992583939851, 0.039999958665705236, 0.040000004378365546, 0.040000025147836224, 0.04000004290912494, 0.040000053406330505, 0.04000006294872153, 0.04000006951079888, 0.04000007434411675, 0.04000007968900875, 0.040000079828958014, 0.04000007836470409, 0.04000007930553434, 0.04000006805442866, 0.040000074668931955, 0.04000006896200744, 0.040000056058856245, 0.04000006895643628, 0.04000006557297689, 0.040000059310190676]
三个函数的累计增益为[0.8730895117292774, 0.8862975746064559, 0.8125481421933456]
probability [0.3394679236259802, 0.3446033806665264, 0.31592869570749327]
probabilityTotal [0.33946792 0.6840713  1.        ]
每一轮选择的下标，result: [2 0 0 0 1 1 2 0 0 0 1 1 1 2 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1 1 0 1 0 1 2 1 2
 1 1 0 0 1 2 0 1 2 0 1 1 0 1 0 0 1 2 0 0 2 1 2 0 2 0 0 0 1 2 2 1 1 0 2 0 2
 0 1 1 1 2 1 2 1 2 1 2 2 1 1 0 1 1 0 2 0 1 2 1 1 2 1]
每个概率被转中的次数, count: [35 42 23]
choose which one? [1]
ys [0.37549986 0.39184554 0.30294789 ... 0.16415583 0.30735414 0.38702801]
25  ys.argmax() 4939
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1100
runtime:226.428
训练集长度= 31
accuracy= 0.04020369368277674
所有模型的可信度  [0.04020330104931924, 0.040203397067713795, 0.04020345609929619, 0.040203512885584304, 0.0402035394613424, 0.040203566973037286, 0.040203599966463985, 0.040203645911849176, 0.040203666787058015, 0.040203684638770124, 0.040203695189417354, 0.04020370478038905, 0.04020371137587419, 0.04020371623379866, 0.04020372160590171, 0.04020372174656346, 0.040203720274854964, 0.04020372122047502, 0.04020370991208953, 0.04020371656026751, 0.04020371082428883, 0.0402036978554472, 0.0402037108186893, 0.040203707418004594, 0.0402037011233343, 0.04020369368277674]
三个采集函数选出的max_idx [8323, 8323, 9039]
max_means [-212.46799123 -212.46799123 -256.033811  ]  max_stds [288.09350783 288.09350783 330.61570218]
所有模型的可信度所占权重  [0.03846121083291562, 0.03846130269063925, 0.03846135916426398, 0.03846141348988756, 0.038461438914064394, 0.03846146523362199, 0.038461496797376885, 0.03846154075185576, 0.03846156072249964, 0.03846157780066102, 0.0384615878941274, 0.03846159706950293, 0.038461603379192376, 0.03846160802661317, 0.03846161316593215, 0.03846161330049874, 0.03846161189256234, 0.03846161279720677, 0.03846160197883647, 0.03846160833893547, 0.03846160285150833, 0.03846159044463279, 0.03846160284615144, 0.03846159959282527, 0.03846159357091575, 0.03846158645277256]
三个函数的累计增益为[0.9140451431246258, 0.916071192352562, 0.8432788536046679]
probability [0.34190423730003916, 0.34266209354075156, 0.31543366915920934]
probabilityTotal [0.34190424 0.68456633 1.        ]
每一轮选择的下标，result: [1 1 1 1 0 2 2 0 0 0 1 2 1 2 0 2 1 1 0 1 0 0 2 0 1 2 0 2 0 1 1 1 2 0 2 1 1
 1 1 0 2 0 0 2 0 0 0 2 0 1 2 0 2 2 2 2 1 2 0 1 1 1 1 1 0 1 2 2 0 1 0 0 2 1
 1 1 0 0 1 1 0 2 0 0 2 1 0 0 1 0 1 1 0 0 1 0 1 2 0 0]
每个概率被转中的次数, count: [38 37 25]
choose which one? [0]
ys [41.61767353 98.87061335 89.87753685 ... 99.58672486 68.55243728
 92.40807359]
26  ys.argmax() 8323
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行失败
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/target_space.py", line 193, in probe
    target = self._cache[_hashable(x)]
KeyError: (35.838527274667044, 0.5380594735017931, 0.4093223771038683, 323.33028026722667, 6.0657183622791075, 8.90198337076094, 11.869918987503773, 832.0564841321805, 106.85028683368078, 97.67916510350017, 8.95200377767693, 2028865527.7539825, 0.8302761101204164, 0.6399283461525545, 589.6393801782709, 0.7675070758817346, 0.3622041203987437, 1548007748.006929, 2118048476.7758307, 66.22742389409433, 0.0830350074989068, 752.3562307969215, 0.8626579008674122, 44.76825039736138, 1.6900563016281387, 237.14373795157493, 7.639194607694153)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 327, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 241, in maximize
    self.probe(x_probe, lazy=False)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/bayesian_optimization.py", line 118, in probe
    self._space.probe(params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/bayes_scode/target_space.py", line 196, in probe
    target, status = self.target_func(**params)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 42, in black_box_function
    runtime,statue=schafferRun(i)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 238, in schafferRun
    runtime,statue = run(configNum)
  File "/usr/local/home/auto_tool/yyq/BO-combineAC2/VSGNet_Bayesian_Optimization.py", line 105, in run
    time.sleep(3)
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool//yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/logs_wordcount.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 14日 星期四 23:53:53 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 15日 星期五 00:06:11 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 15日 星期五 00:09:57 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 15日 星期五 00:13:35 CST
cmd

end before line
finish
benchmark = wordcount-100G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：wordcount  默认配置执行结果为 1100.0 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 2200
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 3652
runtime:730.492
生成测试集 - 配置成功 target -730.492  conf {'spark.broadcast.blockSize': 45.34470415048237, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 1.440267672451339, 'spark.executor.instances': 2.554031568612787, 'spark.executor.memory': 3.1175612682660256, 'spark.executor.memoryOverhead': 554.3614384322225, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 6.515167086419769, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 328.9213327007694, 'spark.storage.memoryMapThreshold': 1.2551326341093336}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1088
runtime:217.732
生成测试集 - 配置成功 target -217.732  conf {'spark.broadcast.blockSize': 33.24975306345223, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 2.2633228750151564, 'spark.executor.instances': 7.747337180903012, 'spark.executor.memory': 5.198991709838102, 'spark.executor.memoryOverhead': 725.0954171775834, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 9.007754031384238, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 192.32562320001182, 'spark.storage.memoryMapThreshold': 1.7966399781166786}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:211.151
生成测试集 - 配置成功 target -211.151  conf {'spark.broadcast.blockSize': 47.730341096970825, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 2.767916610709853, 'spark.executor.instances': 6.198550160125587, 'spark.executor.memory': 2.614006572966955, 'spark.executor.memoryOverhead': 588.1296019950472, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 4.299720753676523, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 295.1995970700903, 'spark.storage.memoryMapThreshold': 3.6499182736174296}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:229.896
生成测试集 - 配置成功 target -229.896  conf ================= config5 =================
2022年 07月 15日 星期五 00:17:32 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 15日 星期五 00:21:23 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 15日 星期五 00:32:52 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 15日 星期五 00:36:47 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 15日 星期五 00:40:51 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 15日 星期五 00:45:05 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 15日 星期五 00:49:21 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 51.957510625779484, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 3.6876586545882004, 'spark.executor.instances': 4.5685471392277694, 'spark.executor.memory': 7.789040282890314, 'spark.executor.memoryOverhead': 711.0766584244949, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.696935552242428, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 153.16424856931127, 'spark.storage.memoryMapThreshold': 3.788311701231284}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:223.2
生成测试集 - 配置成功 target -223.2  conf {'spark.broadcast.blockSize': 54.108701360541566, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 3.797786389111491, 'spark.executor.instances': 6.180908968939401, 'spark.executor.memory': 2.396001036332375, 'spark.executor.memoryOverhead': 756.443284933016, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 8.26914855177083, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 153.7294578745886, 'spark.storage.memoryMapThreshold': 3.401898018041849}
X_test [array([4.53447042e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       1.44026767e+00, 2.55403157e+00, 3.11756127e+00, 5.54361438e+02,
       7.00896775e+01, 8.37264065e+01, 6.51516709e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 3.28921333e+02, 1.25513263e+00]), array([3.32497531e+01, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       2.26332288e+00, 7.74733718e+00, 5.19899171e+00, 7.25095417e+02,
       6.22895006e+01, 9.79040891e+01, 9.00775403e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.92325623e+02, 1.79663998e+00]), array([4.77303411e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       2.76791661e+00, 6.19855016e+00, 2.61400657e+00, 5.88129602e+02,
       9.86624151e+01, 7.17612099e+01, 4.29972075e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 2.95199597e+02, 3.64991827e+00]), array([5.19575106e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       3.68765865e+00, 4.56854714e+00, 7.78904028e+00, 7.11076658e+02,
       9.16827891e+01, 4.30156134e+01, 9.69693555e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.53164249e+02, 3.78831170e+00]), array([5.41087014e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       3.79778639e+00, 6.18090897e+00, 2.39600104e+00, 7.56443285e+02,
       1.04372114e+02, 1.20610355e+02, 8.26914855e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.53729458e+02, 3.40189802e+00])]  y_test [-730.492, -217.732, -211.151, -229.896, -223.2]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:681.641
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:227.431
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:236.783
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:246.002
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:249.124
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1055
runtime:283.361
训练集长度= 6
accuracy= 0.08380363592499984
所有模型的可信度  [0.08380363592499984]
三个采集函数选出的max_idx [3052, 3052, 3052]
max_means [-320.37973743 -320.37973743 -320.37973743]  max_stds [162.33404269 162.33404269 162.33404269]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.2834655718014536, 0.2834655718014536, 0.2834655718014536]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config12 =================
2022年 07月 15日 星期五 00:55:51 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 15日 星期五 01:01:48 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 15日 星期五 01:07:50 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 15日 星期五 01:13:31 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 15日 星期五 01:19:20 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 15日 星期五 01:24:18 CST
cmd

end before line
finish
[0 0 0 2 2 2 1 1 0 2 2 2 1 0 0 0 0 0 2 0 0 2 1 1 0 2 1 2 1 0 2 0 1 2 1 0 2
 0 0 2 1 2 1 0 2 1 0 0 0 2 1 2 0 1 2 2 0 0 0 0 1 2 1 2 1 0 2 2 2 2 0 1 1 1
 2 0 0 1 2 0 1 2 0 2 1 1 0 2 2 1 1 0 0 1 1 1 2 0 1 2]
每个概率被转中的次数, count: [36 30 34]
choose which one? [0]
ys [28.52576398 28.52581292 28.52564469 ... 28.53529832 28.52765672
 28.5241754 ]
1  ys.argmax() 3052
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1043
runtime:208.788
训练集长度= 7
accuracy= 0.08380355401081477
所有模型的可信度  [0.08380363592499984, 0.08380355401081477]
三个采集函数选出的max_idx [9712, 5585, 6247]
max_means [-281.1349841  -275.8143781  -285.54277345]  max_stds [150.82231893 145.39182112 153.50175862]
所有模型的可信度所占权重  [0.5000002443635775, 0.49999975563642257]
三个函数的累计增益为[0.4574589329347421, 0.4641301722675684, 0.4502613239831206]
probability [0.3334612310515289, 0.33832418053268154, 0.3282145884157896]
probabilityTotal [0.33346123 0.67178541 1.        ]
每一轮选择的下标，result: [1 0 0 1 1 0 1 0 1 0 2 2 0 1 0 2 0 1 1 2 1 2 1 2 2 0 1 2 2 1 0 0 2 1 2 1 2
 2 1 1 2 2 2 1 2 1 2 1 1 0 2 0 2 1 2 1 0 0 0 1 0 2 0 0 0 2 1 0 1 1 2 2 1 0
 2 2 1 0 1 1 0 0 1 2 1 2 1 2 1 0 2 2 2 2 2 1 0 2 2 0]
每个概率被转中的次数, count: [28 35 37]
choose which one? [2]
ys [92.68680977 92.62084391 95.80650891 ... 90.08646197 97.05854138
 94.38430512]
2  ys.argmax() 6247
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1024
runtime:204.916
训练集长度= 8
accuracy= 0.08380349289773026
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026]
三个采集函数选出的max_idx [7685, 7685, 3692]
max_means [-242.9153756  -242.9153756  -263.04220412]  max_stds [131.05627422 131.05627422 143.60050176]
所有模型的可信度所占权重  [0.33333363157239004, 0.33333330575415454, 0.3333330626734555]
三个函数的累计增益为[0.5856588889800967, 0.5878826336187353, 0.5401519590609875]
probability [0.3417524167815877, 0.34305004944602707, 0.3151975337723853]
probabilityTotal [0.34175242 0.68480247 1.        ]
每一轮选择的下标，result: [1 2 2 0 2 2 2 0 0 0 1 1 0 2 2 2 0 0 0 2 0 0 0 0 0 1 0 2 0 1 0 2 2 0 2 1 2
 2 1 2 0 2 1 2 2 2 0 1 2 0 2 0 2 1 0 1 0 0 2 0 0 0 1 2 1 2 1 2 0 0 2 0 1 1
 2 2 2 1 1 1 1 2 1 2 0 1 0 1 2 0 0 1 2 0 2 2 2 0 2 0]
每个概率被转中的次数, count: [37 24 39]
choose which one? [2]
ys [48.18571158  7.69094267 32.44186769 ... 31.21257105 72.44259816
 80.37192913]
3  ys.argmax() 3692
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:191.618
训练集长度= 9
accuracy= 0.08380348815780204
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204]
三个采集函数选出的max_idx [7603, 9319, 3501]
max_means [-233.64781822 -226.40859923 -250.95921314]  max_stds [125.6058862  117.726977   137.87744173]
所有模型的可信度所占权重  [0.2500002779630791, 0.25000003359934936, 0.24999985128878557, 0.24999983714878607]
三个函数的累计增益为[0.6152370929203778, 0.6317463401816189, 0.5671592292433577]
probability [0.33913379895106416, 0.34823410159203605, 0.31263209945689974]
probabilityTotal [0.3391338 0.6873679 1.       ]
每一轮选择的下标，result: [2 2 1 1 1 1 1 1 1 2 0 1 2 2 1 0 2 0 0 1 2 0 0 0 2 1 2 0 1 0 2 1 1 1 1 0 0
 0 1 1 2 0 0 0 0 2 2 2 1 1 1 1 1 0 2 1 0 2 0 2 0 1 1 1 0 2 0 1 0 2 2 2 2 2
 2 1 1 2 1 0 0 2 1 2 1 2 2 0 1 2 2 2 1 2 0 0 0 1 0 1]
每个概率被转中的次数, count: [30 37 33]
choose which one? [1]
ys [0.24571818 0.08420859 0.25023479 ... 0.26949503 0.24140091 0.19892047]
4  ys.argmax() 9319
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:214.93
训练集长度= 10
accuracy= 0.08380350223954455
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455]
三个采集函数选出的max_idx [9427, 8263, 9266]
max_means [-228.81057342 -216.22813129 -245.76042341]  max_stds [117.49359056  93.078739   128.92396393]
所有模型的可信度所占权重  [0.20000024170536954, 0.20000004621436687, 0.19999990036590173, 0.19999988905390104, 0.19999992266046088]
三个函数的累计增益为[0.6466079883786853, 0.670853298127687, 0.5909127184235925]
probability [0.3388266590868885, 0.3515313541237985, 0.30964198678931304]
probabilityTotal [0.33882666 0.69035801 1.        ]
每一轮选择的下标，result: [1 1 1 0 1 0 0 2 2 0 2 2 0 0 1 1 0 0 0 0 2 2 1 2 2 0 1 0 2 0 2 0 2 2 1 0 0
 0 1 1 1 0 2 2 2 1 1 1 1 1 2 0 2 0 1 0 0 0 0 2 0 1 2 1 2 0 1 0 2 1 1 1 2 2
 2 0 0 1 2 1 1 0 0 2 2 0 1 2 2 0 1 0 0 2 1 2 0 2 2 1]
每个概率被转中的次数, count: [36 31 33]
choose which one? [0]
ys [13.81742851  6.86624278 13.36811018 ... 12.41826876  9.70151092
 14.15605146]
5  ys.argmax() 9427
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:192.617
训练集长度= 11
accuracy= 0.08380351490629359
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359]
三个采集函数选出的max_idx [6039, 6039, 4037]
max_means [-216.73652831 -216.73652831 -239.14303303]  max_stds [101.62728512 101.62728512 120.81565173]
所有模型的可信度所占权重  [0.1666668746308591, 0.16666671172168385, 0.16666659018129146, 0.16666658075462382, 0.16666660876009146, 0.1666666339514504]
三个函数的累计增益为[0.6907025274108513, 0.6976117676827289, 0.6146119065234825]
probability [0.34484671819321777, 0.34829629125601935, 0.306856990550763]
probabilityTotal [0.34484672 0.69314301 1.        ]
每一轮选择的下标，result: [2 0 0 1 0 0 2 1 1 2 1 2 2 1 2 0 0 1 1 0 0 0 0 0 0 1 1 0 0 1 1 2 1 1 0 0 2
 0 1 2 2 1 2 2 1 0 2 1 0 1 0 0 2 2 0 1 1 2 1 0 0 0 2 2 0 1 0 2 2 1 0 0 1 0
 1 2 0 2 2 0 0 2 0 0 2 0 0 0 1 0 2 0 0 0 0 1 0 0 1 0]
每个概率被转中的次数, count: [46 28 26]
choose which one? [0]
ys [ 5.44870787 11.43450142  3.99534716 ...  9.24258115  9.0031524
  3.30542855]
6  ys.argmax() 6039
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:209.733
训练集长度= 12
accuracy= 0.08380351497836644
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644]
三个采集函数选出的max_idx [5104, 5104, 3478]
max_means [-208.63328634 -208.63328634 -252.73311561]  max_stds [ 91.04739143  91.04739143 121.94750578]
所有模型的可信度所占权重  [0.14285732510056343, 0.14285718546412357, 0.14285708128664146, 0.14285707320664043, 0.14285709721132764, 0.14285711880392163, 0.14285711892678185]
================= config18 =================
2022年 07月 15日 星期五 01:30:08 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 15日 星期五 01:35:17 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 15日 星期五 01:41:23 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 15日 星期五 01:47:00 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 15日 星期五 01:52:52 CST
cmd

end before line
finish
三个函数的累计增益为[0.7304844823240577, 0.736406688436722, 0.5870656118318673]
probability [0.3556474452213106, 0.35853076105485443, 0.285821793723835]
probabilityTotal [0.35564745 0.71417821 1.        ]
每一轮选择的下标，result: [0 2 1 2 0 1 0 1 0 2 0 1 1 0 2 1 2 1 0 0 1 2 1 0 0 2 1 0 1 1 2 0 0 2 0 2 1
 0 0 0 2 0 1 1 1 0 0 0 2 2 2 2 2 1 2 0 1 0 0 1 1 0 1 1 2 1 1 1 2 1 2 2 0 2
 2 2 0 0 1 1 1 2 0 0 2 2 0 0 2 2 2 1 1 0 1 0 2 0 1 1]
每个概率被转中的次数, count: [35 34 31]
choose which one? [0]
ys [ 2.8421519  20.31041227  9.1762568  ...  9.88142982 11.67602022
 16.68401845]
7  ys.argmax() 5104
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:200.746
训练集长度= 13
accuracy= 0.08380351764666252
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252]
三个采集函数选出的max_idx [5897, 6190, 5897]
max_means [-232.49612722 -215.80805524 -232.49612722]  max_stds [112.20790167  91.13451698 112.20790167]
所有模型的可信度所占权重  [0.12500016158288052, 0.12500003940099358, 0.12499994824569519, 0.12499994117569416, 0.12499996217979582, 0.12499998107331589, 0.12499998118081859, 0.1249999851608063]
三个函数的累计增益为[0.6775814057994235, 0.7202871428275562, 0.6403996313011597]
probability [0.3324299581732724, 0.35338192977773436, 0.3141881120489932]
probabilityTotal [0.33242996 0.68581189 1.        ]
每一轮选择的下标，result: [2 1 2 0 0 0 2 1 2 0 1 2 2 0 0 2 1 0 1 1 1 0 1 0 0 2 2 2 2 0 0 2 2 1 1 1 2
 0 2 0 0 0 2 2 1 1 2 1 0 1 1 0 0 1 1 0 0 1 0 0 1 2 2 1 0 1 2 2 0 0 2 2 0 2
 0 0 2 1 0 1 0 1 2 2 0 0 1 1 1 0 1 1 2 2 1 1 1 0 2 0]
每个概率被转中的次数, count: [36 33 31]
choose which one? [0]
ys [13.64660895 13.40048066  5.29849032 ...  7.18149128 11.24113611
 11.57975123]
8  ys.argmax() 5897
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:217.252
训练集长度= 14
accuracy= 0.08380351281086046
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046]
三个采集函数选出的max_idx [1350, 1350, 5680]
max_means [-211.23619969 -211.23619969 -237.72783752]  max_stds [ 87.15485417  87.15485417 110.81136731]
所有模型的可信度所占权重  [0.11111125691833604, 0.11111114831221218, 0.1111110672852787, 0.1111110610008332, 0.11111107967114617, 0.11111109646538654, 0.1111110965609445, 0.11111110009871143, 0.11111109368715137]
三个函数的累计增益为[0.7349468501442977, 0.7437223218122593, 0.6296084070978591]
probability [0.34860061001736253, 0.3527629991425637, 0.29863639084007376]
probabilityTotal [0.34860061 0.70136361 1.        ]
每一轮选择的下标，result: [1 2 1 0 1 2 1 0 2 2 1 2 0 0 2 1 1 1 1 2 1 2 2 2 1 1 1 1 2 2 0 0 0 1 1 1 1
 0 0 0 0 1 0 1 1 2 2 2 1 2 0 0 1 0 0 2 0 0 1 1 0 2 0 1 2 0 0 0 0 2 1 2 2 0
 2 2 1 1 2 2 1 2 2 2 2 1 1 0 2 0 2 1 2 2 0 1 0 0 0 0]
每个概率被转中的次数, count: [32 34 34]
choose which one? [1]
ys [0.29158316 0.08580135 0.08436834 ... 0.13932032 0.15709163 0.02947757]
9  ys.argmax() 1350
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:200.95
训练集长度= 15
accuracy= 0.08380352542226735
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735]
三个采集函数选出的max_idx [4833, 4833, 8152]
max_means [-212.58350533 -212.58350533 -229.44013199]  max_stds [90.98973822 90.98973822 99.77655645]
所有模型的可信度所占权重  [0.10000013128978105, 0.10000003354426952, 0.09999996062002935, 0.0999999549640284, 0.09999997176731007, 0.09999998688212643, 0.09999998696812859, 0.09999999015211883, 0.09999998438171477, 0.09999999943049315]
三个函数的累计增益为[0.7415745003369976, 0.7494724248431608, 0.6480346408422976]
probability [0.34667892618790047, 0.35037112971656215, 0.3029499440955374]
probabilityTotal [0.34667893 0.69705006 1.        ]
每一轮选择的下标，result: [0 0 0 0 2 1 0 0 0 0 2 2 1 1 0 0 2 1 2 0 1 2 0 2 2 2 0 1 1 0 0 0 1 1 0 2 2
 2 0 1 1 2 2 0 1 1 0 0 0 2 1 1 0 2 0 2 2 0 1 0 1 1 0 1 0 1 2 2 1 0 1 2 0 0
 0 2 1 1 2 1 1 2 2 0 2 1 2 1 1 2 2 1 1 0 1 2 2 0 2 0]
每个概率被转中的次数, count: [36 32 32]
choose which one? [0]
ys [ 6.82652567 11.99585955  1.31194812 ...  3.79892089 12.99653273
  3.85688985]
10  ys.argmax() 4833
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:201.527
训练集长度= 16
accuracy= 0.08380353812222181
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181]
三个采集函数选出的max_idx [5958, 5958, 2463]
max_means [-203.03149301 -203.03149301 -238.09076592]  max_stds [81.14431819 81.14431819 99.72508155]
所有模型的可信度所占权重  [0.09090920905806943, 0.09090912019851467, 0.09090905390375174, 0.09090904876193279, 0.09090906403764319, 0.09090907777838515, 0.09090907785656893, 0.09090908075110547, 0.09090907550528367, 0.09090908918599111, 0.09090910296275392]
三个函数的累计增益为[0.7836875865344672, 0.7908675178085076, 0.6214663577282588]
probability [0.35686699791873266, 0.3601365157253886, 0.2829964863558787]
probabilityTotal [0.356867   0.71700351 1.        ]
每一轮选择的下标，result: [2 1 0 1 1 0 2 0 0 2 2 1 1 0 0 1 2 1 0 1 2 0 1 2 2 1 2 2 1 0 1 0 1 2 0 1 0
 1 1 0 1 1 2 1 1 1 2 2 0 0 1 1 0 1 2 0 1 2 0 0 1 1 1 0 1 0 0 2 0 0 2 1 2 2
 2 2 1 2 0 2 0 0 1 1 0 0 1 0 2 2 1 2 2 2 1 1 0 2 2 2]
每个概率被转中的次数, count: [31 37 32]
choose which one? [1]
ys [0.02477117 0.02283746 0.24868566 ... 0.01568583 0.04131852 0.12702061]
11  ys.argmax() 5958
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:207.396
训练集长度= 17
accuracy= 0.08380356004212294
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294]
三个采集函数选出的max_idx [5479, 8175, 5479]
max_means [-227.71385573 -213.96941409 -227.71385573]  max_stds [87.58301039 74.1488094  87.58301039]
所有模型的可信度所占权重  [0.0833334388993846, 0.08333335744479542, 0.08333329667459807, 0.08333329196126417, 0.08333330596399825, 0.08333331855967796, 0.08333331863134644, 0.08333332128467151, 0.08333331647600167, 0.08333332901664975, 0.08333334164534859, 0.08333336344226373]
================= config23 =================
2022年 07月 15日 星期五 01:58:40 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 15日 星期五 02:04:28 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 15日 星期五 02:09:11 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 15日 星期五 02:15:05 CST
cmd

end before line
finish
================= config27 =================
2022年 07月 15日 星期五 02:19:28 CST
cmd

end before line
finish
三个函数的累计增益为[0.6884424230831384, 0.736442598024991, 0.6426279376709775]
probability [0.33298094706486026, 0.35619733114508256, 0.3108217217900571]
probabilityTotal [0.33298095 0.68917828 1.        ]
每一轮选择的下标，result: [1 2 0 1 1 1 2 1 0 1 0 0 0 2 1 1 1 0 2 1 2 2 0 2 2 0 0 0 0 0 1 0 1 2 2 1 0
 1 2 1 0 0 2 1 1 0 1 1 2 2 0 2 2 1 0 2 2 2 2 2 1 2 1 0 1 2 0 2 1 0 1 2 0 1
 1 0 0 2 2 1 1 1 2 2 1 1 0 0 2 2 1 2 2 1 0 0 2 1 2 0]
每个概率被转中的次数, count: [30 35 35]
choose which one? [1]
ys [0.03750938 0.15546162 0.07915787 ... 0.01901243 0.18263091 0.15871595]
12  ys.argmax() 8175
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:202.17
训练集长度= 18
accuracy= 0.08380355607815405
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405]
三个采集函数选出的max_idx [9922, 9922, 3790]
max_means [-206.47694515 -206.47694515 -237.44962171]  max_stds [69.40137181 69.40137181 88.58864742]
所有模型的可信度所占权重  [0.07692317251063421, 0.07692309732178447, 0.07692304122621904, 0.0769230368754494, 0.07692304980104978, 0.07692306142783077, 0.07692306149398627, 0.07692306394320936, 0.07692305950443731, 0.07692307108041987, 0.07692308273768006, 0.07692310285790895, 0.07692309921939064]
三个函数的累计增益为[0.7629245818781951, 0.7721859528788114, 0.6078551825103595]
probability [0.35601343303384686, 0.360335187192577, 0.2836513797735761]
probabilityTotal [0.35601343 0.71634862 1.        ]
每一轮选择的下标，result: [2 1 0 0 0 0 2 0 1 1 1 2 1 1 2 1 0 1 1 2 0 0 1 0 1 0 2 1 2 0 0 2 0 1 1 2 1
 0 1 0 1 2 1 2 1 2 2 2 2 0 2 1 1 0 0 1 2 0 0 0 1 1 1 1 0 0 0 0 1 1 2 1 1 0
 0 2 1 0 2 1 0 0 1 2 2 0 2 2 1 2 1 0 0 2 1 1 1 0 1 1]
每个概率被转中的次数, count: [34 40 26]
choose which one? [1]
ys [0.03524522 0.19094434 0.00106166 ... 0.1966298  0.03561697 0.08802443]
13  ys.argmax() 9922
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:194.635
训练集长度= 19
accuracy= 0.08380355226704717
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717]
三个采集函数选出的max_idx [1857, 1857, 7854]
max_means [-216.44684174 -216.44684174 -232.99387171]  max_stds [71.95050407 71.95050407 83.78645743]
所有模型的可信度所占权重  [0.07142865894163129, 0.0714285891234149, 0.07142853703467648, 0.07142853299467616, 0.07142854499701916, 0.07142855579331561, 0.07142855585474572, 0.07142855812902427, 0.07142855400730744, 0.07142856475643392, 0.07142857558103247, 0.07142859426410181, 0.07142859088547773, 0.07142858763714309]
三个函数的累计增益为[0.7175314575407439, 0.7261313018912028, 0.6159047640079517]
probability [0.34838938241865447, 0.35256494075922074, 0.29904567682212474]
probabilityTotal [0.34838938 0.70095432 1.        ]
每一轮选择的下标，result: [0 1 1 0 2 0 1 0 0 1 2 1 0 0 0 2 1 0 0 1 1 0 2 0 0 0 2 2 0 0 2 0 1 0 1 0 1
 0 0 1 1 1 1 1 0 0 2 0 0 0 1 2 1 0 2 0 1 1 1 0 0 1 2 1 0 0 1 1 0 2 1 1 0 1
 1 1 0 0 1 0 1 0 1 1 2 0 2 0 0 1 0 2 0 1 2 2 2 0 2 2]
每个概率被转中的次数, count: [44 36 20]
choose which one? [0]
ys [5.60744086 1.68303612 5.54405682 ... 5.92313227 2.62606913 1.20152688]
14  ys.argmax() 1857
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:209.474
训练集长度= 20
accuracy= 0.0838035482715602
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602]
三个采集函数选出的max_idx [3925, 4906, 9339]
max_means [-221.82963045 -209.25381638 -250.21408711]  max_stds [73.68652947 53.60271797 86.9227155 ]
所有模型的可信度所占权重  [0.06666674754888526, 0.0666666823852174, 0.06666663376906212, 0.0666666299983952, 0.06666664120058187, 0.0666666512771251, 0.06666665133445987, 0.06666665345711982, 0.06666664961018416, 0.06666665964270209, 0.06666666974566061, 0.0666666871831918, 0.06666668402980937, 0.0666666809980304, 0.06666667781957497]
三个函数的累计增益为[0.6942508043244611, 0.7324492777265585, 0.5556767402822083]
probability [0.35021132032170266, 0.3694803477698436, 0.2803083319084537]
probabilityTotal [0.35021132 0.71969167 1.        ]
每一轮选择的下标，result: [1 1 2 2 1 1 0 1 0 2 2 1 1 2 0 0 1 1 2 0 1 1 2 2 0 0 1 1 1 2 0 0 1 2 2 2 2
 2 0 2 1 2 0 2 1 1 1 2 2 0 2 1 0 1 2 1 1 0 0 2 1 0 2 0 0 2 1 2 0 0 0 2 1 0
 1 0 0 1 0 1 0 0 0 0 0 1 1 2 0 1 1 1 2 2 2 0 1 0 2 0]
每个概率被转中的次数, count: [34 35 31]
choose which one? [1]
ys [0.05788673 0.08756572 0.1148793  ... 0.08496457 0.00831773 0.07160174]
15  ys.argmax() 4906
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:213.897
训练集长度= 21
accuracy= 0.0838035543036472
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472]
三个采集函数选出的max_idx [4331, 4331, 1766]
max_means [-214.16135316 -214.16135316 -259.40619331]  max_stds [65.23836474 65.23836474 87.02418143]
所有模型的可信度所占权重  [0.06250007489242047, 0.06250001380148276, 0.062499968223837875, 0.06249996468883769, 0.062499975190887534, 0.06249998463764667, 0.06249998469139802, 0.062499986681391693, 0.06249998307488956, 0.06249999248037497, 0.06250000195189845, 0.0625000182995837, 0.06250001534328771, 0.06250001250099498, 0.06250000952119306, 0.06250001401987483]
三个函数的累计增益为[0.7174097978601389, 0.7268204088938635, 0.5200954982296533]
probability [0.36521937071841565, 0.37001012971008845, 0.26477049957149584]
probabilityTotal [0.36521937 0.7352295  1.        ]
每一轮选择的下标，result: [0 0 1 1 1 0 0 2 2 0 0 1 0 2 1 0 1 1 0 0 2 1 2 2 1 1 1 1 1 1 0 1 0 1 0 0 0
 1 2 0 0 0 1 2 0 2 1 0 2 2 0 1 0 0 0 2 0 0 0 0 0 0 0 0 1 2 0 2 0 0 0 2 0 0
 0 1 1 2 0 0 2 2 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 2 2 1]
每个概率被转中的次数, count: [50 30 20]
choose which one? [0]
ys [0.43652024 1.57464347 2.18695682 ... 0.14027576 0.88536337 2.44311081]
16  ys.argmax() 4331
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
================= config28 =================
2022年 07月 15日 星期五 02:25:30 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 15日 星期五 02:31:23 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 15日 星期五 02:37:39 CST
cmd

end before line
finish
================= config31 =================
2022年 07月 15日 星期五 02:42:48 CST
cmd

end before line
finish
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:230.42
训练集长度= 22
accuracy= 0.08380356047618251
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251]
三个采集函数选出的max_idx [8476, 8476, 7798]
max_means [-205.03078262 -205.03078262 -245.73344074]  max_stds [54.59265959 54.59265959 78.54074975]
所有模型的可信度所占权重  [0.05882359886769961, 0.05882354137034749, 0.058823498473741284, 0.05882349514668234, 0.058823505030964375, 0.058823513922031646, 0.058823513972621144, 0.05882351584555633, 0.05882351245120145, 0.05882352130342286, 0.058823530217797744, 0.05882354560385417, 0.058823542821458, 0.058823540146358995, 0.058823537341839593, 0.05882354157589296, 0.05882354590853004]
三个函数的累计增益为[0.7562540962961385, 0.7651111418196934, 0.5425549415620101]
probability [0.3664163487243884, 0.3707077189095171, 0.2628759323660946]
probabilityTotal [0.36641635 0.73712407 1.        ]
每一轮选择的下标，result: [0 2 0 2 2 1 1 1 1 1 0 2 0 1 0 0 2 0 2 0 2 0 2 1 0 0 0 1 0 0 1 0 0 0 1 2 1
 1 0 0 0 2 0 2 2 0 0 1 0 0 0 1 1 2 0 1 1 1 2 0 0 2 0 1 0 1 0 2 2 0 2 0 1 1
 1 0 1 0 0 2 2 0 0 2 2 0 2 0 1 1 1 2 1 1 2 1 1 1 0 2]
每个概率被转中的次数, count: [42 32 26]
choose which one? [0]
ys [1.02404658 2.04902966 0.75686276 ... 5.1071422  0.50378677 0.50864573]
17  ys.argmax() 8476
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:205.774
训练集长度= 23
accuracy= 0.08380356517745191
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191]
三个采集函数选出的max_idx [7104, 972, 7104]
max_means [-222.0465495  -211.62938556 -222.0465495 ]  max_stds [68.52599785 54.42871892 68.52599785]
所有模型的可信度所占权重  [0.055555620114111054, 0.055555565811057285, 0.05555552529759663, 0.055555522155374355, 0.055555531490529435, 0.055555539887648366, 0.055555539935427334, 0.05555554170431053, 0.05555553849853098, 0.055555546858962156, 0.05555555527809383, 0.05555556980936908, 0.05555556718155052, 0.055555564655068175, 0.05555556200635546, 0.05555556600518356, 0.055555570097118506, 0.05555557321371284]
三个函数的累计增益为[0.6845572082653097, 0.7209793073250281, 0.6227778344884912]
probability [0.3375005497736112, 0.3554573812964483, 0.30704206892994046]
probabilityTotal [0.33750055 0.69295793 1.        ]
每一轮选择的下标，result: [0 1 1 0 2 2 1 2 1 0 1 1 1 0 1 0 1 1 1 2 0 0 0 2 2 0 0 2 2 0 0 0 2 2 2 1 1
 0 0 1 1 0 2 2 0 1 1 2 2 1 2 2 0 2 2 0 1 1 1 2 1 0 2 0 2 1 1 1 0 1 2 0 1 2
 1 2 1 1 2 1 0 1 1 0 0 0 2 0 0 2 1 2 1 2 2 1 0 2 2 1]
每个概率被转中的次数, count: [30 37 33]
choose which one? [1]
ys [0.05499592 0.00883892 0.01757374 ... 0.04439885 0.00298287 0.09271889]
18  ys.argmax() 972
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:227.167
训练集长度= 24
accuracy= 0.08380357652731889
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889]
三个采集函数选出的max_idx [4994, 4994, 4994]
max_means [-223.60040621 -223.60040621 -223.60040621]  max_stds [66.12596776 66.12596776 66.12596776]
所有模型的可信度所占权重  [0.052631638852477604, 0.052631587407480515, 0.05263154902630818, 0.0526315460494661, 0.05263155489329701, 0.05263156284846213, 0.05263156289372641, 0.05263156456951046, 0.05263156153245622, 0.05263156945286451, 0.0526315774288838, 0.05263159119535476, 0.052631588705842496, 0.052631586312332966, 0.05263158380302624, 0.05263158759138962, 0.052631591467959475, 0.052631594420522454, 0.05263160154863919]
三个函数的累计增益为[0.6689159865329324, 0.6783174018654969, 0.6103881601406598]
probability [0.34169831601625106, 0.34650078426634795, 0.311800899717401]
probabilityTotal [0.34169832 0.6881991  1.        ]
每一轮选择的下标，result: [1 2 2 0 1 1 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 2 2 0 1 0 1 1 1 2 2 2 1 1 1 0 1
 1 1 1 1 1 1 0 0 0 0 1 1 0 2 1 2 1 0 1 0 0 0 2 0 1 1 2 1 0 1 2 2 0 0 2 0 0
 2 0 0 1 2 1 2 0 1 0 0 0 0 0 0 0 1 0 2 2 0 0 2 1 1 2]
每个概率被转中的次数, count: [39 40 21]
choose which one? [1]
ys [0.05719299 0.01704966 0.0174796  ... 0.00859945 0.08789532 0.04773766]
19  ys.argmax() 4994
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:211.183
训练集长度= 25
accuracy= 0.08380357472943369
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369]
三个采集函数选出的max_idx [2274, 2274, 125]
max_means [-218.22062198 -218.22062198 -233.40659861]  max_stds [57.83292717 57.83292717 66.68614692]
所有模型的可信度所占权重  [0.05000005588992615, 0.050000007017179916, 0.049999970555066935, 0.04999996772706702, 0.049999976128706214, 0.049999983686112914, 0.04999998372911399, 0.0499999853211088, 0.04999998243590733, 0.04999998996029505, 0.049999997537513226, 0.05000001061566037, 0.05000000825062377, 0.05000000597678976, 0.05000000359294842, 0.050000007191893556, 0.05000001087463484, 0.05000001367956962, 0.05000002045128038, 0.05000001937860186]
三个函数的累计增益为[0.6753489348610133, 0.6842802792447633, 0.5624318321241404]
probability [0.35136705787035033, 0.3560138116252681, 0.29261913050438165]
probabilityTotal [0.35136706 0.70738087 1.        ]
每一轮选择的下标，result: [0 0 1 2 1 0 1 0 0 0 0 1 1 0 0 2 0 1 1 1 1 0 1 1 1 2 0 1 2 1 1 1 1 2 0 1 2
 1 2 1 0 2 1 0 0 0 1 0 0 1 0 0 2 2 0 0 0 1 2 0 0 0 0 1 2 1 1 0 0 2 2 0 0 1
 1 0 2 2 2 2 2 2 2 0 1 0 0 1 2 0 1 2 1 2 1 0 1 0 2 1]
每个概率被转中的次数, count: [39 36 25]
choose which one? [0]
ys [0.01029569 0.0146604  0.9617278  ... 4.22687016 0.25530475 1.04260079]
20  ys.argmax() 2274
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:207.048
训练集长度= 26
accuracy= 0.08380356849722878
所有模型的可信度  ================= config32 =================
2022年 07月 15日 星期五 02:48:42 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 15日 星期五 02:54:40 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 15日 星期五 02:58:47 CST
cmd

end before line
finish
[0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878]
三个采集函数选出的max_idx [1708, 212, 9684]
max_means [-213.81437071 -211.2921706  -245.39500163]  max_stds [50.0069303  44.80649545 69.16093592]
所有模型的可信度所占权重  [0.047619100137332074, 0.047619053591860167, 0.047619018866038795, 0.04761901617270558, 0.047619024174266604, 0.04761903137179669, 0.04761903141275009, 0.0476190329289356, 0.04761903018112472, 0.04761903734720816, 0.047619044563606314, 0.047619057018984355, 0.04761905476656858, 0.047619052601012415, 0.04761905033068736, 0.04761905375825411, 0.04761905726562671, 0.04761905993699312, 0.04761906638624137, 0.04761906536464279, 0.04761906182336458]
三个函数的累计增益为[0.6797370466904316, 0.6899707787580445, 0.5138974782180089]
probability [0.360870212760235, 0.366303268213887, 0.27282651902587796]
probabilityTotal [0.36087021 0.72717348 1.        ]
每一轮选择的下标，result: [1 0 2 1 2 1 1 1 2 2 0 1 0 0 0 1 0 2 2 2 1 0 2 0 2 1 1 1 2 0 1 1 1 2 1 1 0
 1 2 0 0 2 1 1 1 2 0 0 1 0 1 1 2 1 0 0 2 1 1 0 0 2 1 2 1 1 1 0 0 1 0 0 1 0
 2 1 1 2 0 0 0 1 2 1 2 1 0 2 1 0 2 2 1 0 2 1 2 1 0 2]
每个概率被转中的次数, count: [31 41 28]
choose which one? [1]
ys [0.08593075 0.08350807 0.00145917 ... 0.07064665 0.12102233 0.02924203]
21  ys.argmax() 212
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:214.378
训练集长度= 27
accuracy= 0.08380357670383101
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101]
三个采集函数选出的max_idx [2549, 2549, 1307]
max_means [-213.6129712  -213.6129712  -223.92962086]  max_stds [55.42136868 55.42136868 60.01303302]
所有模型的可信度所占权重  [0.04545459476700343, 0.04545455033723558, 0.045454517189861245, 0.04545451461895231, 0.04545452225680587, 0.045454529127175375, 0.045454529166267264, 0.04545453061353522, 0.04545452799062488, 0.04545453483097713, 0.04545454171935706, 0.04545455360858135, 0.04545455145854815, 0.04545454939142639, 0.04545454722429797, 0.045454550496066164, 0.04545455384401268, 0.0454545563939533, 0.04545456255005379, 0.04545456157489153, 0.04545455819458057, 0.045454562645792916]
三个函数的累计增益为[0.6958724926341766, 0.7040704277419711, 0.5871279741455673]
probability [0.35020013354967494, 0.3543257715077347, 0.2954740949425904]
probabilityTotal [0.35020013 0.70452591 1.        ]
每一轮选择的下标，result: [1 2 1 0 1 0 0 2 2 0 1 0 0 0 2 0 1 1 0 0 2 1 2 0 0 1 1 1 2 2 0 1 0 1 1 1 1
 0 1 1 0 0 1 0 0 1 1 1 1 2 0 2 1 0 1 0 1 1 2 1 2 0 2 1 2 0 2 1 2 1 1 2 1 0
 2 0 2 0 2 0 2 0 2 2 2 1 2 2 1 2 2 2 1 2 1 1 1 2 0 2]
每个概率被转中的次数, count: [30 38 32]
choose which one? [1]
ys [1.46520887e-01 3.06612125e-02 2.98300614e-03 ... 1.56629475e-02
 4.60646202e-05 5.38534605e-03]
22  ys.argmax() 2549
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:213.9
训练集长度= 28
accuracy= 0.08380358187778106
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106]
三个采集函数选出的max_idx [2112, 5501, 8706]
max_means [-221.56013657 -211.68555552 -246.05840058]  max_stds [55.72885099 45.89106923 66.02204291]
所有模型的可信度所占权重  [0.043478307206345525, 0.04347826470830754, 0.04347823300212399, 0.043478230542993754, 0.04347823784876659, 0.04347824442042425, 0.043478244457816485, 0.04347824584215972, 0.043478243333289014, 0.04347824987623452, 0.04347825646511954, 0.043478267837420814, 0.04347826578086736, 0.04347826380362049, 0.04347826173071509, 0.043478264860232436, 0.043478268062615996, 0.043478270501689585, 0.04347827639013342, 0.043478275457369535, 0.04347827222402868, 0.043478276481709974, 0.04347827916601582]
三个函数的累计增益为[0.6454847181763204, 0.6887416860355013, 0.4969239151120691]
probability [0.3525023103590154, 0.37612514863869995, 0.2713725410022846]
probabilityTotal [0.35250231 0.72862746 1.        ]
每一轮选择的下标，result: [0 2 1 2 0 2 0 0 1 2 0 1 1 2 1 0 2 1 0 0 0 0 1 2 2 2 2 0 2 2 2 2 1 2 2 2 0
 0 0 0 1 1 2 2 1 1 2 2 2 1 2 1 2 0 0 0 0 1 1 2 0 0 2 1 0 0 2 2 0 0 1 1 2 0
 1 2 1 1 1 1 2 2 1 2 1 1 2 2 1 1 1 2 1 2 0 1 0 0 0 0]
每个概率被转中的次数, count: [31 32 37]
choose which one? [2]
ys [-159.10061216 -135.10274517 -196.58414576 ... -159.45030204 -156.67204244
 -154.13221778]
23  ys.argmax() 8706
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:249.71
训练集长度= 29
accuracy= 0.08380358839369446
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446]
三个采集函数选出的max_idx [7299, 7299, 3049]
max_means [-205.0327166  -205.0327166  -227.87241581]  max_stds [45.24815175 45.24815175 57.11627986]
所有模型的可信度所占权重  [0.041666710207172934, 0.04166666947988737, 0.041666639094795434, 0.04166663673812901, 0.0416666437394945, 0.041666650037332956, 0.04166665007316718, 0.041666651399829426, 0.04166664899549504, 0.04166665526581769, 0.04166666158016571, 0.04166667247862087, 0.04166667050775718, 0.04166666861289564, 0.041666666626361336, 0.04166666962548206, 0.04166667269443291, 0.04166667503187839, 0.04166668067497028, 0.041666679781071574, 0.04166667668245332, 0.04166668076273114, 0.04166668333519086, 0.041666686574867426]
三个函数的累计增益为[0.731116908172939, 0.7401073267962297, 0.5512771324889509]
probability [0.36149142835527814, 0.3659366261523951, 0.2725719454923268]
probabilityTotal [0.36149143 0.72742805 1.        ]
每一轮选择的下标，result: [0 0 0 0 1 2 0 2 2 1 2 0 1 1 0 2 2 0 1 2 0 1 2 0 2 1 2 0 2 0 0 1 1 0 2 2 2
 1 0 1 1 2 0 2 1 0 2 1 1 2 2 0 2 0 1 0 1 2 0 0 0 1 1 0 0 1 0 2 1 1 0 2 0 1
 2 0 0 1 2 0 1 0 0 0 1 0 0 1 1 0 1 0 2 1 0 0 0 2 1 2]
每个概率被转中的次数, count: [41 31 28]
choose which one? ================= config35 =================
2022年 07月 15日 星期五 03:04:11 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 15日 星期五 03:10:48 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 15日 星期五 03:16:31 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 15日 星期五 03:22:20 CST
cmd

end before line
finish
[0]
ys [4.94492820e+00 1.82310715e+00 2.51229096e-02 ... 2.35472273e-01
 1.65718081e-03 7.37752539e-03]
24  ys.argmax() 7299
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:247.254
训练集长度= 30
accuracy= 0.08380357300182689
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689]
三个采集函数选出的max_idx [967, 4511, 967]
max_means [-217.3757724  -208.84653184 -217.3757724 ]  max_stds [56.24978247 44.00398615 56.24978247]
所有模型的可信度所占权重  [0.040000041328276316, 0.04000000223008263, 0.03999997306039472, 0.03999997079799498, 0.039999977519305764, 0.039999983565230615, 0.03999998359963147, 0.039999984873227215, 0.03999998256506623, 0.0399999885845759, 0.03999999464634993, 0.040000005108866754, 0.04000000321683764, 0.04000000139777059, 0.03999999949069767, 0.040000002369853536, 0.04000000531604632, 0.04000000755999395, 0.0400000129773621, 0.04000001211921935, 0.040000009144545864, 0.04000001306161253, 0.04000001553117383, 0.04000001864126329, 0.04000001129462096]
三个函数的累计增益为[0.6726172453642294, 0.7054479594876619, 0.6109589928082433]
probability [0.3381644356843364, 0.3546703757136504, 0.30716518860201325]
probabilityTotal [0.33816444 0.69283481 1.        ]
每一轮选择的下标，result: [0 1 0 0 2 2 1 1 1 0 1 2 1 1 1 1 2 0 0 1 2 0 0 1 1 0 0 2 2 2 2 0 1 0 0 0 0
 0 1 1 1 2 0 2 1 1 1 0 0 1 1 2 1 0 1 0 1 1 1 2 2 1 2 1 2 2 1 1 1 0 2 2 0 1
 2 1 1 1 2 0 0 2 0 0 1 0 0 0 2 0 2 0 1 2 1 1 2 2 2 1]
每个概率被转中的次数, count: [32 40 28]
choose which one? [1]
ys [0.00161936 0.06182911 0.02702646 ... 0.00766946 0.00540338 0.00820499]
25  ys.argmax() 4511
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:217.518
训练集长度= 31
accuracy= 0.083803580856916
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689, 0.083803580856916]
三个采集函数选出的max_idx [2489, 7612, 3997]
max_means [-221.12378161 -213.55952979 -247.49910653]  max_stds [50.85142099 41.10818245 63.53593905]
所有模型的可信度所占权重  [0.03846157764390758, 0.03846154004949112, 0.03846151200171469, 0.03846150982633035, 0.03846151628912909, 0.038461522102518284, 0.03846152213559603, 0.0384615233602073, 0.038461521140821776, 0.03846152692881176, 0.03846153275744055, 0.038461542817552735, 0.03846154099829399, 0.03846153924919108, 0.03846153741546716, 0.038461540183886214, 0.03846154301676385, 0.038461545174405774, 0.038461550383413534, 0.038461549558276284, 0.03846154669801336, 0.03846155046442356, 0.03846155283900169, 0.03846155582947229, 0.03846154876539323, 0.0384615523704769]
三个函数的累计增益为[0.6290046627993737, 0.6541131891485819, 0.4783996473057696]
probability [0.3570811320726898, 0.3713350502766506, 0.2715838176506596]
probabilityTotal [0.35708113 0.72841618 1.        ]
每一轮选择的下标，result: [2 2 2 1 0 0 0 2 2 0 0 0 2 1 0 2 0 1 0 1 2 0 0 2 0 0 2 0 1 2 0 0 0 1 0 2 0
 2 1 0 0 1 1 0 0 2 2 2 0 0 1 2 1 2 2 0 1 2 0 2 0 1 2 1 1 2 1 1 2 2 0 1 1 2
 0 2 1 1 1 2 2 0 2 2 1 0 1 2 1 1 2 1 0 0 0 0 2 2 0 2]
每个概率被转中的次数, count: [37 27 36]
choose which one? [0]
ys [0.07452705 0.83345069 0.00407091 ... 1.34988659 1.50044648 1.60704559]
26  ys.argmax() 2489
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:240.996
训练集长度= 32
accuracy= 0.0838035568729629
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689, 0.083803580856916, 0.0838035568729629]
三个采集函数选出的max_idx [3393, 9654, 3393]
max_means [-225.63995028 -216.10228094 -225.63995028]  max_stds [55.04523435 46.02140455 55.04523435]
所有模型的可信度所占权重  [0.03703707466472319, 0.037037038462692635, 0.037037011453722804, 0.03703700935890827, 0.037037015582344075, 0.03703702118042254, 0.03703702121227519, 0.037037022391530484, 0.037037020254344424, 0.03703702582796439, 0.03703703144071802, 0.03703704112823344, 0.03703703937635466, 0.037037037692033335, 0.03703703592622512, 0.03703703859211013, 0.03703704132006636, 0.037037043397795615, 0.03703704841387715, 0.037037047619300545, 0.03703704486497329, 0.037037048491886805, 0.03703705077851759, 0.03703705365823001, 0.03703704685578353, 0.037037050327345576, 0.03703703972762097]
三个函数的累计增益为[0.6138996917023799, 0.6524681022895211, 0.553426560999552]
probability [0.33734564019200025, 0.3585394693086547, 0.30411489049934504]
probabilityTotal [0.33734564 0.69588511 1.        ]
每一轮选择的下标，result: [1 0 0 0 0 0 1 1 1 0 2 1 2 0 2 1 1 0 2 2 2 0 2 0 1 2 0 0 1 1 0 0 2 1 2 0 1
 1 0 2 1 0 2 2 1 2 1 0 0 2 0 0 0 0 0 2 1 0 1 0 2 2 0 1 2 2 1 1 2 2 1 1 0 2
 1 2 0 2 1 0 1 0 2 2 0 0 0 2 0 0 1 0 0 1 2 2 2 2 1 2]
每个概率被转中的次数, count: [38 29 33]
choose which one? [0]
ys [0.01177782 0.84368234 0.09390952 ... 0.22044546 0.0258921  1.49263353]
27  ys.argmax() 3393
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:225.553
训练集长度= 33
accuracy= 0.0838035546219523
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689, 0.083803580856916, 0.0838035568729629, 0.0838035546219523]
三个采集函数选出的max_idx [2685, 2685, 2685]
max_means [-219.02653229 -219.02653229 -219.02653229]  max_stds [51.90174684 51.90174684 51.90174684]
================= config39 =================
2022年 07月 15日 星期五 03:26:41 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 15日 星期五 03:32:53 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 15日 星期五 03:38:58 CST
cmd

end before line
finish
所有模型的可信度所占权重  [0.03571432193972638, 0.03571428703062554, 0.03571426098626182, 0.03571425896626209, 0.035714264967432324, 0.03571427036557941, 0.03571427039629446, 0.03571427153343349, 0.03571426947257551, 0.035714274847137614, 0.03571428025943575, 0.03571428960096846, 0.035714287911656775, 0.035714286287489794, 0.03571428458474615, 0.035714287155420986, 0.035714289785950204, 0.035714291789474835, 0.0357142966264106, 0.03571429586021173, 0.03571429320425331, 0.03571429670163419, 0.03571429890659959, 0.035714301683465136, 0.03571429512396318, 0.03571429847154086, 0.03571428825037787, 0.035714287291072025]
三个函数的累计增益为[0.6415928342459498, 0.6517693129057489, 0.5832794583064332]
probability [0.3418835180782012, 0.347306225658701, 0.31081025626309783]
probabilityTotal [0.34188352 0.68918974 1.        ]
每一轮选择的下标，result: [2 1 0 1 1 1 2 2 2 0 1 0 0 1 1 2 1 0 2 1 0 0 1 2 2 0 2 1 1 0 2 0 1 1 0 0 2
 0 1 2 1 2 1 2 0 1 1 1 0 0 2 2 1 2 0 0 0 0 2 0 1 2 2 0 1 2 2 1 2 2 2 0 1 2
 0 0 0 1 1 2 2 1 2 2 2 0 2 0 2 2 1 2 2 1 2 1 1 0 1 2]
每个概率被转中的次数, count: [29 33 38]
choose which one? [2]
ys [-204.94611299 -207.71141333 -171.21026413 ... -202.40031344 -177.24093531
 -227.85463432]
28  ys.argmax() 2685
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:263.689
训练集长度= 34
accuracy= 0.08380355682419734
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689, 0.083803580856916, 0.0838035568729629, 0.0838035546219523, 0.08380355682419734]
三个采集函数选出的max_idx [7290, 7290, 4144]
max_means [-212.82671146 -212.82671146 -235.00886069]  max_stds [47.17712212 47.17712212 56.91532419]
所有模型的可信度所占权重  [0.03448279351323314, 0.03448275980789448, 0.03448273466161233, 0.03448273271126777, 0.034482738505501084, 0.03448274371750515, 0.034482743747161065, 0.0344827448450884, 0.03448274285529449, 0.034482748044526855, 0.03448275327019401, 0.034482762289604875, 0.034482760658545324, 0.034482759090384105, 0.03448275744635577, 0.03448275992838663, 0.034482762468207945, 0.03448276440264551, 0.034482769072790374, 0.034482768333012156, 0.03448276576863852, 0.03448276914542005, 0.034482771274352154, 0.03448277395546371, 0.034482767622151494, 0.03448277085429545, 0.03448276098558638, 0.03448276005936005, 0.03448276096552075]
三个函数的累计增益为[0.6678658215344251, 0.6776913871131276, 0.5079654830184086]
probability [0.3603224414448047, 0.36562346399116, 0.2740540945640353]
probabilityTotal [0.36032244 0.72594591 1.        ]
每一轮选择的下标，result: [2 0 1 1 1 1 1 1 0 1 1 1 1 1 2 2 1 2 0 0 2 1 2 0 2 0 0 1 1 2 0 0 1 0 0 0 1
 1 1 0 2 1 0 2 1 1 1 0 1 2 0 2 0 0 0 1 1 0 1 0 1 2 0 0 0 1 2 2 0 0 0 1 0 0
 0 0 1 1 2 2 0 2 1 1 0 1 2 0 0 0 1 1 2 0 2 0 1 2 0 2]
每个概率被转中的次数, count: [39 38 23]
choose which one? [0]
ys [0.88820699 0.00642628 0.04355053 ... 3.40527635 0.73997698 0.54842589]
29  ys.argmax() 7290
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:219.663
训练集长度= 35
accuracy= 0.08380356552846266
所有模型的可信度  [0.08380363592499984, 0.08380355401081477, 0.08380349289773026, 0.08380348815780204, 0.08380350223954455, 0.08380351490629359, 0.08380351497836644, 0.08380351764666252, 0.08380351281086046, 0.08380352542226735, 0.08380353812222181, 0.08380356004212294, 0.08380355607815405, 0.08380355226704717, 0.0838035482715602, 0.0838035543036472, 0.08380356047618251, 0.08380356517745191, 0.08380357652731889, 0.08380357472943369, 0.08380356849722878, 0.08380357670383101, 0.08380358187778106, 0.08380358839369446, 0.08380357300182689, 0.083803580856916, 0.0838035568729629, 0.0838035546219523, 0.08380355682419734, 0.08380356552846266]
三个采集函数选出的max_idx [1983, 1983, 3002]
max_means [-216.22188341 -216.22188341 -230.20265172]  max_stds [43.14782681 43.14782681 53.19142916]
所有模型的可信度所占权重  [0.03333336687183049, 0.033333334290003305, 0.0333333099819307, 0.03333330809659763, 0.033333313697689805, 0.03333331873596038, 0.03333331876462776, 0.03333331982595751, 0.033333317902490084, 0.03333332291874801, 0.03333332797022622, 0.03333333668899001, 0.03333333511229912, 0.03333333359640995, 0.03333333200718257, 0.03333333440647906, 0.03333333686163964, 0.03333333873159595, 0.033333343246069284, 0.03333334253095035, 0.03333334005205584, 0.03333334331627797, 0.03333334537424566, 0.03333334796598682, 0.033333341843785044, 0.033333344968190855, 0.033333335428438804, 0.03333333453308669, 0.03333333540904203, 0.033333338871212446]
三个函数的累计增益为[0.6251188981251152, 0.6346169447967815, 0.5170822996160729]
probability [0.35181929042676735, 0.357164827172638, 0.29101588240059467]
probabilityTotal [0.35181929 0.70898412 1.        ]
每一轮选择的下标，result: [1 1 2 1 1 0 1 0 1 1 2 1 0 0 2 2 0 0 2 2 2 0 1 0 2 2 1 1 1 1 1 0 0 1 2 1 1
 0 0 2 0 0 0 1 1 1 1 2 1 1 0 1 0 2 0 2 0 1 1 1 1 2 0 0 0 1 2 2 1 1 2 0 0 0
 1 2 0 2 0 1 0 1 1 2 1 0 2 0 1 1 1 2 1 1 1 1 2 1 1 0]
每个概率被转中的次数, count: [31 45 24]
choose which one? [1]
ys [0.03269259 0.00787441 0.05074859 ... 0.0141146  0.00235963 0.02211095]
30  ys.argmax() 1983
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 958
runtime:235.324
{'maxIndex': 9, 'target': -191.618, 'params': {'spark.broadcast.blockSize': 37.75436291388646, 'spark.broadcast.checksum': 0.5712320341454933, 'spark.broadcast.compress': 1.0, 'spark.default.parallelism': 246.35119999277694, 'spark.executor.cores': 4.0, 'spark.executor.instances': 8.0, 'spark.executor.memory': 8.0, 'spark.executor.memoryOverhead': 755.7728813371588, 'spark.kryoserializer.buffer': 116.61468121780426, 'spark.kryoserializer.buffer.max': 47.44215444563577, 'spark.locality.wait': 8.618725101601417, 'spark.maxRemoteBlockSizeFetchToMem': 1804006217.7232256, 'spark.memory.fraction': 0.9, 'spark.memory.offHeap.enabled': 0.4296267366261702, 'spark.memory.offHeap.size': 1003.0086060663001, 'spark.memory.storageFraction': 0.7435706153277749, 'spark.rdd.compress': 1.0, 'spark.reducer.maxBlocksInFlightPerAddress': 1823017621.6556396, 'spark.reducer.maxReqsInFlight': 1384339108.0214324, 'spark.reducer.maxSizeInFlight': 69.33427282421883, 'spark.scheduler.mode': 0.000986840696278964, 'spark.scheduler.revive.interval': 500.0, 'spark.shuffle.compress': 0.8162050755524463, 'spark.shuffle.file.buffer': 27.896662801912424, 'spark.shuffle.io.numConnectionsPerPeer': 3.2033589691807407, 'spark.shuffle.sort.bypassMergeThreshold': 150.0, 'spark.storage.memoryMapThreshold': 4.0}}
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/logs_wordcount.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 15日 星期五 03:43:04 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 15日 星期五 03:54:46 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 15日 星期五 03:59:11 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 15日 星期五 04:04:10 CST
cmd

end before line
finish
benchmark = wordcount-100G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：wordcount  默认配置执行结果为 1100.0 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 2200
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 3474
runtime:694.995
生成测试集 - 配置成功 target -694.995  conf {'spark.broadcast.blockSize': 45.34470415048237, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 1.440267672451339, 'spark.executor.instances': 2.554031568612787, 'spark.executor.memory': 3.1175612682660256, 'spark.executor.memoryOverhead': 554.3614384322225, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 6.515167086419769, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 328.9213327007694, 'spark.storage.memoryMapThreshold': 1.2551326341093336}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:257.237
生成测试集 - 配置成功 target -257.237  conf {'spark.broadcast.blockSize': 33.24975306345223, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 2.2633228750151564, 'spark.executor.instances': 7.747337180903012, 'spark.executor.memory': 5.198991709838102, 'spark.executor.memoryOverhead': 725.0954171775834, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 9.007754031384238, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 192.32562320001182, 'spark.storage.memoryMapThreshold': 1.7966399781166786}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:291.758
生成测试集 - 配置成功 target -291.758  conf {'spark.broadcast.blockSize': 47.730341096970825, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 2.767916610709853, 'spark.executor.instances': 6.198550160125587, 'spark.executor.memory': 2.614006572966955, 'spark.executor.memoryOverhead': 588.1296019950472, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 4.299720753676523, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 295.1995970700903, 'spark.storage.memoryMapThreshold': 3.6499182736174296}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:288.578
生成测试集 - 配置成功 target -288.578  conf ================= config5 =================
2022年 07月 15日 星期五 04:09:06 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 15日 星期五 04:14:21 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 15日 星期五 04:26:33 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 15日 星期五 04:31:25 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 15日 星期五 04:36:40 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 15日 星期五 04:41:38 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 15日 星期五 04:46:49 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 51.957510625779484, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 3.6876586545882004, 'spark.executor.instances': 4.5685471392277694, 'spark.executor.memory': 7.789040282890314, 'spark.executor.memoryOverhead': 711.0766584244949, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.696935552242428, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 153.16424856931127, 'spark.storage.memoryMapThreshold': 3.788311701231284}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:307.902
生成测试集 - 配置成功 target -307.902  conf {'spark.broadcast.blockSize': 54.108701360541566, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 3.797786389111491, 'spark.executor.instances': 6.180908968939401, 'spark.executor.memory': 2.396001036332375, 'spark.executor.memoryOverhead': 756.443284933016, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 8.26914855177083, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 153.7294578745886, 'spark.storage.memoryMapThreshold': 3.401898018041849}
X_test [array([4.53447042e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       1.44026767e+00, 2.55403157e+00, 3.11756127e+00, 5.54361438e+02,
       7.00896775e+01, 8.37264065e+01, 6.51516709e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 3.28921333e+02, 1.25513263e+00]), array([3.32497531e+01, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       2.26332288e+00, 7.74733718e+00, 5.19899171e+00, 7.25095417e+02,
       6.22895006e+01, 9.79040891e+01, 9.00775403e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.92325623e+02, 1.79663998e+00]), array([4.77303411e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       2.76791661e+00, 6.19855016e+00, 2.61400657e+00, 5.88129602e+02,
       9.86624151e+01, 7.17612099e+01, 4.29972075e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 2.95199597e+02, 3.64991827e+00]), array([5.19575106e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       3.68765865e+00, 4.56854714e+00, 7.78904028e+00, 7.11076658e+02,
       9.16827891e+01, 4.30156134e+01, 9.69693555e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.53164249e+02, 3.78831170e+00]), array([5.41087014e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       3.79778639e+00, 6.18090897e+00, 2.39600104e+00, 7.56443285e+02,
       1.04372114e+02, 1.20610355e+02, 8.26914855e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.53729458e+02, 3.40189802e+00])]  y_test [-694.995, -257.237, -291.758, -288.578, -307.902]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:724.465
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:284.085
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:307.749
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:290.298
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:303.936
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:341.79
训练集长度= 6
accuracy= 0.04408482247718754
所有模型的可信度  [0.04408482247718754]
三个采集函数选出的max_idx [3052, 3052, 3052]
max_means [-375.10969861 -375.10969861 -375.10969861]  max_stds [157.1825225 157.1825225 157.1825225]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.28126020651406974, 0.28126020651406974, 0.28126020651406974]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config12 =================
2022年 07月 15日 星期五 04:54:48 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 15日 星期五 05:01:33 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 15日 星期五 05:07:58 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 15日 星期五 05:14:16 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 15日 星期五 05:20:38 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 15日 星期五 05:27:27 CST
cmd

end before line
finish
[1 1 1 2 0 1 2 0 0 0 2 2 2 2 1 2 2 0 0 2 1 2 2 2 0 1 2 2 1 2 0 0 1 2 2 2 1
 0 0 1 1 0 1 0 0 0 1 2 0 2 0 0 1 0 0 2 0 0 2 1 2 1 1 2 0 2 1 1 1 0 2 0 1 0
 1 2 1 1 0 2 0 2 2 0 2 1 2 0 0 0 0 2 1 2 0 1 1 1 2 0]
每个概率被转中的次数, count: [35 30 35]
choose which one? [2]
ys [29.51842342 29.51861204 29.51808356 ... 29.55472293 29.52609699
 29.51296832]
1  ys.argmax() 3052
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1286
runtime:260.958
训练集长度= 7
accuracy= 0.044084710505499114
所有模型的可信度  [0.04408482247718754, 0.044084710505499114]
三个采集函数选出的max_idx [7454, 7454, 1618]
max_means [-322.16422401 -322.16422401 -328.85848825]  max_stds [142.90518217 142.90518217 146.78169646]
所有模型的可信度所占权重  [0.5000006349794801, 0.49999936502051995]
三个函数的累计增益为[0.47484645099136535, 0.47484645099136535, 0.46245724838900576]
probability [0.3362577632883912, 0.3362577632883912, 0.3274844734232177]
probabilityTotal [0.33625776 0.67251553 1.        ]
每一轮选择的下标，result: [1 0 1 2 0 2 0 0 2 1 0 2 2 0 2 1 1 2 0 2 2 1 1 1 0 1 0 0 2 0 1 0 2 0 1 2 0
 1 1 1 0 1 1 1 1 1 2 0 1 2 0 2 0 2 0 2 1 0 2 2 2 2 1 1 0 0 2 2 1 1 1 2 1 0
 0 1 2 0 2 2 2 0 1 1 2 0 0 0 1 2 1 0 0 2 0 2 2 1 1 2]
每个概率被转中的次数, count: [32 34 34]
choose which one? [2]
ys [23.48049938 22.99938712 31.51568181 ... 17.73748275 33.31609493
 27.00355739]
2  ys.argmax() 1618
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1170
runtime:234.162
训练集长度= 8
accuracy= 0.0440846584257178
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178]
三个采集函数选出的max_idx [7999, 7999, 9377]
max_means [-280.48730075 -280.48730075 -294.20290937]  max_stds [124.85267971 124.85267971 135.5113304 ]
所有模型的可信度所占权重  [0.33333402902182846, 0.33333318238182985, 0.3333327885963418]
三个函数的累计增益为[0.560462667913849, 0.560462667913849, 0.5298867664661284]
probability [0.3395072444253821, 0.3395072444253821, 0.3209855111492358]
probabilityTotal [0.33950724 0.67901449 1.        ]
每一轮选择的下标，result: [1 0 0 1 1 0 2 1 0 1 1 0 0 0 2 1 1 0 1 0 0 2 0 1 0 1 2 1 1 1 0 2 0 0 0 1 1
 2 1 2 1 1 1 0 1 0 0 0 1 1 2 2 2 0 2 0 2 2 1 0 2 2 1 2 0 0 2 2 0 2 2 1 0 0
 0 0 1 0 1 0 2 2 1 2 0 1 0 2 1 0 2 2 2 2 0 2 1 0 1 1]
每个概率被转中的次数, count: [37 34 29]
choose which one? [0]
ys [12.45898341  5.81990628  8.76185085 ...  9.48031508 12.79035536
 16.53924283]
3  ys.argmax() 7999
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1166
runtime:233.355
训练集长度= 9
accuracy= 0.044084620283739925
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925]
三个采集函数选出的max_idx [8449, 8449, 3454]
max_means [-267.89961879 -267.89961879 -282.99003003]  max_stds [123.40017921 123.40017921 130.63429828]
所有模型的可信度所占权重  [0.25000067797979525, 0.25000004299939954, 0.24999974766009894, 0.24999953136070627]
三个函数的累计增益为[0.632456793961423, 0.632456793961423, 0.5849758753456389]
probability [0.34188896500008387, 0.34188896500008387, 0.3162220699998322]
probabilityTotal [0.34188897 0.68377793 1.        ]
每一轮选择的下标，result: [0 0 0 2 0 0 0 1 1 1 0 1 1 2 1 0 1 2 1 1 2 0 0 0 0 1 0 0 1 0 2 1 2 0 0 1 0
 2 1 1 2 1 2 0 1 2 2 1 2 1 0 2 2 0 2 0 1 0 1 1 0 0 1 2 2 0 1 1 2 1 0 1 1 0
 2 2 2 2 2 2 0 0 2 2 2 1 0 2 1 0 1 2 2 1 1 0 2 1 0 1]
每个概率被转中的次数, count: [34 35 31]
choose which one? [1]
ys [0.20312589 0.07030788 0.22027061 ... 0.26044379 0.18846842 0.16159695]
4  ys.argmax() 8449
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1163
runtime:232.68
训练集长度= 10
accuracy= 0.04408458682218561
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561]
三个采集函数选出的max_idx [2217, 2217, 9266]
max_means [-255.3495773  -255.3495773  -274.63081245]  max_stds [113.47082683 113.47082683 122.50458132]
所有模型的可信度所占权重  [0.20000064772761197, 0.20000013974302785, 0.1999999034714629, 0.19999973043185762, 0.19999957862603965]
三个函数的累计增益为[0.6929332884212326, 0.6929332884212326, 0.6227956315483705]
probability [0.3449725322289755, 0.3449725322289755, 0.3100549355420491]
probabilityTotal [0.34497253 0.68994506 1.        ]
每一轮选择的下标，result: [0 2 0 1 2 0 2 2 1 2 0 1 1 2 1 2 0 1 1 1 0 0 2 0 1 2 2 1 2 2 1 2 0 0 1 1 1
 2 0 1 1 1 2 0 2 2 1 1 0 1 1 0 1 2 2 1 0 0 1 1 0 1 0 2 1 0 1 1 2 1 2 1 0 2
 0 2 1 2 1 0 0 1 1 1 2 1 0 1 0 0 2 0 1 1 2 0 0 2 0 0]
每个概率被转中的次数, count: [31 40 29]
choose which one? [1]
ys [0.15829847 0.1224047  0.19005199 ... 0.17629658 0.12868662 0.21593377]
5  ys.argmax() 2217
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1163
runtime:261.123
训练集长度= 11
accuracy= 0.04408457666763916
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916]
三个采集函数选出的max_idx [6039, 2228, 5049]
max_means [-250.27617501 -248.95928032 -278.27323795]  max_stds [101.76999574  99.29778974 115.79241743]
所有模型的可信度所占权重  [0.16666727136245793, 0.16666684804180626, 0.16666665114875878, 0.16666650694903154, 0.16666638044413395, 0.1666663420538115]
三个函数的累计增益为[0.7282588048324237, 0.7317819408461048, 0.6218733263851437]
probability [0.34980252768575887, 0.3514947858154082, 0.2987026864988329]
probabilityTotal [0.34980253 0.70129731 1.        ]
每一轮选择的下标，result: [1 0 2 0 1 2 0 2 0 2 0 0 2 1 2 0 2 0 1 0 0 0 1 1 0 0 1 2 1 1 2 2 1 0 0 0 0
 1 0 2 0 2 1 0 2 2 0 1 0 1 1 0 1 0 2 2 2 1 0 0 1 2 1 2 0 0 2 2 0 2 1 2 1 2
 2 1 1 2 1 1 2 1 1 0 0 1 1 2 0 1 1 1 1 1 1 1 0 1 0 1]
每个概率被转中的次数, count: [34 38 28]
choose which one? [1]
ys [0.06080298 0.12916217 0.09073513 ... 0.14164705 0.17684959 0.08297106]
6  ys.argmax() 2228
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1163
runtime:232.893
训练集长度= 12
accuracy= 0.04408455112723107
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107]
三个采集函数选出的max_idx [6157, 6157, 3478]
max_means [-240.04667441 -240.04667441 -292.43094481]  max_stds [ 89.29825228  89.29825228 117.13049302]
所有模型的可信度所占权重  [0.14285771273999, 0.14285734989358617, 0.14285718112805598, 0.14285705752824515, 0.14285694909543664, 0.1428569161894341, 0.14285683342525185]
================= config18 =================
2022年 07月 15日 星期五 05:33:55 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 15日 星期五 05:40:03 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 15日 星期五 05:46:10 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 15日 星期五 05:52:32 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 15日 星期五 05:58:51 CST
cmd

end before line
finish
三个函数的累计增益为[0.7832307963577115, 0.7837341004123526, 0.5902434479964032]
probability [0.36307610169313603, 0.36330941437054254, 0.2736144839363215]
probabilityTotal [0.3630761  0.72638552 1.        ]
每一轮选择的下标，result: [2 2 1 1 2 1 2 1 2 0 0 0 2 2 0 0 1 2 0 2 0 2 0 0 1 1 0 0 1 2 2 1 2 0 2 0 2
 1 0 1 2 0 1 0 0 2 2 2 0 0 0 1 1 1 1 2 0 2 2 2 1 1 1 2 0 2 1 0 0 0 1 1 0 0
 2 0 2 2 1 1 0 1 0 0 0 0 2 0 0 2 2 2 0 1 1 0 0 1 2 0]
每个概率被转中的次数, count: [39 28 33]
choose which one? [0]
ys [ 0.83760012 23.78742303  6.8916304  ...  5.90689857  8.78298442
 17.44428474]
7  ys.argmax() 6157
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:223.069
训练集长度= 13
accuracy= 0.044084526717166374
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374]
三个采集函数选出的max_idx [4426, 4426, 6257]
max_means [-243.8134503  -243.8134503  -275.79575435]  max_stds [ 84.45791784  84.45791784 104.74253158]
所有模型的可信度所占权重  [0.12500054114349113, 0.12500022365277982, 0.1250000759828907, 0.12499996783301946, 0.12499987295427976, 0.12499984416151776, 0.12499977174283368, 0.12499970252918768]
三个函数的累计增益为[0.7379707190583786, 0.7384111102559077, 0.5950696657825809]
probability [0.3562577838801236, 0.3564703841744445, 0.28727183194543193]
probabilityTotal [0.35625778 0.71272817 1.        ]
每一轮选择的下标，result: [2 0 2 2 1 2 0 1 1 0 2 1 0 1 1 2 1 1 0 2 1 1 0 0 0 0 1 0 2 0 1 2 0 2 0 2 1
 0 1 0 0 1 1 1 1 0 2 2 1 2 2 0 0 1 0 2 0 2 1 1 0 2 1 0 2 1 0 1 2 2 0 0 0 2
 2 0 1 0 1 0 1 2 0 0 2 2 0 0 1 2 1 2 1 0 0 1 0 0 0 1]
每个概率被转中的次数, count: [39 33 28]
choose which one? [0]
ys [ 4.40749228  3.73902899  4.59624694 ...  3.84582673  7.32237519
 11.91811776]
8  ys.argmax() 4426
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:224.943
训练集长度= 14
accuracy= 0.04408450820456081
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081]
三个采集函数选出的max_idx [1838, 483, 5544]
max_means [-244.21437421 -241.63821545 -277.78555696]  max_stds [ 82.50294363  75.73634248 102.58622816]
所有模型的可信度所占权重  [0.1111116266919033, 0.1111113444778499, 0.11111121321568541, 0.11111111708243662, 0.11111103274575287, 0.11111100715217868, 0.11111094277999503, 0.111110881256735, 0.1111108345974631]
三个函数的累计增益为[0.7413985240180485, 0.746087390714446, 0.5867939981841758]
probability [0.357424530508787, 0.3596850097561632, 0.2828904597350497]
probabilityTotal [0.35742453 0.71710954 1.        ]
每一轮选择的下标，result: [0 2 1 2 2 1 1 2 1 2 1 2 1 1 1 0 0 1 0 1 0 1 0 2 1 0 0 2 0 1 2 1 2 1 1 1 0
 1 2 0 2 1 1 1 2 2 0 0 0 2 1 2 2 2 0 2 2 1 2 0 1 2 2 1 1 2 1 0 1 0 0 0 0 2
 1 2 2 1 0 1 0 1 1 1 1 2 0 0 2 2 2 2 2 1 1 2 1 2 2 0]
每个概率被转中的次数, count: [26 38 36]
choose which one? [1]
ys [0.18186552 0.08289392 0.03083544 ... 0.06153355 0.15423283 0.01175412]
9  ys.argmax() 483
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:239.379
训练集长度= 15
accuracy= 0.044084479183048156
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156]
三个采集函数选出的max_idx [5768, 5850, 7303]
max_means [-251.58036256 -239.40334719 -268.76861852]  max_stds [86.19756089 72.58489804 94.78333027]
所有模型的可信度所占权重  [0.10000049549223529, 0.1000002414995073, 0.10000012336352208, 0.10000003684357095, 0.09999996094053169, 0.09999993790630768, 0.09999987997132415, 0.09999982460037271, 0.09999978260701478, 0.09999971677561335]
三个函数的累计增益为[0.7185804974707235, 0.759927468424973, 0.6054542949717014]
probability [0.3448145443726184, 0.36465510085997044, 0.2905303547674112]
probabilityTotal [0.34481454 0.70946965 1.        ]
每一轮选择的下标，result: [0 2 0 2 2 0 0 1 1 0 0 2 1 1 1 2 1 0 2 2 2 2 0 0 0 2 1 2 0 1 0 0 1 1 0 2 1
 1 1 1 2 1 2 0 0 2 2 1 2 0 0 2 1 0 0 2 2 1 0 2 1 1 2 2 0 1 1 1 1 1 1 1 1 0
 2 2 1 2 1 1 0 0 0 1 2 1 1 1 1 0 2 2 2 2 0 2 2 1 2 0]
每个概率被转中的次数, count: [29 37 34]
choose which one? [1]
ys [0.11086747 0.15854108 0.024016   ... 0.05695245 0.12058337 0.07702495]
10  ys.argmax() 5850
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:236.071
训练集长度= 16
accuracy= 0.044084464069474125
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125]
三个采集函数选出的max_idx [5958, 5958, 6392]
max_means [-221.96911305 -221.96911305 -270.30035785]  max_stds [63.45207471 63.45207471 92.89689066]
所有模型的可信度所占权重  [0.09090956759700425, 0.09090933669445761, 0.0909092292980764, 0.09090915064355268, 0.0909090816407698, 0.0909090607005601, 0.09090900803237806, 0.09090895769513493, 0.09090891951934399, 0.09090885967259815, 0.090908828506124]
三个函数的累计增益为[0.857107231620985, 0.8615058980514456, 0.598384883751533]
probability [0.3699214356918621, 0.3718198690979229, 0.25825869521021494]
probabilityTotal [0.36992144 0.7417413  1.        ]
每一轮选择的下标，result: [0 0 1 0 0 2 1 2 2 0 2 2 1 1 0 0 0 0 2 2 1 2 1 1 0 1 1 0 0 1 1 1 0 1 2 1 1
 0 1 1 0 0 2 1 1 0 2 0 2 1 1 1 1 0 2 1 0 2 1 2 2 0 2 1 0 0 1 0 0 2 0 0 2 2
 0 2 2 0 0 2 1 0 1 2 2 1 0 2 0 1 0 2 0 0 2 0 0 2 0 1]
每个概率被转中的次数, count: [39 32 29]
choose which one? [0]
ys [0.05935564 0.6857381  7.873538   ... 0.69333622 2.31336111 1.99761846]
11  ys.argmax() 5958
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:226.603
训练集长度= 17
accuracy= 0.044084486186684646
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646]
三个采集函数选出的max_idx [4747, 7229, 4627]
max_means [-251.7433396  -246.00458824 -263.30431464]  max_stds [80.89747956 71.02258696 86.49428044]
所有模型的可信度所占权重  [0.08333378685799188, 0.08333357519728207, 0.08333347675057974, 0.08333340465058532, 0.08333334139802179, 0.08333332220282574, 0.08333327392364928, 0.08333322778116725, 0.08333319278668526, 0.08333313792715734, 0.08333310935788368, 0.08333315116617061]
================= config23 =================
2022年 07月 15日 星期五 06:05:14 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 15日 星期五 06:09:48 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 15日 星期五 06:16:39 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 15日 星期五 06:23:04 CST
cmd

end before line
finish
================= config27 =================
2022年 07月 15日 星期五 06:29:16 CST
cmd

end before line
finish
三个函数的累计增益为[0.724752234302552, 0.7406572863766335, 0.6147739006279858]
probability [0.3484078504226917, 0.3560538358253092, 0.2955383137519991]
probabilityTotal [0.34840785 0.70446169 1.        ]
每一轮选择的下标，result: [0 2 2 0 2 0 0 1 1 0 1 1 2 0 1 1 2 0 1 0 1 0 1 1 1 1 0 2 2 2 0 2 1 2 0 2 2
 2 2 0 0 0 0 1 1 0 2 1 0 1 0 2 1 0 2 1 2 2 1 2 1 1 2 0 2 1 1 2 2 2 1 0 2 0
 1 0 1 0 1 2 1 0 2 0 1 2 0 0 1 1 2 0 2 2 1 1 2 0 1 2]
每个概率被转中的次数, count: [31 35 34]
choose which one? [1]
ys [0.02556835 0.17112753 0.07528482 ... 0.01066758 0.13002803 0.14485101]
12  ys.argmax() 7229
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:236.137
训练集长度= 18
accuracy= 0.0440844726556996
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996]
三个采集函数选出的max_idx [9922, 9922, 9922]
max_means [-240.6585788 -240.6585788 -240.6585788]  max_stds [76.11400725 76.11400725 76.11400725]
所有模型的可信度所占权重  [0.07692351031242067, 0.07692331493326646, 0.07692322405936995, 0.07692315750551619, 0.07692309911852327, 0.07692308139987737, 0.07692303683447517, 0.07692299424140667, 0.0769229619388017, 0.07692291129922776, 0.07692288492758549, 0.07692292351985774, 0.07692289990967154]
三个函数的累计增益为[0.7717380715616431, 0.7763733225374634, 0.7045718486484233]
probability [0.3425861465637652, 0.34464380424410856, 0.3127700491921262]
probabilityTotal [0.34258615 0.68722995 1.        ]
每一轮选择的下标，result: [0 2 2 2 0 1 0 1 0 1 0 2 1 2 1 0 0 1 1 1 2 2 1 2 0 0 2 2 0 2 1 0 0 0 0 0 1
 2 2 0 2 2 2 0 0 0 1 2 1 2 0 2 2 1 1 1 1 2 2 0 2 2 1 0 0 2 1 0 2 2 2 2 2 0
 1 2 0 1 1 0 1 1 2 2 2 1 2 2 0 0 1 1 0 0 1 1 0 0 0 2]
每个概率被转中的次数, count: [34 29 37]
choose which one? [2]
ys [-160.925279    -93.11646954 -258.7477827  ... -114.4988404  -155.27660499
 -131.71335066]
13  ys.argmax() 9922
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:269.261
训练集长度= 19
accuracy= 0.044084471807119004
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004]
三个采集函数选出的max_idx [9691, 9691, 6428]
max_means [-230.62332472 -230.62332472 -252.39413682]  max_stds [68.07555329 68.07555329 76.56232784]
所有模型的可信度所占权重  [0.07142898570049598, 0.07142880427696557, 0.0714287198940477, 0.07142865809403039, 0.07142860387752796, 0.0714285874244969, 0.07142854604233086, 0.07142850649161783, 0.07142847649633682, 0.07142842947386752, 0.07142840498590992, 0.07142844082159724, 0.07142841889784927, 0.07142841752292593]
三个函数的累计增益为[0.8221880090713735, 0.8264921714051694, 0.6548505162315335]
probability [0.3569251368112193, 0.3587936434215054, 0.2842812197672753]
probabilityTotal [0.35692514 0.71571878 1.        ]
每一轮选择的下标，result: [1 1 2 1 2 1 1 0 1 2 2 0 1 0 1 0 0 2 1 1 0 2 2 2 1 1 1 1 1 0 2 0 2 2 0 1 0
 0 2 0 2 0 1 1 0 2 0 1 0 0 1 0 0 2 0 0 0 2 1 1 1 1 0 2 2 0 2 0 2 2 0 1 0 1
 2 1 1 0 1 1 0 1 1 2 1 2 2 1 1 0 1 1 2 2 2 1 1 2 2 1]
每个概率被转中的次数, count: [30 40 30]
choose which one? [1]
ys [0.14527056 0.08086463 0.10902574 ... 0.25927846 0.05475012 0.04034571]
14  ys.argmax() 9691
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:237.379
训练集长度= 20
accuracy= 0.04408445442104549
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549]
三个采集函数选出的max_idx [5360, 8545, 1905]
max_means [-244.72823753 -238.06873901 -277.82959658]  max_stds [73.32582293 59.16282559 87.09932781]
所有模型的可信度所占权重  [0.06666706464968204, 0.06666689532102488, 0.06666681656362147, 0.06666675888359551, 0.066666708281518, 0.06666669292535306, 0.06666665430199152, 0.06666661738798642, 0.06666658939238607, 0.06666654550474058, 0.0666665226493096, 0.06666655609595679, 0.06666653563378853, 0.06666653435052654, 0.06666650805851895]
三个函数的累计增益为[0.7561817756208047, 0.776276636910191, 0.5718906947593019]
probability [0.35934236054326346, 0.3688915656726642, 0.2717660737840724]
probabilityTotal [0.35934236 0.72823393 1.        ]
每一轮选择的下标，result: [1 1 0 2 0 1 2 0 1 0 0 1 0 0 0 1 0 0 2 2 1 1 0 2 1 0 2 0 0 0 1 0 2 1 1 2 2
 0 1 1 1 1 2 2 2 0 1 0 0 2 1 0 1 1 2 2 1 2 1 1 1 2 2 0 1 1 1 2 0 0 1 0 1 0
 0 2 2 0 2 2 2 0 1 0 0 1 1 0 1 0 1 1 0 2 1 0 1 0 0 2]
每个概率被转中的次数, count: [37 37 26]
choose which one? [1]
ys [0.06544375 0.08344667 0.09918169 ... 0.1357504  0.00773471 0.05644004]
15  ys.argmax() 8545
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:226.008
训练集长度= 21
accuracy= 0.04408444297044547
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547]
三个采集函数选出的max_idx [4331, 6175, 1701]
max_means [-236.59268201 -233.96905553 -249.84689984]  max_stds [62.1639235  57.20446915 74.66164374]
所有模型的可信度所占权重  [0.06250038341720246, 0.06250022467156019, 0.06250015083648232, 0.06250009676144908, 0.06250004932199357, 0.06250003492558658, 0.06249999871617915, 0.06249996410929367, 0.062499937863414, 0.062499896718739574, 0.0624998752917695, 0.06249990664800641, 0.06249988746472051, 0.06249988626166219, 0.06249986161290102, 0.062499845379039756]
三个函数的累计增益为[0.7869416213496374, 0.8022630804594645, 0.6644014516176102]
probability [0.3491921692497406, 0.3559908102130385, 0.2948170205372208]
probabilityTotal [0.34919217 0.70518298 1.        ]
每一轮选择的下标，result: [2 0 0 2 0 2 1 0 2 0 1 1 2 0 0 2 0 0 1 0 1 1 1 0 1 1 0 0 0 2 1 1 2 0 1 1 1
 0 1 2 0 0 1 0 2 0 0 2 0 0 1 1 0 0 1 2 2 0 1 0 1 1 2 2 2 1 2 1 1 0 2 0 0 0
 2 1 0 2 0 1 2 2 0 1 1 1 1 2 2 1 2 1 1 1 0 2 1 2 1 0]
每个概率被转中的次数, count: [36 37 27]
choose which one? [1]
ys [0.01872796 0.03238803 0.04572837 ... 0.00191223 0.02967024 0.04502854]
16  ys.argmax() 6175
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
================= config28 =================
2022年 07月 15日 星期五 06:35:46 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 15日 星期五 06:41:53 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 15日 星期五 06:48:19 CST
cmd

end before line
finish
================= config31 =================
2022年 07月 15日 星期五 06:54:53 CST
cmd

end before line
finish
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1115
runtime:242.302
训练集长度= 22
accuracy= 0.04408443269116229
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229]
三个采集函数选出的max_idx [8155, 8155, 7798]
max_means [-243.95030812 -243.95030812 -280.40538657]  max_stds [67.41986723 67.41986723 87.23298083]
所有模型的可信度所占权重  [0.058823899642226556, 0.058823750234539444, 0.058823680742690385, 0.058823629848533336, 0.05882358519962693, 0.05882357165006524, 0.05882353757061754, 0.05882350499942602, 0.05882348029741769, 0.058823441573012065, 0.058823421406448785, 0.05882345091820587, 0.058823432863345675, 0.058823431731055316, 0.058823408532217576, 0.05882339325328689, 0.05882337953728469]
三个函数的累计增益为[0.7538403399328955, 0.7589513014870427, 0.5632381199261556]
probability [0.36311634542469506, 0.3655782376621326, 0.2713054169131723]
probabilityTotal [0.36311635 0.72869458 1.        ]
每一轮选择的下标，result: [0 1 1 0 2 1 2 2 1 0 2 1 2 2 1 2 0 0 0 2 0 2 2 1 0 0 1 1 0 1 0 1 2 0 0 2 0
 1 2 0 2 0 1 0 0 0 1 0 0 1 0 0 0 1 1 2 1 1 0 1 2 1 2 1 1 1 1 1 2 0 0 0 1 2
 0 0 0 2 2 0 2 0 2 2 2 2 1 0 2 0 2 1 0 0 1 2 1 1 1 2]
每个概率被转中的次数, count: [37 33 30]
choose which one? [0]
ys [1.33890931 4.09006294 1.00315411 ... 5.83973768 0.47584898 0.49888736]
17  ys.argmax() 8155
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1063
runtime:212.659
训练集长度= 23
accuracy= 0.044084407565734854
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854]
三个采集函数选出的max_idx [4850, 4850, 6879]
max_means [-244.79736646 -244.79736646 -272.04430904]  max_stds [60.60900941 60.60900941 75.52694457]
所有模型的可信度所占权重  [0.055555914840570896, 0.05555577373328641, 0.05555570810208426, 0.05555566003537205, 0.05555561786695314, 0.05555560507014267, 0.05555557288399204, 0.05555554212230583, 0.05555551879262726, 0.05555548221957116, 0.055555463173369214, 0.055555491045589066, 0.0555554739937737, 0.05555547292438818, 0.05555545101437096, 0.055555436584267266, 0.05555542363026294, 0.055555391967073015]
三个函数的累计增益为[0.6735832953053451, 0.678410315387023, 0.5206870617585755]
probability [0.35968935078705483, 0.36226694992218145, 0.2780436992907638]
probabilityTotal [0.35968935 0.7219563  1.        ]
每一轮选择的下标，result: [1 1 1 1 0 1 2 1 0 1 1 2 0 1 1 2 1 1 2 0 0 2 1 2 0 2 1 2 1 1 1 1 1 1 1 1 1
 2 1 0 0 2 0 0 0 1 0 0 1 1 1 2 2 1 0 0 0 1 1 2 0 0 0 2 2 2 1 1 0 0 0 0 2 2
 0 1 2 1 2 0 1 1 0 0 2 0 2 0 2 1 1 1 1 0 2 0 1 0 0 2]
每个概率被转中的次数, count: [33 42 25]
choose which one? [1]
ys [0.0344297  0.00810489 0.02284822 ... 0.03148228 0.00100084 0.06047977]
18  ys.argmax() 4850
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1063
runtime:230.712
训练集长度= 24
accuracy= 0.04408440215452335
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335]
三个采集函数选出的max_idx [2319, 2319, 6393]
max_means [-244.61630527 -244.61630527 -264.59688542]  max_stds [58.0701705  58.0701705  71.71792342]
所有模型的可信度所占权重  [0.052631927819486175, 0.05263179413887929, 0.0526317319619409, 0.052631686425048306, 0.05263164647601341, 0.052631634352717324, 0.0526316038605697, 0.0526315747179149, 0.05263155261611058, 0.05263151796794658, 0.0526314999241734, 0.05263152632943858, 0.05263151017508458, 0.05263150916198233, 0.052631488405120566, 0.052631474734493804, 0.0526314624622772, 0.05263143246556611, 0.052631426005236286]
三个函数的累计增益为[0.6625788804630848, 0.6671518475945082, 0.5346244198745556]
probability [0.3553930597386366, 0.3578459009456864, 0.2867610393156769]
probabilityTotal [0.35539306 0.71323896 1.        ]
每一轮选择的下标，result: [1 2 1 0 1 2 1 2 1 0 1 1 1 0 0 0 2 1 2 2 0 2 1 0 0 2 0 1 1 0 0 0 1 1 2 0 1
 0 2 1 0 1 1 0 1 2 2 1 2 1 0 1 0 1 0 1 1 0 1 2 2 2 2 1 0 1 1 0 2 2 0 1 1 0
 1 1 2 0 1 0 2 1 0 2 1 1 1 1 0 0 1 0 1 1 1 0 1 2 1 1]
每个概率被转中的次数, count: [31 46 23]
choose which one? [1]
ys [0.02838371 0.01654522 0.00932004 ... 0.01496696 0.05032076 0.04410912]
19  ys.argmax() 2319
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1063
runtime:243.943
训练集长度= 25
accuracy= 0.044084390081253075
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075]
三个采集函数选出的max_idx [8948, 8948, 3826]
max_means [-238.2058115  -238.2058115  -267.34522021]  max_stds [53.53400182 53.53400182 70.3891694 ]
所有模型的可信度所占权重  [0.050000339377983025, 0.05000021238138629, 0.05000015331328543, 0.05000011005323059, 0.05000007210164141, 0.05000006058450829, 0.05000003161696344, 0.050000003931436984, 0.049999982934719536, 0.0499999500189585, 0.049999932877371256, 0.04999995796237716, 0.049999942615738424, 0.049999941653291136, 0.049999921934269324, 0.04999990894717184, 0.04999989728856421, 0.049999868791684145, 0.049999862654369835, 0.04999984896104916]
三个函数的累计增益为[0.6841129651429945, 0.6884572846085428, 0.5154731938341347]
probability [0.36233963125539287, 0.364640594975432, 0.27301977376917524]
probabilityTotal [0.36233963 0.72698023 1.        ]
每一轮选择的下标，result: [0 2 0 1 1 0 1 1 0 1 1 0 0 1 0 1 2 0 2 1 2 0 1 2 1 1 0 0 1 1 1 1 0 2 0 1 1
 0 0 0 1 2 0 0 2 2 0 0 2 0 0 2 2 2 2 2 0 1 0 1 0 2 0 1 0 0 0 1 0 0 0 0 0 1
 1 1 0 0 1 1 2 1 2 2 2 2 1 1 1 0 1 1 2 1 0 2 2 2 1 2]
每个概率被转中的次数, count: [38 36 26]
choose which one? [0]
ys [0.02764841 0.0088104  0.41261288 ... 2.10869568 0.11726526 0.86898086]
20  ys.argmax() 8948
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:209.542
训练集长度= 26
accuracy= ================= config32 =================
2022年 07月 15日 星期五 07:00:52 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 15日 星期五 07:05:13 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 15日 星期五 07:10:36 CST
cmd

end before line
finish
0.044084380427322725
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725]
三个采集函数选出的max_idx [1120, 1120, 1120]
max_means [-238.46182399 -238.46182399 -238.46182399]  max_stds [56.82805049 56.82805049 56.82805049]
所有模型的可信度所占权重  [0.04761937818263314, 0.04761925723347473, 0.0476192009781319, 0.047619159778073315, 0.04761912363369709, 0.04761911266499719, 0.047619085076854986, 0.04761905870968286, 0.04761903871280602, 0.047619007364457344, 0.04761899103913363, 0.04761901492961913, 0.04761900031377046, 0.047618999397153854, 0.047618980617130185, 0.047618968248464004, 0.04761895714502645, 0.04761893000513649, 0.04761892416007434, 0.04761891111881455, 0.04761890069086828]
三个函数的累计增益为[0.6704929307796336, 0.6746303785279826, 0.5985521677146632]
probability [0.34496135733874267, 0.3470900294330614, 0.307948613228196]
probabilityTotal [0.34496136 0.69205139 1.        ]
每一轮选择的下标，result: [0 1 0 1 2 1 1 2 0 1 1 1 2 0 1 2 0 0 1 1 1 0 0 2 2 2 1 0 1 2 1 1 1 1 1 2 1
 2 0 2 2 0 0 2 0 2 0 1 1 0 2 0 1 1 0 0 0 1 0 0 2 1 0 1 1 1 0 0 0 2 1 1 0 0
 1 0 2 2 1 0 1 1 2 2 0 2 2 2 0 0 1 2 2 2 1 2 0 1 2 1]
每个概率被转中的次数, count: [33 38 29]
choose which one? [1]
ys [0.06056516 0.09442151 0.00085478 ... 0.00969546 0.1649891  0.03269751]
21  ys.argmax() 1120
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:225.793
训练集长度= 27
accuracy= 0.04408437322601203
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203]
三个采集函数选出的max_idx [9841, 9841, 1687]
max_means [-239.72522811 -239.72522811 -260.8812606 ]  max_stds [52.26973915 52.26973915 66.23647819]
所有模型的可信度所占权重  [0.045454867705048946, 0.04545475225356251, 0.04545469855527279, 0.04545465922793832, 0.0454546247264832, 0.04545461425635902, 0.04545458792221939, 0.04545456275355137, 0.04545454366562066, 0.045454513742192504, 0.045454498158926666, 0.045454520963484374, 0.0454545070119904, 0.04545450613703805, 0.04545448821064918, 0.04545447640419335, 0.045454465805455944, 0.04545443989919352, 0.04545443431981519, 0.045454421871338094, 0.0454544119173879, 0.04545440449227862]
三个函数的累计增益为[0.6441869604247809, 0.6481363429496108, 0.5128420153291897]
probability [0.356857598442794, 0.3590454216210424, 0.2840969799361636]
probabilityTotal [0.3568576  0.71590302 1.        ]
每一轮选择的下标，result: [1 1 1 0 2 2 1 2 0 2 0 0 0 2 2 2 2 1 0 2 1 1 1 0 2 2 0 0 0 2 2 1 1 0 2 2 0
 0 2 1 2 1 0 2 1 1 1 2 1 0 2 2 2 2 0 2 2 1 0 0 0 0 1 1 1 1 2 1 0 1 0 2 1 0
 2 0 0 0 0 0 1 2 2 2 0 2 2 1 1 1 1 0 2 2 0 1 1 0 2 2]
每个概率被转中的次数, count: [32 31 37]
choose which one? [2]
ys [-115.83528085 -186.40746383 -228.85372269 ... -188.5199754  -278.88066355
 -212.92336161]
22  ys.argmax() 1687
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:286.075
训练集长度= 28
accuracy= 0.04408435847571631
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631]
三个采集函数选出的max_idx [1015, 1015, 1015]
max_means [-230.20213217 -230.20213217 -230.20213217]  max_stds [58.19797168 58.19797168 58.19797168]
所有模型的可信度所占权重  [0.043478575604047, 0.04347846517217391, 0.04347841380858476, 0.043478376191128786, 0.043478343189732, 0.04347833317482912, 0.043478307985648314, 0.04347828391126661, 0.043478265653243205, 0.04347823703082939, 0.04347822212509462, 0.043478243938153076, 0.0434782305932438, 0.04347822975633274, 0.04347821260934951, 0.043478201316216165, 0.043478191178291915, 0.043478166398385025, 0.04347816106158756, 0.04347814915434682, 0.04347813963317566, 0.04347813253089614, 0.04347811798344395]
三个函数的累计增益为[0.7201631251671259, 0.7239407959725794, 0.6517531045694629]
probability [0.3436127161028299, 0.34541516291056257, 0.31097212098660754]
probabilityTotal [0.34361272 0.68902788 1.        ]
每一轮选择的下标，result: [0 2 2 1 2 2 2 2 0 2 2 2 0 0 2 2 2 1 2 0 2 2 0 0 1 0 0 0 0 1 1 1 2 1 0 2 2
 1 0 0 0 1 1 0 1 1 2 1 1 0 0 2 2 2 0 0 2 2 2 1 0 0 0 2 0 2 1 2 2 2 1 1 2 0
 0 2 2 1 2 2 0 0 0 0 2 2 0 0 0 0 2 2 2 0 1 1 1 1 1 0]
每个概率被转中的次数, count: [36 24 40]
choose which one? [2]
ys [-215.32309168 -153.85712767 -235.38958931 ... -170.25016081 -170.52219726
 -183.54569207]
23  ys.argmax() 1015
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:341.649
训练集长度= 29
accuracy= 0.0440843922209282
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282]
三个采集函数选出的max_idx [7112, 7112, 7112]
max_means [-228.9183835 -228.9183835 -228.9183835]  max_stds [52.59696383 52.59696383 52.59696383]
所有模型的可信度所占权重  [0.0416669726638311, 0.04166686683327494, 0.041666817609830174, 0.04166678155976441, 0.041666749933422495, 0.041666740335806224, 0.04166671619617209, 0.0416666931248872, 0.041666675627612934, 0.04166664819779681, 0.04166663391313282, 0.04166665481731604, 0.04166664202844331, 0.041666641226403456, 0.04166662479387614, 0.041666613971288874, 0.04166660425577711, 0.04166658050836385, 0.04166657539393241, 0.041666563982825505, 0.04166655485836884, 0.04166654805201693, 0.04166653411070711, 0.041666566005149286]
三个函数的累计增益为[0.7152584542139905, 0.7188787224494828, 0.649698844254973]
probability [0.3432412373305371, 0.3449785468880793, 0.31178021578138365]
probabilityTotal [0.34324124 0.68821978 1.        ]
每一轮选择的下标，result: ================= config35 =================
2022年 07月 15日 星期五 07:18:36 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 15日 星期五 07:25:13 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 15日 星期五 07:59:38 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 15日 星期五 08:05:51 CST
cmd

end before line
finish
[1 2 2 0 2 2 1 1 2 1 0 2 1 2 1 0 0 2 0 1 1 1 1 0 2 0 2 2 1 1 1 0 1 1 0 2 2
 1 0 1 1 2 2 0 1 2 1 1 0 1 0 1 1 0 2 0 2 1 0 2 1 1 2 1 0 0 1 2 0 1 2 0 1 2
 0 1 0 0 1 2 1 2 1 0 0 1 1 2 0 0 0 2 2 2 1 2 2 2 2 1]
每个概率被转中的次数, count: [28 39 33]
choose which one? [1]
ys [0.08583927 0.05331943 0.00244019 ... 0.00483857 0.00012603 0.00022451]
24  ys.argmax() 7112
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:258.444
训练集长度= 30
accuracy= 0.04408439625736323
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323]
三个采集函数选出的max_idx [1375, 1375, 1647]
max_means [-239.27406002 -239.27406002 -253.47534499]  max_stds [52.50907608 52.50907608 63.55244525]
所有模型的可信度所占权重  [0.040000297476209666, 0.04000019587886631, 0.040000148624354935, 0.040000114016288585, 0.04000008365499753, 0.040000074441285054, 0.040000051267234125, 0.040000029118798575, 0.04000001232141372, 0.03999998598878779, 0.03999997227550908, 0.039999992343526844, 0.03999998006620788, 0.03999997929624955, 0.03999996352102186, 0.03999995313133712, 0.03999994380444496, 0.039999921006926106, 0.03999991609707147, 0.03999990514240782, 0.03999989638292861, 0.03999988984883017, 0.039999876465171495, 0.039999907083838826, 0.0399999107462921]
三个函数的累计增益为[0.6444811306692113, 0.6479565884984064, 0.5406149741306255]
probability [0.3515889821528182, 0.35348497665526846, 0.29492604119191346]
probabilityTotal [0.35158898 0.70507396 1.        ]
每一轮选择的下标，result: [0 2 0 0 1 2 1 0 1 0 1 2 1 2 2 0 2 2 0 0 1 0 1 1 0 0 0 0 1 2 2 1 0 2 2 0 2
 2 2 1 0 2 2 0 0 0 2 0 1 2 1 2 0 2 1 1 2 2 2 2 1 2 0 0 1 1 1 1 2 1 2 1 2 1
 1 1 0 2 0 0 1 1 2 1 0 0 2 2 0 0 1 1 0 1 1 1 1 0 1 1]
每个概率被转中的次数, count: [32 36 32]
choose which one? [1]
ys [0.0010264  0.02457243 0.02471745 ... 0.00774201 0.00118234 0.0059543 ]
25  ys.argmax() 1375
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:1913.546
训练集长度= 31
accuracy= 0.0440847065509861
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323, 0.0440847065509861]
三个采集函数选出的max_idx [8809, 8809, 5631]
max_means [-305.57135457 -305.57135457 -307.02801013]  max_stds [302.8253854  302.8253854  303.60561654]
所有模型的可信度所占权重  [0.03846181738495976, 0.03846171969522459, 0.03846167425820283, 0.03846164098122211, 0.03846161178767841, 0.03846160292834113, 0.038461580645603975, 0.038461559349035265, 0.03846154319770666, 0.038461517877878715, 0.03846150469203625, 0.0384615239882036, 0.03846151218309139, 0.03846151144274698, 0.03846149627426162, 0.03846148628418199, 0.03846147731601811, 0.03846145539533096, 0.038461450674317756, 0.03846144014098927, 0.038461431718414665, 0.03846142543562887, 0.03846141256672867, 0.038461442007749515, 0.03846144552933854, 0.038461716245108454]
三个函数的累计增益为[0.7316239841777472, 0.7349657699340939, 0.6680231515293596]
probability [0.3427431653974658, 0.3443086884707665, 0.31294814613176763]
probabilityTotal [0.34274317 0.68705185 1.        ]
每一轮选择的下标，result: [2 1 2 2 0 2 2 1 1 0 2 1 0 2 2 0 2 2 2 2 1 0 0 1 0 1 1 1 1 1 2 0 0 1 2 2 0
 1 0 2 0 2 1 1 0 1 0 2 2 1 2 0 0 1 0 2 1 0 1 1 2 2 2 1 1 2 1 2 1 2 0 2 1 1
 2 0 1 1 0 0 2 0 0 0 2 2 0 0 0 1 0 0 0 1 1 0 2 2 0 1]
每个概率被转中的次数, count: [33 33 34]
choose which one? [2]
ys [460.51181807 460.79322365 459.76979015 ... 461.54529421 461.72459491
 462.48664233]
26  ys.argmax() 5631
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:217.173
训练集长度= 32
accuracy= 0.04408470067868079
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323, 0.0440847065509861, 0.04408470067868079]
三个采集函数选出的max_idx [2745, 2745, 2745]
max_means [-292.87036099 -292.87036099 -292.87036099]  max_stds [298.08086761 298.08086761 298.08086761]
所有模型的可信度所占权重  [0.03703729947193797, 0.037037205400356786, 0.03703716164619495, 0.037037129601700323, 0.03703710148940366, 0.0370370929581914, 0.037037071500744374, 0.037037050992940884, 0.03703703543981221, 0.037037011057759736, 0.037036998360283915, 0.03703701694177531, 0.03703700557389137, 0.03703700486096724, 0.03703699025428006, 0.037036980634204984, 0.037036971998196756, 0.037036950889390415, 0.03703694634323031, 0.037036936200026786, 0.03703692808940074, 0.037036922039311714, 0.03703690964703952, 0.037036937997647464, 0.037036941388806706, 0.03703720207802328, 0.037037197144481115]
三个函数的累计增益为[0.7466795134369395, 0.7498975288154137, 0.6868324976857663]
probability [0.34197868048982755, 0.34345252922027025, 0.3145687902899023]
probabilityTotal [0.34197868 0.68543121 1.        ]
每一轮选择的下标，result: [1 0 1 2 0 1 0 1 2 0 2 0 1 2 0 0 1 0 0 2 0 0 0 2 2 0 1 1 2 1 0 0 1 0 1 0 1
 2 1 1 2 1 2 1 0 2 1 1 2 1 0 0 1 0 2 2 1 0 0 0 0 0 0 2 1 0 2 0 0 2 2 0 1 0
 0 0 0 2 2 2 0 2 1 2 0 0 2 2 2 0 0 1 2 2 2 0 1 1 2 1]
每个概率被转中的次数, count: [41 28 31]
choose which one? [0]
ys [72.24719038 74.390504   72.1203792  ... 73.66869275 74.26833472
 73.11363606]
27  ys.argmax() 2745
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:214.574
训练集长度= 33
accuracy= 0.044084695320240605
所有模型的可信度  ================= config39 =================
2022年 07月 15日 星期五 08:11:58 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 15日 星期五 08:18:30 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 15日 星期五 08:25:03 CST
cmd

end before line
finish
[0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323, 0.0440847065509861, 0.04408470067868079, 0.044084695320240605]
三个采集函数选出的max_idx [1089, 1089, 1089]
max_means [-293.71153666 -293.71153666 -293.71153666]  max_stds [294.70028746 294.70028746 294.70028746]
所有模型的可信度所占权重  [0.03571453341760746, 0.035714442705739216, 0.03571440051423235, 0.0357143696141886, 0.0357143425059066, 0.035714334279381726, 0.0357143135882752, 0.035714293812896224, 0.035714278815238684, 0.03571425530397732, 0.03571424305998462, 0.03571426097784863, 0.03571425001596219, 0.035714249328499745, 0.03571423524348208, 0.0357142259669825, 0.03571421763940439, 0.03571419728448704, 0.03571419290069046, 0.035714183119745675, 0.03571417529878602, 0.035714169464772474, 0.035714157515083216, 0.03571418485316535, 0.03571418812321127, 0.03571443950206096, 0.03571443474471745, 0.03571443040367261]
三个函数的累计增益为[0.7455398239304268, 0.7486429097226286, 0.6878302102581664]
probability [0.3416752526655773, 0.34309737337336715, 0.3152273739610555]
probabilityTotal [0.34167525 0.68477263 1.        ]
每一轮选择的下标，result: [2 2 0 2 0 2 1 1 0 2 2 1 0 1 2 1 2 0 1 1 0 2 0 2 0 0 2 2 0 0 1 1 2 2 2 0 2
 2 0 0 1 1 2 0 0 2 0 0 2 0 2 0 0 2 2 2 2 0 2 2 1 0 2 2 2 2 2 2 1 0 1 2 2 1
 2 1 0 1 2 0 0 0 0 1 1 2 2 2 2 0 1 0 2 0 2 0 1 1 0 1]
每个概率被转中的次数, count: [34 23 43]
choose which one? [2]
ys [444.4485233  444.86830417 447.40880089 ... 447.33197227 447.32597205
 445.45105666]
28  ys.argmax() 1089
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:242.177
训练集长度= 34
accuracy= 0.04408469267462031
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323, 0.0440847065509861, 0.04408470067868079, 0.044084695320240605, 0.04408469267462031]
三个采集函数选出的max_idx [9537, 9705, 9537]
max_means [-285.72216547 -285.00742908 -285.72216547]  max_stds [290.12001174 288.97234613 290.12001174]
所有模型的可信度所占权重  [0.03448299303659899, 0.03448290545273826, 0.03448286471611655, 0.034482834881595655, 0.034482808708085594, 0.03448280076523509, 0.03448278078761774, 0.034482761694151015, 0.03448274721365608, 0.03448272451313099, 0.034482712691346555, 0.03448272999135081, 0.03448271940746191, 0.034482718743705155, 0.03448270514437963, 0.03448269618776057, 0.034482688147341435, 0.034482668494320495, 0.034482664261689895, 0.03448265481802037, 0.03448264726675001, 0.03448264163391013, 0.034482630096280706, 0.03448265649166672, 0.034482659648952, 0.034482902359532094, 0.03448289776623554, 0.03448289357488248, 0.0344828915054876]
三个函数的累计增益为[0.755410156225282, 0.7589576975460794, 0.6996905369001056]
probability [0.34118800091635587, 0.34279028084526125, 0.31602171823838276]
probabilityTotal [0.341188   0.68397828 1.        ]
每一轮选择的下标，result: [1 2 2 0 1 0 1 2 0 1 2 1 1 0 0 1 0 2 0 1 0 1 0 0 2 2 1 1 2 0 2 1 1 1 2 0 2
 1 1 1 1 0 2 1 1 0 2 2 0 0 1 1 0 0 2 0 2 1 0 2 1 2 0 1 0 2 0 2 2 1 1 2 2 0
 0 1 1 2 1 0 0 2 2 0 2 2 0 0 1 1 0 2 1 2 0 2 1 0 0 1]
每个概率被转中的次数, count: [34 35 31]
choose which one? [1]
ys [0.3610951  0.35792422 0.35801924 ... 0.36833661 0.35767101 0.36379954]
29  ys.argmax() 9705
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:244.461
训练集长度= 35
accuracy= 0.044084690421150166
所有模型的可信度  [0.04408482247718754, 0.044084710505499114, 0.0440846584257178, 0.044084620283739925, 0.04408458682218561, 0.04408457666763916, 0.04408455112723107, 0.044084526717166374, 0.04408450820456081, 0.044084479183048156, 0.044084464069474125, 0.044084486186684646, 0.0440844726556996, 0.044084471807119004, 0.04408445442104549, 0.04408444297044547, 0.04408443269116229, 0.044084407565734854, 0.04408440215452335, 0.044084390081253075, 0.044084380427322725, 0.04408437322601203, 0.04408435847571631, 0.0440843922209282, 0.04408439625736323, 0.0440847065509861, 0.04408470067868079, 0.044084695320240605, 0.04408469267462031, 0.044084690421150166]
三个采集函数选出的max_idx [3924, 3924, 3924]
max_means [-275.06644863 -275.06644863 -275.06644863]  max_stds [283.85641799 283.85641799 283.85641799]
所有模型的可信度所占权重  [0.03333355571030405, 0.03333347104591608, 0.03333343166718675, 0.03333340282715354, 0.033333377526097024, 0.03333336984800917, 0.03333335053631485, 0.03333333207929936, 0.03333331808148936, 0.033333296137651215, 0.03333328470992772, 0.03333330143326304, 0.03333329120217174, 0.03333329056054029, 0.033333277414527275, 0.03333326875646329, 0.03333326098405911, 0.03333324198614127, 0.033333237894598876, 0.03333322876571949, 0.03333322146615907, 0.033333216021081205, 0.033333204868040846, 0.033333230383577425, 0.03333323343561948, 0.03333346805581716, 0.033333463615631054, 0.03333345956399028, 0.033333457563575475, 0.03333345585967449]
三个函数的累计增益为[0.7689432447165484, 0.7718578393877749, 0.7150809528626656]
probability [0.3408614600036379, 0.34215345782243567, 0.3169850821739265]
probabilityTotal [0.34086146 0.68301492 1.        ]
每一轮选择的下标，result: [1 2 0 1 2 1 2 0 1 2 1 2 2 0 2 1 2 1 2 0 1 0 1 2 1 0 1 2 1 2 0 2 2 1 1 2 0
 2 1 0 1 2 1 2 1 1 0 1 2 2 0 1 0 0 2 1 0 2 1 1 0 0 0 0 2 1 0 2 0 1 2 0 0 2
 2 2 1 2 0 0 0 1 0 0 1 1 2 2 0 0 2 1 0 1 2 1 2 0 2 1]
每个概率被转中的次数, count: [31 34 35]
choose which one? [2]
ys [429.89972265 427.89173494 424.30800015 ... 432.43300453 429.79353413
 433.61793637]
30  ys.argmax() 3924
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1047
runtime:231.909
{'maxIndex': 26, 'target': -209.542, 'params': {'spark.broadcast.blockSize': 63.98904537179398, 'spark.broadcast.checksum': 0.5688434556364291, 'spark.broadcast.compress': 0.8769467370603004, 'spark.default.parallelism': 298.9871318190963, 'spark.executor.cores': 3.9721514297035965, 'spark.executor.instances': 6.69698741675762, 'spark.executor.memory': 6.283608742607985, 'spark.executor.memoryOverhead': 712.265931642356, 'spark.kryoserializer.buffer': 79.28705133274222, 'spark.kryoserializer.buffer.max': 58.22687404999533, 'spark.locality.wait': 7.708111858516882, 'spark.maxRemoteBlockSizeFetchToMem': 1850918433.3209138, 'spark.memory.fraction': 0.8599213266302252, 'spark.memory.offHeap.enabled': 0.1897230051331713, 'spark.memory.offHeap.size': 388.28973584039045, 'spark.memory.storageFraction': 0.5672547515979284, 'spark.rdd.compress': 0.9244061332717103, 'spark.reducer.maxBlocksInFlightPerAddress': 2113510580.4347582, 'spark.reducer.maxReqsInFlight': 1770793951.6813045, 'spark.reducer.maxSizeInFlight': 48.60805834275504, 'spark.scheduler.mode': 0.4089027672416138, 'spark.scheduler.revive.interval': 841.4873412857289, 'spark.shuffle.compress': 0.3564766389583709, 'spark.shuffle.file.buffer': 22.628053762652637, 'spark.shuffle.io.numConnectionsPerPeer': 2.4592033301055185, 'spark.shuffle.sort.bypassMergeThreshold': 264.3041058042743, 'spark.storage.memoryMapThreshold': 3.5302703756310434}}
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/config/wordcount-100G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/logs_wordcount.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 15日 星期五 08:29:04 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 15日 星期五 08:40:52 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 15日 星期五 08:45:31 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 15日 星期五 08:50:15 CST
cmd

end before line
finish
benchmark = wordcount-100G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：wordcount  默认配置执行结果为 1100.0 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 2200
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 3502
runtime:700.516
生成测试集 - 配置成功 target -700.516  conf {'spark.broadcast.blockSize': 45.34470415048237, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 1.440267672451339, 'spark.executor.instances': 2.554031568612787, 'spark.executor.memory': 3.1175612682660256, 'spark.executor.memoryOverhead': 554.3614384322225, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 6.515167086419769, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 328.9213327007694, 'spark.storage.memoryMapThreshold': 1.2551326341093336}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1358
runtime:271.666
生成测试集 - 配置成功 target -271.666  conf {'spark.broadcast.blockSize': 33.24975306345223, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 2.2633228750151564, 'spark.executor.instances': 7.747337180903012, 'spark.executor.memory': 5.198991709838102, 'spark.executor.memoryOverhead': 725.0954171775834, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 9.007754031384238, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 192.32562320001182, 'spark.storage.memoryMapThreshold': 1.7966399781166786}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1358
runtime:276.364
生成测试集 - 配置成功 target -276.364  conf {'spark.broadcast.blockSize': 47.730341096970825, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 2.767916610709853, 'spark.executor.instances': 6.198550160125587, 'spark.executor.memory': 2.614006572966955, 'spark.executor.memoryOverhead': 588.1296019950472, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 4.299720753676523, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 295.1995970700903, 'spark.storage.memoryMapThreshold': 3.6499182736174296}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1299
runtime:259.985
生成测试集 - 配置成功 target -259.985  conf ================= config5 =================
2022年 07月 15日 星期五 08:54:42 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 15日 星期五 08:59:22 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 15日 星期五 09:11:05 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 15日 星期五 09:15:13 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 15日 星期五 09:19:28 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 15日 星期五 09:23:31 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 15日 星期五 09:27:32 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 51.957510625779484, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 3.6876586545882004, 'spark.executor.instances': 4.5685471392277694, 'spark.executor.memory': 7.789040282890314, 'spark.executor.memoryOverhead': 711.0766584244949, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.696935552242428, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 153.16424856931127, 'spark.storage.memoryMapThreshold': 3.788311701231284}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1299
runtime:271.272
生成测试集 - 配置成功 target -271.272  conf {'spark.broadcast.blockSize': 54.108701360541566, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 3.797786389111491, 'spark.executor.instances': 6.180908968939401, 'spark.executor.memory': 2.396001036332375, 'spark.executor.memoryOverhead': 756.443284933016, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 8.26914855177083, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 153.7294578745886, 'spark.storage.memoryMapThreshold': 3.401898018041849}
X_test [array([4.53447042e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       1.44026767e+00, 2.55403157e+00, 3.11756127e+00, 5.54361438e+02,
       7.00896775e+01, 8.37264065e+01, 6.51516709e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 3.28921333e+02, 1.25513263e+00]), array([3.32497531e+01, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       2.26332288e+00, 7.74733718e+00, 5.19899171e+00, 7.25095417e+02,
       6.22895006e+01, 9.79040891e+01, 9.00775403e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.92325623e+02, 1.79663998e+00]), array([4.77303411e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       2.76791661e+00, 6.19855016e+00, 2.61400657e+00, 5.88129602e+02,
       9.86624151e+01, 7.17612099e+01, 4.29972075e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 2.95199597e+02, 3.64991827e+00]), array([5.19575106e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       3.68765865e+00, 4.56854714e+00, 7.78904028e+00, 7.11076658e+02,
       9.16827891e+01, 4.30156134e+01, 9.69693555e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.53164249e+02, 3.78831170e+00]), array([5.41087014e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       3.79778639e+00, 6.18090897e+00, 2.39600104e+00, 7.56443285e+02,
       1.04372114e+02, 1.20610355e+02, 8.26914855e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.53729458e+02, 3.40189802e+00])]  y_test [-700.516, -271.666, -276.364, -259.985, -271.272]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1299
runtime:696.161
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1202
runtime:240.583
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1202
runtime:246.87
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1177
runtime:235.562
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1167
runtime:233.438
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 1167
runtime:266.236
训练集长度= 6
accuracy= 0.09215257890678283
所有模型的可信度  [0.09215257890678283]
三个采集函数选出的max_idx [3052, 3052, 3052]
max_means [-319.50936135 -319.50936135 -319.50936135]  max_stds [168.65270568 168.65270568 168.65270568]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.30490427558173067, 0.30490427558173067, 0.30490427558173067]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config12 =================
2022年 07月 15日 星期五 09:33:46 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 15日 星期五 09:39:44 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 15日 星期五 09:45:51 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 15日 星期五 09:52:24 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 15日 星期五 09:57:53 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 15日 星期五 10:01:48 CST
cmd

end before line
finish
[0 0 2 2 1 2 0 0 1 0 2 2 2 0 1 0 2 0 0 1 0 0 0 0 2 2 2 0 0 2 2 0 1 0 1 0 0
 2 2 1 0 0 1 1 2 0 2 2 0 2 0 0 1 0 0 1 1 2 0 2 1 2 0 2 1 2 0 0 2 0 1 1 1 0
 2 1 2 0 2 1 2 2 2 0 1 2 1 1 1 2 0 0 1 1 0 2 1 0 1 2]
每个概率被转中的次数, count: [39 27 34]
choose which one? [0]
ys [32.73313415 32.73319314 32.73301351 ... 32.74459755 32.73544393
 32.73135722]
1  ys.argmax() 3052
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 992
runtime:198.479
训练集长度= 7
accuracy= 0.09215265703289582
所有模型的可信度  [0.09215257890678283, 0.09215265703289582]
三个采集函数选出的max_idx [5585, 5585, 9712]
max_means [-276.59690519 -276.59690519 -283.28486672]  max_stds [154.92082612 154.92082612 159.11724164]
所有模型的可信度所占权重  [0.4999997880523779, 0.5000002119476221]
三个函数的累计增益为[0.4594971460897549, 0.4594971460897549, 0.44947687361787914]
probability [0.3357740795525, 0.3357740795525, 0.328451840895]
probabilityTotal [0.33577408 0.67154816 1.        ]
每一轮选择的下标，result: [1 1 2 1 1 1 1 1 2 0 0 1 2 1 1 0 1 0 2 0 0 2 2 2 0 2 1 1 0 2 0 2 1 0 1 2 2
 0 2 1 0 0 1 2 2 2 1 2 2 0 0 0 2 2 1 1 0 0 2 2 2 1 1 2 1 1 1 0 1 1 1 0 0 0
 1 1 0 0 1 0 1 2 0 2 0 0 2 0 1 1 0 2 2 1 2 1 1 1 0 1]
每个概率被转中的次数, count: [31 39 30]
choose which one? [1]
ys [0.25779276 0.25733803 0.26115243 ... 0.25435498 0.26281441 0.25926072]
2  ys.argmax() 5585
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 992
runtime:214.982
训练集长度= 8
accuracy= 0.09215272451238654
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654]
三个采集函数选出的max_idx [3965, 8582, 5214]
max_means [-260.03978536 -256.08153214 -260.30529323]  max_stds [147.40946875 143.65208889 147.62695696]
所有模型的可信度所占权重  [0.33333306357355225, 0.33333334617027277, 0.3333335902561751]
三个函数的累计增益为[0.5420965271374283, 0.5481982290184202, 0.5383239088078882]
probability [0.3328566341522917, 0.3366031845340705, 0.33054018131363777]
probabilityTotal [0.33285663 0.66945982 1.        ]
每一轮选择的下标，result: [1 0 0 0 0 0 0 1 1 2 1 0 2 0 1 1 1 2 0 2 0 1 1 1 0 0 1 2 2 2 0 2 0 0 2 2 2
 0 1 2 1 2 0 0 1 0 1 2 0 1 0 2 1 0 0 2 1 0 0 2 0 0 0 2 0 2 0 2 2 2 2 1 0 2
 0 0 0 1 0 2 0 2 1 2 1 0 0 2 2 0 2 0 0 1 2 1 1 0 0 2]
每个概率被转中的次数, count: [43 25 32]
choose which one? [0]
ys [20.43327392 13.79342586 18.31426851 ... 18.52876431 23.39160913
 25.03407068]
3  ys.argmax() 3965
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 992
runtime:245.176
训练集长度= 9
accuracy= 0.09215274254862058
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058]
三个采集函数选出的max_idx [9226, 9226, 7603]
max_means [-243.08697776 -243.08697776 -253.95715509]  max_stds [131.01038451 131.01038451 139.18967808]
所有模型的可信度所占权重  [0.24999973727461566, 0.2499999492221049, 0.2500001322864874, 0.25000018121679213]
三个函数的累计增益为[0.6042587861866126, 0.6057842127625913, 0.5800040604786797]
probability [0.3375658662179192, 0.3384180374320471, 0.32401609635003376]
probabilityTotal [0.33756587 0.6759839  1.        ]
每一轮选择的下标，result: [1 2 1 2 0 1 0 1 0 1 2 0 2 2 2 0 1 2 0 0 0 1 0 2 1 0 0 1 2 0 1 1 2 0 2 0 2
 2 2 2 1 0 1 0 2 2 0 2 2 1 1 0 2 1 0 1 0 2 1 2 2 0 2 2 1 2 1 0 0 1 2 1 0 1
 2 0 0 2 2 2 2 2 0 0 2 0 2 2 1 1 1 2 0 1 0 0 0 1 1 2]
每个概率被转中的次数, count: [33 29 38]
choose which one? [2]
ys [87.46800862 18.32688019 87.40662357 ... 90.05422974 82.13615421
 69.35805093]
4  ys.argmax() 7603
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:171.369
训练集长度= 10
accuracy= 0.09215278780105522
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522]
三个采集函数选出的max_idx [7725, 8263, 8393]
max_means [-234.33848926 -215.32821808 -251.74010536]  max_stds [129.36460798 109.54801798 137.73672094]
所有模型的可信度所占权重  [0.19999974118269404, 0.1999999107406442, 0.20000005719211453, 0.20000009633634883, 0.2000001945481984]
三个函数的累计增益为[0.5765755075793426, 0.608689264669076, 0.5367165088071475]
probability [0.33483262212113285, 0.35348192884881563, 0.3116854490300515]
probabilityTotal [0.33483262 0.68831455 1.        ]
每一轮选择的下标，result: [1 0 0 1 2 2 1 0 0 2 1 0 1 0 1 1 0 1 0 2 2 2 1 1 2 1 0 0 0 2 1 0 1 2 2 1 1
 1 1 2 1 1 0 2 2 0 2 1 2 0 1 2 1 1 1 2 0 2 0 0 2 0 1 0 2 0 1 0 2 1 1 2 2 2
 1 0 2 1 2 1 1 1 0 0 0 0 0 1 2 1 0 0 0 0 2 0 0 0 1 2]
每个概率被转中的次数, count: [35 36 29]
choose which one? [1]
ys [0.20887419 0.11910094 0.18041508 ... 0.19333043 0.15394763 0.2006422 ]
5  ys.argmax() 8263
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:189.75
训练集长度= 11
accuracy= 0.09215281756304355
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355]
三个采集函数选出的max_idx [7292, 1481, 3837]
max_means [-227.78605226 -219.81986242 -242.27033208]  max_stds [123.01300244 108.2837485  129.72356687]
所有模型的可信度所占权重  [0.1666664149938321, 0.16666655629209337, 0.166666678334959, 0.16666671095514718, 0.1666667927983375, 0.16666684662563083]
三个函数的累计增益为[0.5949211909873027, 0.6051133611184272, 0.5530891941005047]
probability [0.33934922864099815, 0.34516294838164985, 0.315487822977352]
probabilityTotal [0.33934923 0.68451218 1.        ]
每一轮选择的下标，result: [0 0 2 1 1 0 1 0 0 2 0 2 2 2 1 0 1 1 2 0 2 2 2 1 1 0 1 0 1 1 0 2 2 2 2 2 2
 2 2 0 2 2 2 1 1 0 2 2 2 2 1 1 2 0 2 0 1 0 2 2 1 0 1 2 0 1 2 0 0 1 0 2 2 2
 2 1 2 1 0 1 1 1 1 2 2 2 0 1 2 1 2 0 0 0 0 0 2 2 1 2]
每个概率被转中的次数, count: [28 29 43]
choose which one? [2]
ys [ -5.48431077  33.90745711  -9.50376654 ...  22.48876326  20.46916337
 -33.24315002]
6  ys.argmax() 3837
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:183.054
训练集长度= 12
accuracy= 0.09215282865752761
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761]
三个采集函数选出的max_idx [1273, 5104, 1273]
max_means [-234.56806674 -212.24116653 -234.56806674]  max_stds [125.60375504 102.65944237 125.60375504]
所有模型的可信度所占权重  [0.14285690264483292, 0.1428570237576075, 0.1428571283657601, 0.1428571563259166, 0.14285722647721055, 0.14285727261488268, 0.14285728981378962]
================= config18 =================
2022年 07月 15日 星期五 10:05:27 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 15日 星期五 10:08:01 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 15日 星期五 10:13:40 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 15日 星期五 10:19:05 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 15日 星期五 10:24:29 CST
cmd

end before line
finish
三个函数的累计增益为[0.5864639082300842, 0.6301648904638247, 0.5726861789359392]
probability [0.3277588996694828, 0.35218220287774604, 0.3200588974527712]
probabilityTotal [0.3277589 0.6799411 1.       ]
每一轮选择的下标，result: [0 2 2 2 0 2 2 0 2 2 2 1 1 1 2 2 2 2 0 2 0 1 2 1 1 2 1 0 0 1 0 2 0 2 0 2 2
 2 2 2 0 1 1 1 2 0 2 2 1 1 2 2 1 2 0 1 2 2 1 1 0 2 0 2 2 1 2 0 2 0 2 2 2 0
 1 2 0 2 1 2 0 0 2 2 1 1 0 1 2 1 0 0 2 1 1 1 1 1 1 1]
每个概率被转中的次数, count: [24 31 45]
choose which one? [2]
ys [-49.33678554  43.99261968  11.50984284 ...  17.89175942  28.10492791
  62.26615839]
7  ys.argmax() 1273
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
runtime:1713
训练集长度= 13
accuracy= 0.0921525439706036
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036]
三个采集函数选出的max_idx [4743, 9568, 4596]
max_means [-219.92107795 -212.06848506 -239.60024074]  max_stds [369.63209719 345.91765109 381.95519669]
所有模型的可信度所占权重  [0.12499982201102461, 0.12499992798472968, 0.12500001951688677, 0.12500004398203002, 0.12500010536442804, 0.12500014573490154, 0.125000160783949, 0.12499977462205039]
三个函数的累计增益为[0.7303353393046801, 0.745614745687051, 0.6996430303866508]
probability [0.3356948200204519, 0.3427179192729578, 0.3215872607065904]
probabilityTotal [0.33569482 0.67841274 1.        ]
每一轮选择的下标，result: [2 1 0 1 0 2 0 0 2 0 0 0 1 2 1 1 2 0 2 2 2 1 1 1 0 0 1 1 0 1 2 1 1 1 1 1 1
 0 1 1 1 1 2 1 2 2 1 0 2 0 1 0 1 2 2 2 1 2 2 1 2 2 0 1 2 2 2 0 1 2 0 0 1 2
 0 1 0 1 2 2 2 0 0 2 2 1 2 1 2 1 0 1 0 1 2 0 2 0 0 2]
每个概率被转中的次数, count: [28 37 35]
choose which one? [1]
ys [0.31451051 0.29871648 0.34545812 ... 0.37576555 0.30094912 0.37193428]
8  ys.argmax() 9568
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:191.405
训练集长度= 14
accuracy= 0.09215256252435759
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759]
三个采集函数选出的max_idx [6610, 2863, 6610]
max_means [-216.5100222  -203.27402813 -216.5100222 ]  max_stds [367.46705868 335.05741612 367.46705868]
所有模型的可信度所占权重  [0.111110972672572, 0.11111106687143772, 0.11111114823336962, 0.11111116998016748, 0.11111122454230876, 0.11111126042718047, 0.11111127380411392, 0.11111093054903187, 0.1111109529198182]
三个函数的累计增益为[0.7520537240118521, 0.7723721898833258, 0.7392669558772814]
probability [0.3322242756754571, 0.3412000807163221, 0.3265756436082209]
probabilityTotal [0.33222428 0.67342436 1.        ]
每一轮选择的下标，result: [2 1 0 0 1 2 1 1 1 0 1 0 1 1 2 0 1 2 2 1 0 2 1 1 2 2 1 0 1 2 0 1 0 2 2 1 1
 0 2 2 1 0 1 1 1 0 1 0 1 1 2 0 2 0 0 0 0 1 1 1 0 1 2 1 0 0 0 1 2 1 0 0 1 2
 1 1 0 2 2 1 2 1 1 2 2 1 1 0 1 1 0 2 0 2 2 1 1 1 0 0]
每个概率被转中的次数, count: [30 44 26]
choose which one? [1]
ys [0.28794104 0.36069425 0.31798696 ... 0.32462959 0.35074189 0.29811139]
9  ys.argmax() 2863
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:178.799
训练集长度= 15
accuracy= 0.09215257519204857
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857]
三个采集函数选出的max_idx [3214, 5226, 3214]
max_means [-188.31098042 -185.00196402 -188.31098042]  max_stds [339.4633753  321.30980581 339.4633753 ]
所有模型的可信度所占权重  [0.09999988826787537, 0.09999997304686542, 0.10000004627261355, 0.10000006584473416, 0.10000011495066762, 0.10000014724705632, 0.10000015928629796, 0.09999985035668438, 0.09999987049039467, 0.09999988423681064]
三个函数的累计增益为[0.7960537960293916, 0.8085579543956318, 0.784545703228041]
probability [0.3331943630639375, 0.3384280735283195, 0.328377563407743]
probabilityTotal [0.33319436 0.67162244 1.        ]
每一轮选择的下标，result: [2 0 1 2 2 1 2 2 1 2 0 1 0 1 0 0 0 1 2 0 2 0 1 2 2 0 2 1 1 0 2 1 2 0 1 0 0
 1 2 1 2 2 2 0 0 1 1 2 0 0 1 2 2 0 1 1 1 2 0 2 1 2 1 2 2 2 0 0 1 1 0 0 0 0
 1 1 0 2 2 1 1 0 0 2 0 2 2 2 2 1 1 2 1 0 1 0 2 1 0 0]
每个概率被转中的次数, count: [33 32 35]
choose which one? [2]
ys [513.33836126 557.687576   492.90412188 ... 565.37394214 588.43635633
 598.03474701]
10  ys.argmax() 3214
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:173.943
训练集长度= 16
accuracy= 0.09215260084218849
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849]
三个采集函数选出的max_idx [935, 935, 2319]
max_means [-181.48509297 -181.48509297 -255.41480004]  max_stds [317.22836611 317.22836611 352.18261433]
所有模型的可信度所占权重  [0.09090899660126726, 0.09090907367308255, 0.0909091402419498, 0.09090915803478815, 0.09090920267654941, 0.09090923203690511, 0.09090924298167112, 0.09090896213654542, 0.09090898043991988, 0.09090899293666267, 0.0909090182406586]
三个函数的累计增益为[0.8181582535539315, 0.8270871477207979, 0.7261073985139609]
probability [0.34501751642642, 0.34878283307085267, 0.30619965050272735]
probabilityTotal [0.34501752 0.69380035 1.        ]
每一轮选择的下标，result: [2 1 0 0 0 2 2 1 1 0 1 1 1 2 1 1 0 0 0 1 1 1 2 0 1 1 1 2 0 1 1 1 2 1 1 1 0
 0 0 1 0 1 0 1 1 2 1 2 0 2 1 0 2 0 1 0 0 0 0 2 1 1 1 0 1 2 1 2 2 2 0 1 1 2
 2 0 1 0 2 0 0 0 0 1 1 0 2 2 2 0 0 1 0 2 1 0 0 0 1 0]
每个概率被转中的次数, count: [37 40 23]
choose which one? [1]
ys [0.28077696 0.307731   0.30202424 ... 0.26173273 0.30306692 0.3434136 ]
11  ys.argmax() 935
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:240.063
训练集长度= 17
accuracy= 0.09215259060838635
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635]
三个采集函数选出的max_idx [3102, 9562, 3656]
max_means [-205.43628433 -191.82710975 -227.05499255]  max_stds [315.51500709 293.59624048 334.09806592]
所有模型的可信度所占权重  [0.08333325320674892, 0.08333332385591831, 0.08333338487738458, 0.08333340118748762, 0.08333344210910522, 0.08333346902276666, 0.0833334790554696, 0.08333322161408484, 0.08333323839217936, 0.08333324984752778, 0.08333327304285916, 0.08333326378846785]
三个函数的累计增益为[0.8009198067119823, 0.824320043016102, 0.7613349849520793]
probability ================= config23 =================
2022年 07月 15日 星期五 10:31:14 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 15日 星期五 10:36:50 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 15日 星期五 10:40:44 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 15日 星期五 10:45:49 CST
cmd

end before line
finish
================= config27 =================
2022年 07月 15日 星期五 10:50:51 CST
cmd

end before line
finish
[0.33559383727404357, 0.34539878282365827, 0.3190073799022981]
probabilityTotal [0.33559384 0.68099262 1.        ]
每一轮选择的下标，result: [2 1 0 2 2 2 1 0 0 0 0 2 0 2 1 2 2 0 0 1 1 0 0 2 1 2 2 1 2 0 1 0 0 0 2 1 1
 0 1 1 2 2 0 0 2 0 1 1 1 2 0 2 1 1 1 0 2 1 0 0 0 2 2 0 2 0 1 1 2 1 0 0 0 2
 0 0 2 1 0 1 1 2 1 0 0 2 1 0 2 1 1 2 0 0 2 2 2 1 2 1]
每个概率被转中的次数, count: [36 31 33]
choose which one? [0]
ys [66.1741547  69.83977533 71.12808736 ... 61.04366842 61.41519498
 76.8897378 ]
12  ys.argmax() 3102
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:182.919
训练集长度= 18
accuracy= 0.09215258994332277
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277]
三个采集函数选出的max_idx [7162, 7162, 489]
max_means [-190.06725142 -190.06725142 -262.92118045]  max_stds [288.67977798 288.67977798 335.29437305]
所有模型的可信度所占权重  [0.07692300794087241, 0.07692307315549453, 0.0769231294830055, 0.07692314453848621, 0.07692318231228952, 0.07692320715567091, 0.07692321641662807, 0.07692297877841137, 0.07692299426588424, 0.0769230048400527, 0.0769230262511292, 0.0769230177086136, 0.07692301715346157]
三个函数的累计增益为[0.8267891581648567, 0.8355147930767357, 0.7281058323532942]
probability [0.34587758293118515, 0.34952785033377115, 0.3045945667350438]
probabilityTotal [0.34587758 0.69540543 1.        ]
每一轮选择的下标，result: [1 1 2 0 0 2 0 2 2 1 0 1 1 1 2 1 1 2 2 0 2 0 0 2 0 2 0 1 0 2 1 0 1 2 0 1 0
 1 1 2 1 1 2 0 1 2 2 0 0 0 0 1 0 1 1 1 2 0 0 1 1 2 0 0 1 2 0 1 0 1 0 2 0 0
 1 0 1 1 1 1 2 1 2 0 0 0 2 2 0 1 2 1 2 1 1 1 0 0 1 1]
每个概率被转中的次数, count: [35 39 26]
choose which one? [1]
ys [0.27590982 0.27546007 0.24651322 ... 0.29675351 0.32025737 0.31615725]
13  ys.argmax() 7162
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 856
runtime:188.16
训练集长度= 19
accuracy= 0.09215258392754129
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129]
三个采集函数选出的max_idx [9285, 9285, 9121]
max_means [-181.38246578 -181.38246578 -289.731197  ]  max_stds [269.33349601 269.33349601 335.57859929]
所有模型的可信度所占权重  [0.07142851167103918, 0.07142857222747764, 0.07142862453159812, 0.0714286385116882, 0.07142867358736481, 0.07142869665622036, 0.07142870525568108, 0.07142848459160944, 0.07142849897283511, 0.07142850879170642, 0.0714285286734215, 0.0714285207410851, 0.07142852022558678, 0.07142851556268615]
三个函数的累计增益为[0.8464658262541523, 0.8545682020169338, 0.7019017589637699]
probability [0.3522631901987738, 0.3556350554836573, 0.29210175431756885]
probabilityTotal [0.35226319 0.70789825 1.        ]
每一轮选择的下标，result: [2 0 2 2 1 0 1 2 0 0 0 0 2 2 2 1 0 2 2 1 2 0 2 2 2 2 2 2 2 2 0 1 1 0 0 2 0
 2 1 2 0 2 2 1 1 1 2 2 0 0 2 2 2 2 0 2 1 1 2 1 2 0 1 0 0 1 0 0 1 0 1 0 1 0
 0 1 0 2 1 2 1 2 2 1 1 1 0 1 2 2 0 1 0 0 1 1 0 1 0 1]
每个概率被转中的次数, count: [32 30 38]
choose which one? [2]
ys [460.60312367 499.50912548 560.80224237 ... 549.40803165 494.27210151
 511.69542048]
14  ys.argmax() 9121
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 819
runtime:163.935
训练集长度= 20
accuracy= 0.09215258863173983
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983]
三个采集函数选出的max_idx [1017, 1017, 4694]
max_means [-175.58127331 -175.58127331 -269.05224732]  max_stds [266.10796086 266.10796086 324.81002514]
所有模型的可信度所占权重  [0.06666661414218736, 0.06666667066153269, 0.06666671947871418, 0.06666673252679889, 0.06666676526409865, 0.06666678679503155, 0.06666679482119528, 0.06666658886805171, 0.06666660229052966, 0.06666661145481, 0.06666663001107831, 0.06666662260756398, 0.06666662212643218, 0.06666661777439138, 0.06666662117758414]
三个函数的累计增益为[0.8520987773131763, 0.859660995060342, 0.7143529710956793]
probability [0.35121977723703207, 0.35433678726367746, 0.2944434354992905]
probabilityTotal [0.35121978 0.70555656 1.        ]
每一轮选择的下标，result: [0 0 0 2 1 0 1 0 2 2 1 1 1 1 0 1 2 1 0 1 1 2 1 0 2 2 2 0 0 0 2 2 2 1 1 1 0
 1 2 0 1 0 2 1 0 1 1 2 1 0 1 0 2 2 1 0 0 2 0 0 0 1 0 1 2 2 0 2 2 2 0 0 2 1
 2 0 0 2 0 0 2 2 0 1 0 0 2 0 2 2 0 0 2 0 1 0 0 0 1 0]
每个概率被转中的次数, count: [41 28 31]
choose which one? [0]
ys [54.27709896 69.80242788 50.62761569 ... 60.24891522 55.95828957
 55.12415027]
15  ys.argmax() 1017
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 805
runtime:161.103
训练集长度= 21
accuracy= 0.0921525824231493
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493]
三个采集函数选出的max_idx [2771, 477, 5146]
max_means [-181.26581365 -177.01928434 -253.09205769]  max_stds [278.15824203 262.42331185 311.80693101]
所有模型的可信度所占权重  [0.062499953686849775, 0.0625000066737385, 0.0625000524398483, 0.06250006467242827, 0.06250009536364824, 0.06250011554889878, 0.06250012307342764, 0.06249992999234649, 0.06249994257592016, 0.06249995116743337, 0.062499968563935734, 0.062499961623140726, 0.06249996117207964, 0.0624999570920412, 0.062499960282534565, 0.06249995607172869]
三个函数的累计增益为[0.8477222817099744, 0.8595231296593697, 0.7272239911454863]
probability [0.34821644537173857, 0.3530638457692153, 0.2987197088590462]
probabilityTotal [0.34821645 0.70128029 1.        ]
每一轮选择的下标，result: [0 0 2 1 1 0 1 2 2 2 1 1 1 2 2 0 0 2 1 0 1 1 0 1 2 2 2 0 0 2 1 0 0 2 1 0 2
 1 2 1 0 0 2 0 0 2 0 0 0 1 1 0 2 2 1 0 2 1 0 1 1 1 2 1 1 1 1 0 0 1 0 0 1 0
 0 0 2 2 2 0 1 2 2 0 1 0 1 2 1 1 0 1 1 1 1 1 0 0 1 2]
每个概率被转中的次数, count: [35 38 27]
choose which one? [1]
ys [0.28191429 0.30124718 0.39468962 ... 0.2504248  0.30122563 0.29863057]
16  ys.argmax() 477
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 805
runtime:183.291
训练集长度= 22
accuracy= 0.0921525694705668
================= config28 =================
2022年 07月 15日 星期五 10:56:14 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 15日 星期五 11:01:59 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 15日 星期五 11:05:21 CST
cmd

end before line
finish
================= config31 =================
2022年 07月 15日 星期五 11:08:47 CST
cmd

end before line
finish
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668]
三个采集函数选出的max_idx [8730, 5956, 1243]
max_means [-203.53057856 -179.66453199 -250.38571769]  max_stds [265.13754163 225.91480666 303.75749641]
所有模型的可信度所占权重  [0.058823488741282445, 0.05882353861129783, 0.05882358168528567, 0.058823593198302694, 0.05882362208415821, 0.05882364108204201, 0.05882364816395187, 0.05882346644057237, 0.05882347828393641, 0.05882348637006689, 0.0588235027432464, 0.05882349621073312, 0.05882349578620502, 0.058823491946168656, 0.05882349494898608, 0.05882349098587447, 0.05882348271789001]
三个函数的累计增益为[0.8186056647726025, 0.8563821706233556, 0.7300383837955104]
probability [0.3403728650608244, 0.3560801806606739, 0.30354695427850165]
probabilityTotal [0.34037287 0.69645305 1.        ]
每一轮选择的下标，result: [0 0 0 1 0 0 2 0 1 1 2 0 2 0 0 0 0 1 1 2 0 1 1 2 1 0 2 0 0 0 1 2 2 1 2 2 2
 0 1 2 0 1 1 1 2 0 2 0 2 1 2 0 2 0 2 0 0 0 2 0 0 0 1 1 1 2 1 2 2 1 0 1 1 0
 0 1 0 0 0 0 0 2 1 1 0 1 2 0 1 2 0 0 2 0 2 1 1 0 2 0]
每个概率被转中的次数, count: [43 29 28]
choose which one? [0]
ys [46.21747557 56.82640657 52.43405452 ... 70.86894642 53.88756985
 52.75870339]
17  ys.argmax() 8730
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 805
runtime:203.434
训练集长度= 23
accuracy= 0.09215257245427648
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648]
三个采集函数选出的max_idx [6302, 6302, 7619]
max_means [-163.42694023 -163.42694023 -287.5685392 ]  max_stds [226.37469379 226.37469379 310.74164563]
所有模型的可信度所占权重  [0.05555551949459845, 0.05555556659405942, 0.05555560727504965, 0.055555618148455076, 0.055555645429542, 0.05555566337198856, 0.05555567006045928, 0.05555549843281582, 0.05555550961821566, 0.055555517255116996, 0.055555532718676075, 0.05555552654907994, 0.05555552614813672, 0.05555552252143555, 0.05555552535742991, 0.05555552161449101, 0.05555551380583868, 0.05555551560461136]
三个函数的累计增益为[0.8810923534419017, 0.8893685396438649, 0.6897973848907459]
probability [0.3581300229041698, 0.36149397305365166, 0.28037600404217855]
probabilityTotal [0.35813002 0.719624   1.        ]
每一轮选择的下标，result: [1 2 1 0 0 0 1 1 2 1 0 1 2 0 0 1 2 1 0 1 1 1 0 2 0 1 0 1 0 2 2 1 1 0 0 0 2
 0 1 1 1 0 2 2 2 0 0 1 1 2 0 0 1 1 2 0 1 2 2 0 1 1 2 0 1 1 1 0 1 0 2 2 0 0
 0 0 1 1 0 1 0 0 0 0 2 0 2 2 2 0 2 2 0 2 2 1 1 0 1 1]
每个概率被转中的次数, count: [38 36 26]
choose which one? [0]
ys [46.29651425 49.55623459 60.34462782 ... 57.36817983 37.7056569
 69.41491578]
18  ys.argmax() 6302
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:156.433
训练集长度= 24
accuracy= 0.09215255960001292
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292]
三个采集函数选出的max_idx [9214, 3932, 2419]
max_means [-212.9725637  -184.58740372 -255.56933071]  max_stds [267.56228498 213.36963227 288.54260804]
所有模型的可信度所占权重  [0.05263154716276447, 0.05263159178330846, 0.052631630323195684, 0.05263164062431708, 0.05263166646955848, 0.05263168346766653, 0.05263168980411275, 0.052631527209495814, 0.05263153780619088, 0.05263154504115037, 0.052631559690838575, 0.05263155384595777, 0.052631553466116796, 0.05263155003029448, 0.0526315527170261, 0.05263154917108383, 0.052631541773412865, 0.05263154347751338, 0.05263153613599579]
三个函数的累计增益为[0.8073362432302198, 0.8463669755409549, 0.7130645810097005]
probability [0.34111341353594815, 0.3576045675538238, 0.30128201891022804]
probabilityTotal [0.34111341 0.69871798 1.        ]
每一轮选择的下标，result: [2 0 0 0 0 1 1 1 0 2 1 1 2 0 0 2 0 1 2 2 2 2 1 1 2 0 2 2 0 1 0 0 0 1 0 1 0
 0 1 0 2 2 0 2 1 1 2 1 1 1 2 2 0 2 2 0 1 0 1 0 1 2 2 2 2 1 1 1 0 2 0 0 2 2
 0 0 2 1 1 0 1 0 2 2 2 2 2 1 0 2 2 0 2 2 1 1 0 2 0 2]
每个概率被转中的次数, count: [33 29 38]
choose which one? [2]
ys [394.19501497 408.37769587 421.72783117 ... 368.32484595 385.55448575
 380.68976408]
19  ys.argmax() 2419
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:163.322
训练集长度= 25
accuracy= 0.09215255629306524
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524]
三个采集函数选出的max_idx [214, 214, 1598]
max_means [-170.03921859 -170.03921859 -249.43393943]  max_stds [229.18032184 229.18032184 280.20027582]
所有模型的可信度所占权重  [0.049999971927879125, 0.050000014317397715, 0.05000005093029213, 0.05000006071635787, 0.05000008526933825, 0.050000101417541576, 0.05000010743716574, 0.049999952972273096, 0.04999996303913383, 0.04999996991234564, 0.04999998382955003, 0.04999997827691303, 0.04999997791606409, 0.04999997465203275, 0.0499999772044279, 0.04999997383578259, 0.04999996680799488, 0.04999996842689044, 0.049999961452448435, 0.049999959658171014]
三个函数的累计增益为[0.8686093723956914, 0.8776174460971906, 0.7183660999614775]
probability [0.35243523013140426, 0.3560902246881315, 0.2914745451804643]
probabilityTotal [0.35243523 0.70852545 1.        ]
每一轮选择的下标，result: [0 0 1 2 1 1 2 1 0 1 2 2 1 1 2 2 1 2 0 0 1 0 2 2 0 2 1 0 0 2 2 0 0 0 1 0 0
 0 1 1 1 2 2 2 2 0 2 0 0 2 2 2 0 2 1 2 1 1 1 1 2 0 1 2 0 2 2 0 0 2 0 2 0 1
 1 1 2 2 2 0 2 0 0 1 1 1 2 0 1 0 2 0 2 2 1 2 1 0 1 0]
每个概率被转中的次数, count: [33 30 37]
choose which one? [2]
ys [318.64732684 357.532791   424.69044566 ... 425.94818786 374.29459192
 294.55392416]
20  ys.argmax() 1598
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:178.628
训练集长度= 26
accuracy= 0.09215255425566196
所有模型的可信度  ================= config32 =================
2022年 07月 15日 星期五 11:14:07 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 15日 星期五 11:17:35 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 15日 星期五 11:22:55 CST
cmd

end before line
finish
[0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196]
三个采集函数选出的max_idx [5801, 5801, 2251]
max_means [-143.49606091 -143.49606091 -217.50783597]  max_stds [179.16217474 179.16217474 263.81957013]
所有模型的可信度所占权重  [0.047619022763388634, 0.04761906313436031, 0.047619098003784936, 0.047619107323847915, 0.04761913070763968, 0.04761914608688155, 0.047619151819857174, 0.04761900471042979, 0.04761901429791659, 0.047619020843832856, 0.04761903409831375, 0.047619028810087824, 0.04761902846642216, 0.04761902535782076, 0.04761902778867338, 0.04761902458043963, 0.047619017887308206, 0.04761901942911356, 0.04761901278678758, 0.04761901107795188, 0.04761901002514191]
三个函数的累计增益为[0.9250644150351484, 0.9336435331847488, 0.75787753210744]
probability [0.3535387710396612, 0.3568175166469047, 0.2896437123134341]
probabilityTotal [0.35353877 0.71035629 1.        ]
每一轮选择的下标，result: [2 1 0 2 0 1 1 1 1 1 0 1 1 0 2 0 1 1 2 1 1 0 0 0 0 1 0 2 0 1 1 0 1 2 2 1 0
 1 0 2 1 2 2 0 0 1 1 2 2 0 0 0 1 1 0 0 2 1 2 1 1 2 1 2 2 1 2 2 1 0 2 2 1 1
 1 1 0 2 1 1 1 2 2 1 1 0 0 0 2 0 2 2 2 1 0 2 2 1 1 1]
每个概率被转中的次数, count: [28 42 30]
choose which one? [1]
ys [0.28812022 0.26311808 0.23293343 ... 0.25779904 0.21932927 0.331899  ]
21  ys.argmax() 5801
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:172.507
训练集长度= 27
accuracy= 0.09215255133704606
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606]
三个采集函数选出的max_idx [6516, 6516, 1961]
max_means [-168.52404231 -168.52404231 -262.58143688]  max_stds [212.74603615 212.74603615 276.34972483]
所有模型的可信度所占权重  [0.04545452342526594, 0.045454561961194885, 0.04545459524564691, 0.045454604142070996, 0.045454626462963964, 0.04545464114314993, 0.045454646615535964, 0.04545450619289549, 0.045454515344587776, 0.04545452159296263, 0.04545453424496759, 0.04545452919711538, 0.045454528869070865, 0.045454525901769426, 0.04545452822212883, 0.04545452515972377, 0.04545451877082536, 0.0454545202425487, 0.045454513902146394, 0.04545451227098498, 0.04545451126602998, 0.04545450982641433]
三个函数的累计增益为[0.8796443227911621, 0.8878334813305295, 0.7025479896208404]
probability [0.3561275858007715, 0.359442999979892, 0.28442941421933665]
probabilityTotal [0.35612759 0.71557059 1.        ]
每一轮选择的下标，result: [1 1 0 0 2 2 2 0 1 1 2 0 0 2 0 2 1 1 2 2 0 2 1 0 2 1 1 0 0 2 1 2 1 1 2 1 0
 2 2 1 0 2 1 0 0 0 1 1 1 0 1 0 2 0 2 1 1 0 2 0 2 0 2 1 1 2 0 2 2 0 0 0 0 1
 1 2 1 1 0 2 0 1 2 0 1 1 2 2 1 2 1 0 0 1 2 0 2 0 2 2]
每个概率被转中的次数, count: [33 33 34]
choose which one? [2]
ys [369.60610837 298.32284784 328.15480116 ... 370.21076812 238.82993116
 318.96111377]
22  ys.argmax() 1961
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:178.208
训练集长度= 28
accuracy= 0.09215255668522718
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718]
三个采集函数选出的max_idx [5501, 5501, 6830]
max_means [-129.07755533 -129.07755533 -266.94612422]  max_stds [180.35794791 180.35794791 271.076652  ]
所有模型的可信度所占权重  [0.04347824117006993, 0.043478278030524876, 0.043478309867827816, 0.04347831837745112, 0.04347833972787116, 0.04347835376978861, 0.04347835900424498, 0.043478224686932465, 0.043478233440725364, 0.04347823941743193, 0.0434782515193501, 0.04347824669096958, 0.043478246377187856, 0.04347824353889943, 0.04347824575837371, 0.04347824282911661, 0.043478236717996194, 0.043478238125731615, 0.04347823206099878, 0.04347823050075738, 0.043478229539496045, 0.043478228162472335, 0.04347823068578217]
三个函数的累计增益为[0.9658452341102741, 0.9736783425255444, 0.6937809365136687]
probability [0.36678068536597125, 0.36975531605382195, 0.2634639985802068]
probabilityTotal [0.36678069 0.736536   1.        ]
每一轮选择的下标，result: [0 0 1 2 1 1 1 0 2 1 2 1 1 2 2 0 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 2 2 0 0 2 1
 2 1 0 2 1 1 1 2 2 2 0 0 1 1 0 0 0 2 0 2 2 2 1 1 0 0 0 2 0 0 1 1 1 2 1 1 1
 2 0 1 2 0 1 1 0 0 1 0 0 0 0 0 1 2 2 2 2 2 1 1 2 1 2]
每个概率被转中的次数, count: [31 41 28]
choose which one? [1]
ys [0.19805401 0.16406105 0.25509813 ... 0.28590379 0.2328737  0.25542224]
23  ys.argmax() 5501
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:212.265
训练集长度= 29
accuracy= 0.09215252956061551
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551]
三个采集函数选出的max_idx [3092, 3092, 5795]
max_means [-188.05888153 -188.05888153 -252.17274647]  max_stds [223.67618723 223.67618723 264.61118334]
所有模型的可信度所占权重  [0.041666649504252855, 0.041666684828856965, 0.04166671533960687, 0.041666723494662876, 0.04166674395548292, 0.04166675741232104, 0.04166676242867526, 0.04166663370791213, 0.041666642096964, 0.04166664782464136, 0.04166665942231342, 0.04166665479511523, 0.04166665449440774, 0.04166665177438122, 0.04166665390137749, 0.04166665109417265, 0.041666645237682015, 0.04166664658676184, 0.041666640774725976, 0.041666639279494565, 0.041666638358285754, 0.041666637038637974, 0.04166663945681, 0.04166662719245776]
三个函数的累计增益为[0.8557942614000182, 0.8633009906071913, 0.7103452669779429]
probability [0.35225981237750503, 0.35534971276753763, 0.29239047485495745]
probabilityTotal [0.35225981 0.70760953 1.        ]
每一轮选择的下标，result: [1 2 0 2 0 1 0 1 1 2 0 2 0 1 0 1 1 1 2 1 0 1 1 0 1 1 0 1 1 2 2 2 1 2 0 2 1
 2 2 1 1 1 1 1 0 1 0 2 0 2 1 2 2 2 2 0 0 0 1 2 2 1 1 1 2 0 1 1 2 1 1 1 0 1
 2 0 2 0 1 0 2 1 0 2 1 0 2 0 1 2 0 2 1 0 0 2 0 1 2 1]
每个概率被转中的次数, count: [28 41 31]
choose which one? [1]
ys ================= config35 =================
2022年 07月 15日 星期五 11:28:49 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 15日 星期五 11:34:14 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 15日 星期五 11:39:53 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 15日 星期五 11:45:01 CST
cmd

end before line
finish
[0.19188465 0.26399778 0.24579079 ... 0.22322418 0.21391932 0.21151401]
24  ys.argmax() 3092
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:182.561
训练集长度= 30
accuracy= 0.09215252301144478
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478]
三个采集函数选出的max_idx [9245, 9245, 2162]
max_means [-120.21372482 -120.21372482 -259.80804277]  max_stds [174.48067804 174.48067804 260.47570618]
所有模型的可信度所占权重  [0.039999985153601744, 0.040000019065223075, 0.040000048355544174, 0.04000005618439826, 0.0400000758267863, 0.04000008874535142, 0.04000009356105167, 0.03999996998911404, 0.03999997804260416, 0.03999998354117465, 0.03999999467494028, 0.03999999023282983, 0.03999998994415063, 0.03999998733292506, 0.03999998937484157, 0.03999998667992481, 0.039999981057693576, 0.039999982352810264, 0.0399999767732556, 0.03999997533783339, 0.03999997445347289, 0.03999997318661097, 0.03999997550805621, 0.03999996373427758, 0.03999996089152771]
三个函数的累计增益为[0.9955073611954535, 1.0027138215279165, 0.6976168074143575]
probability [0.36927566301734405, 0.37194884306704534, 0.25877549391561067]
probabilityTotal [0.36927566 0.74122451 1.        ]
每一轮选择的下标，result: [1 0 2 1 0 2 2 1 0 0 1 2 1 1 0 2 0 1 1 1 0 1 2 0 2 0 2 2 0 0 1 1 1 1 1 0 1
 2 1 2 1 2 1 2 0 1 1 2 2 0 0 2 2 2 0 2 1 0 0 0 0 2 2 2 1 2 1 2 2 2 0 0 1 1
 0 1 0 2 0 1 0 1 2 2 0 0 2 0 1 0 1 2 1 1 0 2 1 1 1 1]
每个概率被转中的次数, count: [31 37 32]
choose which one? [1]
ys [0.2080998  0.30051604 0.28330525 ... 0.23110759 0.23131568 0.2741998 ]
25  ys.argmax() 9245
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:197.744
训练集长度= 31
accuracy= 0.09215252608411377
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478, 0.09215252608411377]
三个采集函数选出的max_idx [7541, 7541, 362]
max_means [-183.02932225 -183.02932225 -239.78483469]  max_stds [206.85948753 206.85948753 251.59248332]
所有模型的可信度所占权重  [0.03846152558314995, 0.03846155819047933, 0.03846158635425064, 0.03846159388199523, 0.03846161276890749, 0.03846162519060517, 0.03846162982108635, 0.03846151100191123, 0.03846151874565202, 0.03846152403273922, 0.03846153473828349, 0.03846153046702328, 0.03846153018944712, 0.03846152767865321, 0.03846152964203454, 0.03846152705076833, 0.03846152164477656, 0.03846152289008111, 0.038461517525124514, 0.0384615161449108, 0.03846151529456413, 0.03846151407642763, 0.038461516308586595, 0.038461504987645195, 0.038461502254231755, 0.03846150353666507]
三个函数的累计增益为[0.8686303457165068, 0.8755596347494059, 0.7218586147263397]
probability [0.3522356969809788, 0.35504557227962796, 0.29271873073939314]
probabilityTotal [0.3522357  0.70728127 1.        ]
每一轮选择的下标，result: [1 2 0 1 2 1 1 0 0 1 0 2 0 0 0 0 1 2 1 1 1 1 2 0 1 0 0 1 1 1 0 2 2 0 2 1 2
 0 1 0 1 2 1 1 2 1 2 2 2 0 0 0 0 1 2 0 2 0 1 0 0 1 1 0 0 1 0 0 2 1 2 0 0 0
 0 0 1 0 2 2 2 1 2 0 0 0 2 1 2 0 0 0 0 1 1 2 2 0 1 2]
每个概率被转中的次数, count: [41 32 27]
choose which one? [0]
ys [34.03280239 34.24023217 23.90119201 ... 39.5661452  42.59658292
 52.56706699]
26  ys.argmax() 7541
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:168.264
训练集长度= 32
accuracy= 0.09215252789065091
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478, 0.09215252608411377, 0.09215252789065091]
三个采集函数选出的max_idx [7222, 7222, 3705]
max_means [-169.39996179 -169.39996179 -284.40948633]  max_stds [192.85782957 192.85782957 261.86134471]
所有模型的可信度所占权重  [0.03703702585434012, 0.03703705725399167, 0.03703708437466124, 0.03703709162360071, 0.0370371098109983, 0.0370371217726335, 0.03703712623161552, 0.03703701181314682, 0.03703701927008264, 0.03703702436135197, 0.03703703467039493, 0.03703703055732942, 0.03703703029003384, 0.037037027872232224, 0.03703702976289579, 0.037037027267602315, 0.03703702206183229, 0.0370370232610145, 0.03703701809475982, 0.037037016765665086, 0.03703701594681272, 0.03703701477379234, 0.03703701692327882, 0.03703700602163119, 0.037037003389455196, 0.03703700462439102, 0.03703700535045603]
三个函数的累计增益为[0.8940556422259367, 0.9007282911438494, 0.664856498280304]
probability [0.36349038287118446, 0.36620323830812174, 0.27030637882069375]
probabilityTotal [0.36349038 0.72969362 1.        ]
每一轮选择的下标，result: [0 0 0 1 0 1 2 0 1 0 2 0 1 0 2 0 0 0 0 0 2 2 0 1 0 0 0 1 1 2 0 0 1 1 0 2 0
 1 2 2 0 1 2 1 1 1 0 0 1 0 1 0 0 1 1 1 2 2 1 2 0 1 1 0 2 0 0 1 1 0 1 0 2 0
 2 1 1 0 0 1 2 0 0 1 0 1 1 2 2 1 2 0 0 0 2 0 2 1 0 0]
每个概率被转中的次数, count: [45 33 22]
choose which one? [0]
ys [27.06582098 35.31792184 27.92969594 ... 45.29932607 20.64919628
 43.98275289]
27  ys.argmax() 7222
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:164.348
训练集长度= 33
accuracy= 0.09215251533308544
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478, 0.09215252608411377, 0.09215252789065091, 0.09215251533308544]
三个采集函数选出的max_idx [7831, 6129, 2071]
max_means [-207.09719893 -191.44235546 -251.43325394]  max_stds [212.88001038 187.18810822 246.02685853]
================= config39 =================
2022年 07月 15日 星期五 11:50:06 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 15日 星期五 11:55:10 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 15日 星期五 12:00:11 CST
cmd

end before line
finish
所有模型的可信度所占权重  [0.03571427619603035, 0.03571430647426684, 0.035714332626341994, 0.03571433961639101, 0.03571435715423932, 0.03571436868867366, 0.03571437298840648, 0.03571426265630776, 0.0357142698469247, 0.03571427475636315, 0.03571428469722636, 0.0357142807310559, 0.03571428047330658, 0.03571427814185494, 0.03571427996499487, 0.035714277558818945, 0.0357142725389691, 0.0357142736953234, 0.03571426871357765, 0.03571426743195054, 0.03571426664234287, 0.03571426551121604, 0.035714267583935214, 0.03571425707163177, 0.03571425453346198, 0.03571425572429299, 0.035714256424427125, 0.03571425155766846]
三个函数的累计增益为[0.8286707084883003, 0.8549817059680228, 0.7006113510856622]
probability [0.3475583198740299, 0.35859359116405076, 0.2938480889619194]
probabilityTotal [0.34755832 0.70615191 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 0 1 0 1 2 0 2 1 1 0 0 0 0 1 1 0 2 2 1 1 1 1 2 2 2 2 1 0 1 1 2 1
 2 1 0 2 1 0 0 1 1 2 1 0 0 0 0 1 2 0 0 1 1 0 0 1 2 2 2 1 1 1 0 0 1 1 1 1 0
 1 0 2 2 0 0 1 1 1 2 2 2 2 1 2 2 2 2 0 0 1 2 2 0 0 1]
每个概率被转中的次数, count: [31 39 30]
choose which one? [1]
ys [0.1641018  0.23868538 0.26508048 ... 0.25190875 0.18572815 0.22549681]
28  ys.argmax() 6129
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:161.367
训练集长度= 34
accuracy= 0.09215251353946419
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478, 0.09215252608411377, 0.09215252789065091, 0.09215251533308544, 0.09215251353946419]
三个采集函数选出的max_idx [9071, 7290, 3520]
max_means [-213.70260387 -189.88011734 -294.45083619]  max_stds [218.73775845 178.75249209 259.20139289]
所有模型的可信度所占权重  [0.03448275059099321, 0.034482779825153576, 0.03448280507543388, 0.03448281182444695, 0.03448282875754244, 0.034482839894238046, 0.03448284404570435, 0.034482737518157176, 0.034482744460822036, 0.034482749200969665, 0.03448275879904481, 0.03448275496963872, 0.03448275472077731, 0.034482752469720476, 0.03448275422999356, 0.03448275190678914, 0.03448274706003741, 0.03448274817651747, 0.034482743366555886, 0.03448274212912277, 0.034482741366742925, 0.034482740274620435, 0.034482742275866604, 0.034482732126056036, 0.03448272967540925, 0.03448273082517717, 0.034482731501168776, 0.03448272680222922, 0.03448272613107064]
三个函数的累计增益为[0.8188797670982929, 0.8548325427816654, 0.6480711587245003]
probability [0.35269428789175267, 0.36817927009165713, 0.2791264420165903]
probabilityTotal [0.35269429 0.72087356 1.        ]
每一轮选择的下标，result: [0 1 0 1 0 1 2 1 1 1 0 1 2 0 1 1 2 2 2 0 0 2 1 1 2 2 1 0 2 1 1 2 0 1 2 1 0
 1 2 1 1 1 1 1 0 0 1 0 1 1 0 0 2 2 2 0 2 0 1 1 0 1 1 2 0 0 1 1 2 2 0 1 1 1
 2 0 2 1 2 2 1 1 1 0 2 1 0 1 0 1 0 0 0 1 2 2 1 0 1 0]
每个概率被转中的次数, count: [30 44 26]
choose which one? [1]
ys [0.34927849 0.20437708 0.17543704 ... 0.18083959 0.25880473 0.16732242]
29  ys.argmax() 7290
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:160.039
训练集长度= 35
accuracy= 0.09215250791084378
所有模型的可信度  [0.09215257890678283, 0.09215265703289582, 0.09215272451238654, 0.09215274254862058, 0.09215278780105522, 0.09215281756304355, 0.09215282865752761, 0.0921525439706036, 0.09215256252435759, 0.09215257519204857, 0.09215260084218849, 0.09215259060838635, 0.09215258994332277, 0.09215258392754129, 0.09215258863173983, 0.0921525824231493, 0.0921525694705668, 0.09215257245427648, 0.09215255960001292, 0.09215255629306524, 0.09215255425566196, 0.09215255133704606, 0.09215255668522718, 0.09215252956061551, 0.09215252301144478, 0.09215252608411377, 0.09215252789065091, 0.09215251533308544, 0.09215251353946419, 0.09215250791084378]
三个采集函数选出的max_idx [1670, 1670, 4121]
max_means [-175.37745834 -175.37745834 -272.37845193]  max_stds [172.49296328 172.49296328 248.91622834]
所有模型的可信度所占权重  [0.03333332668604688, 0.03333335494573617, 0.03333337935434129, 0.033333385878387474, 0.03333340224704699, 0.03333341301251977, 0.033333417025604, 0.03333331404897162, 0.033333320760214544, 0.03333332534235741, 0.03333333462049703, 0.033333330918737684, 0.03333333067817164, 0.03333332850214996, 0.03333333020374734, 0.03333332795798299, 0.033333323272789483, 0.03333332435205358, 0.0333333197024239, 0.03333331850623852, 0.03333331776927131, 0.03333331671355286, 0.03333331864809089, 0.03333330883660701, 0.03333330646764838, 0.03333330757909073, 0.033333308232549305, 0.03333330369024092, 0.033333303041454265, 0.03333330100547605]
三个函数的累计增益为[0.877574939782126, 0.8852113750463914, 0.6697619073094286]
probability [0.3607636353497785, 0.36390290929911623, 0.27533345535110526]
probabilityTotal [0.36076364 0.72466654 1.        ]
每一轮选择的下标，result: [0 2 1 1 1 0 2 0 2 1 2 0 1 1 1 1 0 1 0 1 1 0 2 1 1 0 1 1 2 0 1 0 2 1 0 2 1
 0 1 0 1 0 2 1 0 0 2 2 1 2 2 2 0 1 1 0 0 1 1 0 1 1 1 0 2 2 0 2 1 1 2 2 2 2
 0 2 0 0 0 1 0 0 1 1 2 2 1 2 1 1 1 0 2 1 0 1 1 0 0 0]
每个概率被转中的次数, count: [33 41 26]
choose which one? [1]
ys [0.30971323 0.15353003 0.24031335 ... 0.29514523 0.16476711 0.19351564]
30  ys.argmax() 1670
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/wordcount-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/wordcount-100G 100G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-wordcount.sh	将stop_time修改为 782
runtime:161.413
{'maxIndex': 24, 'target': -156.433, 'params': {'spark.broadcast.blockSize': 55.69967051973568, 'spark.broadcast.checksum': 0.6712717241167853, 'spark.broadcast.compress': 0.6182611754184456, 'spark.default.parallelism': 440.2344261278066, 'spark.executor.cores': 3.8387235089312637, 'spark.executor.instances': 6.903888903132598, 'spark.executor.memory': 5.543717774071504, 'spark.executor.memoryOverhead': 498.53831874183516, 'spark.kryoserializer.buffer': 97.08818840696732, 'spark.kryoserializer.buffer.max': 49.10464254043019, 'spark.locality.wait': 7.3167369983196915, 'spark.maxRemoteBlockSizeFetchToMem': 1187142485.5224802, 'spark.memory.fraction': 0.8547325542091866, 'spark.memory.offHeap.enabled': 0.9021877946034973, 'spark.memory.offHeap.size': 668.2629744715978, 'spark.memory.storageFraction': 0.7812510677190325, 'spark.rdd.compress': 0.47477502798252535, 'spark.reducer.maxBlocksInFlightPerAddress': 1121965470.9731383, 'spark.reducer.maxReqsInFlight': 1436718453.3790789, 'spark.reducer.maxSizeInFlight': 64.78438960679401, 'spark.scheduler.mode': 0.25452214579071863, 'spark.scheduler.revive.interval': 828.5696657419946, 'spark.shuffle.compress': 0.4076663433576432, 'spark.shuffle.file.buffer': 41.13679504464571, 'spark.shuffle.io.numConnectionsPerPeer': 4.765057081028832, 'spark.shuffle.sort.bypassMergeThreshold': 170.05069991851963, 'spark.storage.memoryMapThreshold': 3.961532785496644}}
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool//yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/yyq/BO-combineAC2
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 07月 15日 星期五 12:06:53 CST
cmd

end before line
finish
================= config2 =================
2022年 07月 15日 星期五 12:12:14 CST
cmd

end before line
finish
================= config3 =================
2022年 07月 15日 星期五 12:17:52 CST
cmd

end before line
finish
================= config4 =================
2022年 07月 15日 星期五 12:22:00 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 6	 bo迭代搜索次数：--niters = 30
基准为：terasort  默认配置执行结果为 1241.583 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 2483
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1567
runtime:313.593
生成测试集 - 配置成功 target -313.593  conf {'spark.broadcast.blockSize': 27.85536429155959, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 4.4402676724513395, 'spark.executor.instances': 8.554031568612787, 'spark.executor.memory': 9.117561268266025, 'spark.executor.memoryOverhead': 857.7637567760185, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 4.772750629629654, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 457.8426654015389, 'spark.storage.memoryMapThreshold': 1.7653979023280013}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 2 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1567
runtime:330.826
生成测试集 - 配置成功 target -330.826  conf {'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 3 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1206
runtime:241.301
生成测试集 - 配置成功 target -241.301  conf {'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 4 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1206
runtime:295.21
生成测试集 - 配置成功 target -295.21  conf ================= config5 =================
2022年 07月 15日 星期五 12:27:03 CST
cmd

end before line
finish
================= config6 =================
2022年 07月 15日 星期五 12:30:56 CST
cmd

end before line
finish
================= config7 =================
2022年 07月 15日 星期五 12:35:54 CST
cmd

end before line
finish
================= config8 =================
2022年 07月 15日 星期五 12:41:22 CST
cmd

end before line
finish
================= config9 =================
2022年 07月 15日 星期五 12:45:27 CST
cmd

end before line
finish
================= config10 =================
2022年 07月 15日 星期五 12:50:45 CST
cmd

end before line
finish
================= config11 =================
2022年 07月 15日 星期五 12:54:47 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 5 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:225.836
生成测试集 - 配置成功 target -225.836  conf {'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
X_test [array([2.78553643e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       4.44026767e+00, 8.55403157e+00, 9.11756127e+00, 8.57763757e+02,
       7.00896775e+01, 8.37264065e+01, 4.77275063e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 1.22448115e+09, 3.35088715e+01,
       8.00744569e-01, 9.84130788e+02, 3.13424178e-01, 3.81543237e+01,
       4.50555661e+00, 4.57842665e+02, 1.76539790e+00]), array([4.42139656e+00, 1.69830420e-01, 8.78142503e-01, 2.29504050e+02,
       5.26332288e+00, 1.37473372e+01, 1.11989917e+01, 1.33256352e+03,
       6.22895006e+01, 9.79040891e+01, 8.51163105e+00, 1.09337845e+09,
       8.00057726e-01, 9.88861089e-01, 7.66121630e+02, 6.12177597e-01,
       7.89279328e-01, 1.18457990e+09, 1.55466383e+09, 6.76125841e+01,
       2.93614148e-01, 6.43887669e+02, 1.30028572e-01, 1.66197427e+01,
       3.71534213e+00, 1.84651246e+02, 3.38991993e+00]), array([3.24775359e+01, 5.33625451e-02, 5.74117605e-01, 2.44018572e+02,
       5.76791661e+00, 1.21985502e+01, 8.61400657e+00, 9.51670759e+02,
       9.86624151e+01, 7.17612099e+01, 1.44958113e+00, 1.64915581e+09,
       7.65517858e-01, 5.14889112e-01, 9.67265030e+02, 7.34622016e-01,
       9.03401915e-01, 1.22135416e+09, 1.22328866e+09, 6.27547819e+01,
       3.97676837e-01, 5.82677099e+02, 9.27508580e-01, 2.71285075e+01,
       4.00324841e+00, 3.90399194e+02, 8.94975482e+00]), array([4.06676768e+01, 7.50942434e-01, 3.48898342e-01, 2.80978368e+02,
       6.68765865e+00, 1.05685471e+01, 1.37890403e+01, 1.29357829e+03,
       9.16827891e+01, 4.30156134e+01, 9.54540333e+00, 1.55683093e+09,
       7.31355846e-01, 4.08136803e-01, 2.42715628e+02, 8.61351808e-01,
       5.73679487e-01, 1.07682381e+09, 1.73639613e+09, 3.96789553e+01,
       5.27058102e-01, 9.42971050e+02, 3.57269760e-01, 4.50731248e+01,
       3.49344046e+00, 1.06328497e+02, 9.36493510e+00]), array([4.48356089e+01, 9.97322850e-01, 1.72340508e-01, 2.41140725e+02,
       6.79778639e+00, 1.21809090e+01, 8.39600104e+00, 1.41973985e+03,
       1.04372114e+02, 1.20610355e+02, 7.40372283e+00, 1.20717646e+09,
       5.07952054e-01, 2.62109869e-02, 2.89858437e+01, 5.98484427e-01,
       8.60027949e-01, 1.65230727e+09, 1.66732990e+09, 6.44174828e+01,
       1.24173315e-01, 6.39591840e+02, 5.85759271e-01, 4.70270639e+01,
       3.24412088e+00, 1.07458916e+02, 8.20569405e+00])]  y_test [-313.593, -330.826, -241.301, -295.21, -225.836]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 6 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:290.867
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 7 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:320.684
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 8 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:237.705
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 9 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:310.442
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 10 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:234.347
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 11 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1129
runtime:600.919
训练集长度= 6
accuracy= 0.04146252678335439
所有模型的可信度  [0.04146252678335439]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-332.494 -332.494 -332.494]  max_stds [124.5179657 124.5179657 124.5179657]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.21528531000595863, 0.21528531000595863, 0.21528531000595863]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 1 2 0 0 2 1 0 2 2 1 0 1 2 1 1 0 1 2 1 0 0 0 2 0 1 0 1 1 0 0 1 0 1 1
 0 2 2 2 2 1 0 0 1 0 2 1 0 1 2 0 2 1 0 2 1 1 1 0 1 2 0 2 2 1 1 1 2 0 2 0 0
 2 1 2 0 2 0 0 0 0 0 1 2 0 0 1 1 0 0 1 2 2 0 2 0 1 2]
================= config12 =================
2022年 07月 15日 星期五 13:04:55 CST
cmd

end before line
finish
================= config13 =================
2022年 07月 15日 星期五 13:08:46 CST
cmd

end before line
finish
================= config14 =================
2022年 07月 15日 星期五 13:13:42 CST
cmd

end before line
finish
================= config15 =================
2022年 07月 15日 星期五 13:17:38 CST
cmd

end before line
finish
================= config16 =================
2022年 07月 15日 星期五 13:23:11 CST
cmd

end before line
finish
================= config17 =================
2022年 07月 15日 星期五 13:28:23 CST
cmd

end before line
finish
每个概率被转中的次数, count: [38 33 29]
choose which one? [0]
ys [15.28134358 15.28134358 15.28134358 ... 15.28134358 15.28134358
 15.28134358]
1 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1331]
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 12 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:223.461
训练集长度= 7
accuracy= 0.04146253469719291
所有模型的可信度  [0.04146252678335439, 0.04146253469719291]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-316.91785714 -316.91785714 -316.91785714]  max_stds [121.43088816 121.43088816 121.43088816]
所有模型的可信度所占权重  [0.4999999522831918, 0.5000000477168083]
三个函数的累计增益为[0.3284023607384896, 0.3284023607384896, 0.3284023607384896]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 1 2 0 2 2 2 2 2 1 0 2 0 0 0 1 0 2 2 1 2 1 2 1 2 1 1 2 2 2 2 2 0 0 0 2
 0 1 2 2 2 2 1 1 2 2 1 1 2 1 0 2 0 2 1 2 0 2 1 1 2 0 0 2 1 2 2 2 2 0 2 2 0
 1 1 0 2 2 0 1 0 1 0 2 1 1 1 0 1 1 0 1 2 0 0 2 1 1 2]
每个概率被转中的次数, count: [27 30 43]
choose which one? [2]
ys [-4.11188925 -4.11188925 -4.11188925 ... -4.11188925 -4.11188925
 -4.11188925]
2 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9266]
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 13 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:288.113
训练集长度= 8
accuracy= 0.041462536526568936
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-313.31725 -313.31725 -313.31725]  max_stds [113.98696692 113.98696692 113.98696692]
所有模型的可信度所占权重  [0.33333328601604084, 0.33333334963844896, 0.33333336434551025]
三个函数的累计增益为[0.360608138285553, 0.360608138285553, 0.360608138285553]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 0 0 1 2 1 1 1 2 2 2 0 2 1 0 1 1 0 1 0 1 0 0 1 2 2 0 1 1 1 2 1 1 0 1
 1 2 1 1 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 1 0 1 2 1 1 2 1 2 2 0 2 2 1 1 2 1 0
 0 0 2 2 1 1 0 0 1 2 0 2 0 2 1 0 2 2 1 1 0 1 0 0 2 1]
每个概率被转中的次数, count: [35 41 24]
choose which one? [1]
ys [0.21525979 0.21525979 0.21525979 ... 0.21525979 0.21525979 0.21525979]
3 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2596]
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 14 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:228.862
训练集长度= 9
accuracy= 0.041462541294296267
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-303.93333333 -303.93333333 -303.93333333]  max_stds [110.69698241 110.69698241 110.69698241]
所有模型的可信度所占权重  [0.24999995151044932, 0.2499999992272529, 0.2500000102575483, 0.25000003900474954]
三个函数的累计增益为[0.3964512877653148, 0.3964512877653148, 0.3964512877653148]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 0 0 0 2 2 0 2 1 1 0 1 0 2 2 2 2 1 1 0 0 1 0 0 1 2 0 2 2 1 1 2 0 2 2
 0 2 2 2 1 0 2 2 0 0 1 1 0 0 2 0 1 0 2 2 0 2 2 0 0 0 0 0 0 0 1 2 0 0 1 0 0
 1 0 0 2 1 1 1 2 1 0 1 2 1 2 1 1 2 1 0 2 0 1 1 0 0 0]
每个概率被转中的次数, count: [41 28 31]
choose which one? [0]
ys [15.1066714 15.1066714 15.1066714 ... 15.1066714 15.1066714 15.1066714]
4 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3359]
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 15 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:325.737
训练集长度= 10
accuracy= 0.04146254018650786
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-306.1137 -306.1137 -306.1137]  max_stds [105.21989219 105.21989219 105.21989219]
所有模型的可信度所占权重  [0.19999995603631335, 0.19999999420975523, 0.2000000030339913, 0.2000000260317517, 0.20000002068818848]
三个函数的累计增益为[0.3930593282046626, 0.3930593282046626, 0.3930593282046626]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 0 1 2 1 0 1 2 0 2 0 2 0 0 0 2 0 1 1 2 2 1 0 1 0 0 2 0 0 2 0 0 1 1 0
 1 2 1 2 1 1 1 1 0 0 1 1 1 2 1 0 1 1 1 1 2 1 2 1 0 0 1 2 2 2 1 1 2 0 2 0 0
 2 1 1 1 2 2 2 1 1 1 2 2 2 0 0 1 1 2 0 1 0 0 2 0 0 0]
每个概率被转中的次数, count: [33 37 30]
choose which one? [1]
ys [0.21607334 0.21607334 0.21607334 ... 0.21607334 0.21607334 0.21607334]
5 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2879]
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 16 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:304.293
训练集长度= 11
accuracy= 0.04146254027060342
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-305.94818182 -305.94818182 -305.94818182]  max_stds [100.32459624 100.32459624 100.32459624]
所有模型的可信度所占权重  [0.16666662710056257, 0.16666665891176358, 0.16666666626529353, 0.16666668543009353, 0.16666668097712425, 0.1666666813151626]
三个函数的累计增益为[0.3889812373268301, 0.3889812373268301, 0.3889812373268301]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 1 1 2 2 0 2 1 1 2 2 1 2 2 2 2 1 2 1 0 0 0 1 0 1 0 1 0 0 2 1 0 1 0 1 2
 0 1 2 0 0 2 1 0 0 0 2 1 1 0 1 1 1 1 1 1 1 1 1 2 0 2 2 0 2 1 2 2 0 1 2 1 1
 0 1 2 1 0 0 2 1 1 1 1 2 2 2 1 0 1 0 1 1 0 0 1 1 1 2]
每个概率被转中的次数, count: [29 43 28]
choose which one? [1]
ys [0.20548069 0.20548069 0.20548069 ... 0.20548069 0.20548069 0.20548069]
6 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1940]
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 17 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:232.341
训练集长度= 12
accuracy= 0.04146254336934876
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876]
三个采集函数选出的max_idx [7285, 7285, 7285]
max_means [-298.66945384 -298.66945384 -298.66945384]  max_stds [98.16969202 98.16969202 98.16969202]
所有模型的可信度所占权重  ================= config18 =================
2022年 07月 15日 星期五 13:34:48 CST
cmd

end before line
finish
================= config19 =================
2022年 07月 15日 星期五 13:41:06 CST
cmd

end before line
finish
================= config20 =================
2022年 07月 15日 星期五 13:47:23 CST
cmd

end before line
finish
================= config21 =================
2022年 07月 15日 星期五 13:53:40 CST
cmd

end before line
finish
================= config22 =================
2022年 07月 15日 星期五 13:59:58 CST
cmd

end before line
finish
[0.14285710562442175, 0.14285713289116483, 0.14285713919419035, 0.1428571556211614, 0.14285715180433067, 0.14285715209407784, 0.14285716277065313]
三个函数的累计增益为[0.4084469900695751, 0.4084469900695751, 0.4084469900695751]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 2 0 1 1 0 1 1 2 0 0 0 1 1 2 1 0 0 0 1 0 2 1 0 0 2 2 1 2 0 1 1 1 2 2 1
 2 2 2 0 2 2 2 2 2 2 1 1 1 2 2 1 0 0 0 0 0 1 2 2 1 1 2 2 0 0 2 0 1 2 1 2 2
 1 2 1 2 1 2 0 0 2 2 1 1 1 1 1 2 2 2 1 1 2 1 2 0 0 1]
每个概率被转中的次数, count: [26 36 38]
choose which one? [2]
ys [-46.83740585 -46.87719413 -46.87925594 ... -46.8859114  -46.89501473
 -46.88312487]
7  ys.argmax() 7285
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 18 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:233.244
训练集长度= 13
accuracy= 0.04146254577591525
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525]
三个采集函数选出的max_idx [9405, 9405, 9405]
max_means [-288.73798596 -288.73798596 -288.73798596]  max_stds [95.73480758 95.73480758 95.73480758]
所有模型的可信度所占权重  [0.12499996433642428, 0.1249999881948239, 0.12499999370997109, 0.1250000080835704, 0.1250000047438436, 0.12500000499737235, 0.12500001433937552, 0.12500002159461895]
三个函数的累计增益为[0.43870251668407795, 0.43870251668407795, 0.43870251668407795]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 2 1 1 2 0 0 2 2 2 2 2 1 2 1 2 1 0 2 0 0 0 0 0 0 1 0 1 1 2 2 1 0 0 1
 2 1 2 1 0 0 0 0 2 2 0 2 2 2 0 1 2 2 1 0 1 1 2 1 2 0 1 1 1 2 0 1 1 2 2 0 2
 2 0 1 0 2 1 2 1 2 1 1 0 1 0 0 1 1 2 2 1 1 2 2 0 2 0]
每个概率被转中的次数, count: [30 33 37]
choose which one? [2]
ys [-47.4572758  -47.29671177 -47.42098446 ... -47.50333894 -47.26985703
 -47.8746112 ]
8  ys.argmax() 9405
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 19 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:226.216
训练集长度= 14
accuracy= 0.041462547303171435
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435]
三个采集函数选出的max_idx [5121, 5121, 5121]
max_means [-280.56439607 -280.56439607 -280.56439607]  max_stds [93.59185835 93.59185835 93.59185835]
所有模型的可信度所占权重  [0.11111107682260564, 0.11111109803007148, 0.11111110293242442, 0.11111111570895683, 0.11111111274031087, 0.11111111296566975, 0.11111112126967237, 0.11111112771877751, 0.11111113181151117]
三个函数的累计增益为[0.4682156694325898, 0.4682156694325898, 0.4682156694325898]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 0 2 0 0 1 0 0 1 2 1 1 1 2 0 1 0 2 0 1 0 2 1 0 1 1 2 0 1 0 1 2 2 2 0
 1 2 0 0 1 2 2 1 0 0 0 1 1 1 2 2 0 2 2 0 1 0 2 2 0 1 0 0 0 0 0 2 0 0 2 1 2
 2 2 0 0 0 0 1 2 2 1 1 0 1 1 1 1 0 0 2 2 1 1 2 1 1 1]
每个概率被转中的次数, count: [37 34 29]
choose which one? [0]
ys [13.54801099 13.3428094  13.35870346 ... 13.16613007 13.41575431
 13.40141093]
9  ys.argmax() 5121
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 20 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:226.389
训练集长度= 15
accuracy= 0.04146254889258334
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334]
三个采集函数选出的max_idx [7217, 7217, 7217]
max_means [-271.90830113 -271.90830113 -271.90830113]  max_stds [91.05196564 91.05196564 91.05196564]
所有模型的可信度所占权重  [0.09999996689397297, 0.09999998598069179, 0.09999999039280934, 0.10000000189168826, 0.09999999921990695, 0.09999999942272994, 0.10000000689633214, 0.10000001270052662, 0.10000001638398684, 0.1000000202173552]
三个函数的累计增益为[0.502018261861819, 0.502018261861819, 0.502018261861819]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 2 1 2 0 0 0 0 1 0 0 0 1 0 0 0 0 2 2 2 1 0 1 2 2 2 0 0 1 2 2 1 1 0 1
 0 2 0 0 0 0 2 1 0 1 2 2 2 0 1 0 0 0 2 0 2 0 1 1 2 0 1 1 1 0 0 1 1 1 0 2 1
 1 1 1 0 2 2 0 2 1 1 2 1 0 0 0 2 2 1 2 0 1 2 1 2 2 0]
每个概率被转中的次数, count: [39 31 30]
choose which one? [0]
ys [13.53690582 13.98348325 13.46687161 ... 14.00645171 14.38117168
 12.81484978]
10  ys.argmax() 7217
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 21 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:233.926
训练集长度= 16
accuracy= 0.04146254960755321
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321]
三个采集函数选出的max_idx [9727, 9727, 5179]
max_means [-263.05206256 -263.05206256 -265.89905174]  max_stds [87.41825858 87.41825858 88.73966348]
所有模型的可信度所占权重  [0.09090905899933717, 0.0909090763508994, 0.09090908036191526, 0.09090909081544135, 0.09090908838654929, 0.09090908857093383, 0.0909090953651175, 0.09090910064165784, 0.09090910399025798, 0.09090910747513822, 0.09090910904275223]
三个函数的累计增益为[0.5384201848982216, 0.5384201848982216, 0.5293499886758194]
probability [0.33521567481599324, 0.33521567481599324, 0.32956865036801347]
probabilityTotal [0.33521567 0.67043135 1.        ]
每一轮选择的下标，result: [1 1 0 2 2 1 2 1 0 1 0 0 0 2 0 1 2 2 2 0 0 2 2 0 0 2 1 0 2 0 1 1 1 0 1 0 2
 0 1 0 1 0 1 2 2 0 0 2 2 0 0 0 1 1 2 2 2 0 2 2 0 0 2 0 0 1 2 0 2 0 0 0 0 2
 1 0 0 1 0 0 0 1 1 2 1 0 2 0 1 2 2 1 2 1 0 2 2 0 0 0]
每个概率被转中的次数, count: [43 25 32]
choose which one? [0]
ys [13.98610759 14.2678669  14.44877478 ... 14.58980558 14.09924028
 14.33485896]
11  ys.argmax() 9727
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 22 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:224.763
训练集长度= 17
accuracy= 0.04146254805176197
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197]
三个采集函数选出的max_idx [6634, 6634, 1874]
max_means [-256.33812565 -256.33812565 -258.4870094 ]  max_stds [84.63410267 84.63410267 86.04454096]
所有模型的可信度所占权重  ================= config23 =================
2022年 07月 15日 星期五 14:06:11 CST
cmd

end before line
finish
================= config24 =================
2022年 07月 15日 星期五 14:12:36 CST
cmd

end before line
finish
================= config25 =================
2022年 07月 15日 星期五 14:19:04 CST
cmd

end before line
finish
================= config26 =================
2022年 07月 15日 星期五 14:25:30 CST
cmd

end before line
finish
[0.08333330295809101, 0.0833333188636895, 0.083333322540454, 0.08333333212285278, 0.08333332989636842, 0.08333333006538758, 0.0833333362933892, 0.08333334113021779, 0.08333334419976786, 0.08333334739424138, 0.08333334883122087, 0.08333334570431972]
三个函数的累计增益为[0.5712946856920359, 0.5712946856920359, 0.5636806134850538]
probability [0.3348208025448302, 0.3348208025448302, 0.33035839491033964]
probabilityTotal [0.3348208  0.66964161 1.        ]
每一轮选择的下标，result: [2 0 1 0 1 2 2 1 0 2 1 1 2 0 2 1 2 2 0 2 2 0 1 2 0 2 1 0 2 1 1 1 0 1 2 1 2
 1 0 0 0 0 2 1 1 2 2 2 1 1 2 1 1 0 1 0 1 1 1 0 2 2 2 0 0 0 0 0 2 1 2 2 1 2
 0 2 1 1 0 1 1 0 1 2 0 2 1 0 0 1 1 0 0 2 1 2 2 2 0 0]
每个概率被转中的次数, count: [31 35 34]
choose which one? [1]
ys [0.27511014 0.26593733 0.28830124 ... 0.27652023 0.27442392 0.26677378]
12  ys.argmax() 6634
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 23 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:236.168
训练集长度= 18
accuracy= 0.04146254157830297
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297]
三个采集函数选出的max_idx [4881, 4881, 6383]
max_means [-248.20132666 -248.20132666 -251.97268148]  max_stds [80.41265065 80.41265065 83.49349844]
所有模型的可信度所占权重  [0.0769230489298121, 0.07692306361190301, 0.07692306700583948, 0.07692307585113066, 0.07692307379591433, 0.07692307395193201, 0.07692307970085659, 0.07692308416562144, 0.07692308699905227, 0.07692308994779708, 0.07692309127423969, 0.07692308838786939, 0.07692307637803202]
三个函数的累计增益为[0.6113469030131773, 0.6113469030131773, 0.5973234895519256]
probability [0.33590169966980016, 0.33590169966980016, 0.3281966006603998]
probabilityTotal [0.3359017 0.6718034 1.       ]
每一轮选择的下标，result: [0 0 2 2 1 1 1 1 2 1 2 2 2 0 0 2 2 1 0 0 2 2 2 2 1 1 2 0 0 0 0 1 0 2 0 1 2
 2 2 0 1 0 2 2 1 0 1 1 0 1 1 2 0 0 0 0 1 1 2 2 2 1 0 1 0 1 1 2 2 1 0 1 0 2
 1 0 2 2 1 2 1 0 1 1 1 0 1 1 2 0 0 1 1 1 2 1 1 0 1 1]
每个概率被转中的次数, count: [30 39 31]
choose which one? [1]
ys [0.23761378 0.29039566 0.27981959 ... 0.29960768 0.25998831 0.25429712]
13  ys.argmax() 4881
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 24 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:238.271
训练集长度= 19
accuracy= 0.04146253841757312
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312]
三个采集函数选出的max_idx [5882, 5882, 4748]
max_means [-235.61951544 -235.61951544 -246.57834644]  max_stds [76.10394645 76.10394645 80.53397729]
所有模型的可信度所占权重  [0.07142854585990983, 0.07142855949328006, 0.0714285626447925, 0.07142857085827722, 0.07142856894986205, 0.07142856909473562, 0.07142857443302275, 0.07142857857887586, 0.07142858120991878, 0.07142858394803897, 0.07142858517973569, 0.07142858249953468, 0.07142857134754277, 0.07142856590247335]
三个函数的累计增益为[0.6792125655413273, 0.6792125655413273, 0.6276630647860046]
probability [0.3419850976176105, 0.3419850976176105, 0.31602980476477904]
probabilityTotal [0.3419851 0.6839702 1.       ]
每一轮选择的下标，result: [2 2 1 1 0 1 1 2 1 1 0 0 1 1 0 1 2 1 0 0 1 1 1 0 2 0 0 0 0 1 1 1 1 1 0 1 1
 1 0 2 2 1 0 1 0 1 0 1 0 1 2 2 1 0 2 1 1 2 1 2 1 0 0 2 1 1 1 0 0 2 1 1 1 0
 0 0 0 0 0 0 2 2 2 2 2 1 1 1 1 2 1 2 1 0 0 2 2 0 1 1]
每个概率被转中的次数, count: [32 45 23]
choose which one? [1]
ys [0.27295012 0.25145034 0.27502186 ... 0.29434006 0.16834499 0.26756749]
14  ys.argmax() 5882
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 25 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:237.275
训练集长度= 20
accuracy= 0.04146253719294017
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017]
三个采集函数选出的max_idx [7087, 7087, 7087]
max_means [-235.78306623 -235.78306623 -235.78306623]  max_stds [75.24937053 75.24937053 75.24937053]
所有模型的可信度所占权重  [0.06666664327769907, 0.06666665600217803, 0.06666665894358967, 0.06666666660950879, 0.06666666482832129, 0.06666666496353661, 0.06666666994593798, 0.0666666738154009, 0.06666667627104099, 0.06666667882661984, 0.06666667997620344, 0.0666666774746825, 0.06666666706615663, 0.06666666198409181, 0.06666666001503264]
三个函数的累计增益为[0.6905660754017107, 0.6905660754017107, 0.6853511308927589]
probability [0.33417452805855297, 0.33417452805855297, 0.33165094388289423]
probabilityTotal [0.33417453 0.66834906 1.        ]
每一轮选择的下标，result: [2 0 1 1 0 1 1 2 0 1 2 2 0 2 0 2 0 1 1 2 0 2 2 2 0 2 2 0 2 0 2 0 1 2 0 1 1
 1 0 2 2 2 0 1 2 2 1 0 1 2 2 1 2 2 0 2 2 2 2 0 1 1 2 0 2 1 2 0 0 0 0 2 2 1
 1 1 0 0 2 2 0 2 2 0 0 2 1 1 0 0 1 2 1 0 2 1 2 2 0 1]
每个概率被转中的次数, count: [31 27 42]
choose which one? [2]
ys [-75.17662264 -53.88610126 -60.0312556  ... -71.15557964 -61.9170372
 -66.27379772]
15  ys.argmax() 7087
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 26 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:226.816
训练集长度= 21
accuracy= 0.041462534091629005
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005]
三个采集函数选出的max_idx [8694, 8694, 8694]
max_means [-240.6402592 -240.6402592 -240.6402592]  max_stds [74.95119865 74.95119865 74.95119865]
所有模型的可信度所占权重  [0.06249997875476613, 0.062499990683965286, 0.062499993441538726, 0.06250000062833799, 0.06249999895847468, 0.06249999908523905, 0.06250000375624037, 0.06250000738386191, 0.06250000968602452, 0.06250001208187972, 0.06250001315961437, 0.06250001081443844, 0.06250000105644535, 0.062499996292009516, 0.06249999444601654, 0.06249998977114752]
三个函数的累计增益为[0.6761665623401818, 0.6761665623401818, 0.6712775518096968]
probability [0.33413866125325464, 0.33413866125325464, 0.33172267749349066]
probabilityTotal [0.33413866 0.66827732 1.        ]
每一轮选择的下标，result: [1 1 1 2 2 0 0 1 0 1 0 2 1 2 0 0 2 0 1 1 1 1 1 2 2 0 2 1 0 0 1 1 2 0 1 1 1
 0 0 2 2 2 2 2 1 0 0 1 2 1 0 2 2 1 0 2 1 0 1 2 2 0 2 0 2 1 0 0 1 1 1 0 0 1
 0 1 0 0 2 1 1 2 1 0 0 0 1 0 0 1 0 0 2 1 2 2 1 0 1 2]
每个概率被转中的次数, count: [35 37 28]
choose which one? [1]
ys [0.33417507 0.28583638 0.21660212 ... 0.17523266 0.18832698 0.28458732]
16  ys.argmax() 8694
================= config27 =================
2022年 07月 15日 星期五 14:31:44 CST
cmd

end before line
finish
================= config28 =================
2022年 07月 15日 星期五 14:38:07 CST
cmd

end before line
finish
================= config29 =================
2022年 07月 15日 星期五 14:47:05 CST
cmd

end before line
finish
================= config30 =================
2022年 07月 15日 星期五 14:53:23 CST
cmd

end before line
finish
================= config31 =================
2022年 07月 15日 星期五 14:59:42 CST
cmd

end before line
finish
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 27 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:227.724
训练集长度= 22
accuracy= 0.04146253217589975
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975]
三个采集函数选出的max_idx [6628, 6628, 5098]
max_means [-229.19935654 -229.19935654 -241.38236897]  max_stds [66.07222654 66.07222654 75.8187355 ]
所有模型的可信度所占权重  [0.05882351014242842, 0.05882352136991011, 0.058823523965273385, 0.05882353072931983, 0.05882352915768376, 0.0588235292769914, 0.058823533673228005, 0.05882353708746007, 0.05882353925420138, 0.05882354150912395, 0.05882354252346245, 0.05882354031623803, 0.05882353113224441, 0.05882352664806946, 0.05882352491066428, 0.0588235205107875, 0.0588235177929136]
三个函数的累计增益为[0.7405924400757576, 0.7405924400757576, 0.6771678516399294]
probability [0.3431285485301848, 0.3431285485301848, 0.3137429029396305]
probabilityTotal [0.34312855 0.6862571  1.        ]
每一轮选择的下标，result: [0 0 0 1 0 2 1 1 0 0 0 2 0 1 0 2 2 2 0 0 2 0 1 1 0 2 1 2 0 2 0 2 2 1 1 1 0
 1 2 0 2 2 0 0 2 1 1 2 0 2 0 2 1 2 0 0 1 0 1 2 1 0 0 2 1 2 1 0 0 0 0 0 0 2
 0 1 0 0 1 1 2 0 2 1 2 2 2 0 1 1 0 0 0 1 1 0 2 0 0 2]
每个概率被转中的次数, count: [43 27 30]
choose which one? [0]
ys [ 8.64908814 10.77298976  7.2411567  ... 15.37834355  7.75085955
 15.76823504]
17  ys.argmax() 6628
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 28 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:382.558
训练集长度= 23
accuracy= 0.04146255394547728
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728]
三个采集函数选出的max_idx [7108, 7108, 7108]
max_means [-256.29204467 -256.29204467 -256.29204467]  max_stds [79.89183165 79.89183165 79.89183165]
所有模型的可信度所占权重  [0.0555555363458692, 0.05555554694960172, 0.0555555494007781, 0.05555555578904407, 0.055555554304721144, 0.05555555441740058, 0.05555555856940173, 0.055555561793954183, 0.05555556384032094, 0.055555565969969994, 0.05555556692795634, 0.05555556484335553, 0.05555555616958394, 0.0555555519345299, 0.055555550293647255, 0.05555554613820815, 0.0555555435713273, 0.055555572740329996]
三个函数的累计增益为[0.6263204666496562, 0.6263204666496562, 0.6187067248202726]
probability [0.33468952919149797, 0.33468952919149797, 0.330620941617004]
probabilityTotal [0.33468953 0.66937906 1.        ]
每一轮选择的下标，result: [1 2 0 2 1 1 1 2 1 0 0 0 2 0 1 0 0 0 1 2 1 1 1 1 0 0 2 0 2 0 2 2 1 0 2 1 2
 1 2 1 0 0 1 0 1 0 0 2 2 2 1 2 0 0 2 1 1 0 1 2 2 2 2 2 0 1 1 2 0 0 1 0 2 1
 1 1 2 0 2 1 0 1 0 2 1 0 2 0 0 2 0 1 2 0 1 0 1 0 2 1]
每个概率被转中的次数, count: [35 34 31]
choose which one? [0]
ys [11.4999858  13.95882204 13.32623789 ... 13.2151365  14.06463659
 14.35110678]
18  ys.argmax() 7108
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 29 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:226.987
训练集长度= 24
accuracy= 0.04146254923514511
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511]
三个采集函数选出的max_idx [359, 9129, 2382]
max_means [-252.1705157  -251.81178277 -253.37330644]  max_stds [77.77789297 76.81248488 78.65223649]
所有模型的可信度所占权重  [0.05263156020655379, 0.05263157025219502, 0.052631572574362094, 0.052631578626403476, 0.05263157722020282, 0.052631577326951756, 0.0526315812604265, 0.052631584315265635, 0.05263158625392885, 0.052631588271491093, 0.052631589179057095, 0.052631587204172145, 0.05263157898691493, 0.052631574974758503, 0.05263157342023813, 0.052631569483506384, 0.052631567051724545, 0.05263159468551629, 0.05263158870633098]
三个函数的累计增益为[0.6446658889039366, 0.6446774347867656, 0.6332917051002255]
probability [0.3353033099107439, 0.33530931514972906, 0.3293873749395269]
probabilityTotal [0.33530331 0.67061263 1.        ]
每一轮选择的下标，result: [1 1 0 1 0 1 1 1 2 0 2 0 0 0 2 0 1 0 2 0 2 0 0 0 1 1 2 0 0 1 2 1 0 2 2 1 0
 0 1 1 2 0 0 0 1 1 1 1 2 2 0 0 0 2 1 0 1 0 2 2 0 0 2 2 1 2 2 2 1 2 0 2 1 0
 0 0 2 0 1 2 0 2 1 1 2 2 1 0 0 0 1 2 1 0 1 0 2 0 1 1]
每个概率被转中的次数, count: [39 32 29]
choose which one? [0]
ys [14.27759046 13.65720497 13.80747905 ... 11.84231954 12.01314817
 15.18163287]
19  ys.argmax() 359
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 30 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:223.452
训练集长度= 25
accuracy= 0.04146254363157474
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474]
三个采集函数选出的max_idx [3980, 3980, 3980]
max_means [-243.65249406 -243.65249406 -243.65249406]  max_stds [75.05982966 75.05982966 75.05982966]
所有模型的可信度所占权重  [0.04999998207054487, 0.04999999161390401, 0.04999999381996272, 0.04999999956940203, 0.04999999823351141, 0.0499999983349229, 0.05000000207172389, 0.05000000497382106, 0.05000000681555112, 0.05000000873223524, 0.05000000959442294, 0.05000000771828224, 0.04999999991188791, 0.04999999610033931, 0.04999999462354496, 0.04999999088364981, 0.04999998857345707, 0.050000014825559165, 0.05000000914533313, 0.050000002387944234]
三个函数的累计增益为[0.685932627868844, 0.6859332051630129, 0.6788722020351331]
probability [0.3344808630549621, 0.33448114456052697, 0.33103799238451087]
probabilityTotal [0.33448086 0.66896201 1.        ]
每一轮选择的下标，result: [1 2 2 1 1 2 0 2 2 0 0 1 1 2 0 1 1 1 1 1 0 1 0 0 0 0 0 2 1 1 2 1 2 1 1 0 2
 1 1 0 1 2 1 2 1 2 0 1 0 1 0 0 1 1 0 2 1 2 0 2 0 2 0 0 2 1 2 0 2 0 1 0 1 0
 1 2 0 2 1 1 1 0 1 2 2 1 0 2 1 2 1 0 2 0 1 1 2 0 0 2]
每个概率被转中的次数, count: [32 39 29]
choose which one? [1]
ys [0.25015074 0.29262094 0.28760013 ... 0.30116277 0.27253433 0.29594476]
20  ys.argmax() 3980
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 31 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
================= config32 =================
2022年 07月 15日 星期五 15:06:17 CST
cmd

end before line
finish
================= config33 =================
2022年 07月 15日 星期五 15:12:49 CST
cmd

end before line
finish
================= config34 =================
2022年 07月 15日 星期五 15:19:06 CST
cmd

end before line
finish
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:234.131
训练集长度= 26
accuracy= 0.04146254028201294
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294]
三个采集函数选出的max_idx [1044, 4728, 1044]
max_means [-243.52193429 -242.6759037  -243.52193429]  max_stds [75.03324738 73.40770565 75.03324738]
所有模型的可信度所占权重  [0.04761903061826576, 0.04761903970717924, 0.047619041808187546, 0.04761904728384403, 0.047619046011567245, 0.04761904610814962, 0.047619049667007717, 0.04761905243090978, 0.04761905418493841, 0.047619056010351865, 0.047619056831483014, 0.04761905504468234, 0.04761904761002106, 0.047619043979974775, 0.04761904257350396, 0.047619039011699046, 0.04761903681151548, 0.047619061813517514, 0.047619056403778434, 0.04761904996816995, 0.04761904612125326]
三个函数的累计增益为[0.6914179779930663, 0.6935764716922457, 0.6846937629027665]
probability [0.33406866492633225, 0.3351115725904196, 0.3308197624832481]
probabilityTotal [0.33406866 0.66918024 1.        ]
每一轮选择的下标，result: [1 1 1 1 0 0 1 0 0 2 2 0 2 2 2 0 2 1 1 1 1 0 2 1 2 2 2 2 2 0 0 0 0 1 2 0 2
 1 2 1 2 0 1 0 1 2 0 2 2 2 2 1 2 2 2 0 2 0 1 1 0 2 0 2 0 1 1 0 1 0 1 1 0 2
 1 2 1 2 0 1 2 1 0 0 0 1 2 2 0 2 1 2 0 2 1 1 2 1 1 2]
每个概率被转中的次数, count: [29 33 38]
choose which one? [2]
ys [-70.8900915  -76.29835174 -85.35672546 ... -78.24209597 -71.01847762
 -75.58596611]
21  ys.argmax() 1044
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 32 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1117
runtime:223.652
训练集长度= 27
accuracy= 0.04146253732057357
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357]
三个采集函数选出的max_idx [6684, 6684, 409]
max_means [-236.08209258 -236.08209258 -237.43293116]  max_stds [69.5316865  69.5316865  70.79477533]
所有模型的可信度所占权重  [0.04545452943908446, 0.04545453811486555, 0.045454540120373484, 0.04545454534713652, 0.0454545441326905, 0.04545454422488276, 0.045454547621974595, 0.045454550260244767, 0.045454551934544826, 0.04545455367698495, 0.045454554460791954, 0.04545455275520949, 0.04545454565848732, 0.04545454219344312, 0.045454540850902794, 0.045454537450998096, 0.04545453535082286, 0.045454559216370365, 0.04545455405252849, 0.04545454790944764, 0.04545454423739079, 0.0454545409908247]
三个函数的累计增益为[0.7292390514885815, 0.7293376646507064, 0.7166137411363465]
probability [0.33525296557338397, 0.33529830098840246, 0.3294487334382137]
probabilityTotal [0.33525297 0.67055127 1.        ]
每一轮选择的下标，result: [1 1 2 2 1 1 2 2 1 2 0 2 0 0 1 2 0 0 0 2 2 2 2 2 1 1 1 1 2 0 1 1 2 1 2 0 1
 0 2 1 1 0 0 1 2 0 1 0 1 0 1 2 1 2 1 0 0 1 0 0 1 0 2 1 0 0 1 1 0 1 1 1 0 2
 0 1 2 2 0 2 2 2 1 2 2 1 1 2 1 0 2 2 0 2 2 0 0 1 1 1]
每个概率被转中的次数, count: [29 38 33]
choose which one? [1]
ys [0.25754137 0.26245078 0.30571118 ... 0.26011427 0.20852072 0.26999217]
22  ys.argmax() 6684
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 33 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:222.978
训练集长度= 28
accuracy= 0.04146253276630948
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948]
三个采集函数选出的max_idx [9407, 9407, 116]
max_means [-231.86130009 -231.86130009 -239.82320343]  max_stds [65.41543017 65.41543017 71.75499597]
所有模型的可信度所占权重  [0.04347824594370315, 0.04347825424227645, 0.043478256160588404, 0.043478261160100916, 0.04347825999845688, 0.04347826008664079, 0.043478263336033, 0.0434782658595958, 0.04347826746110022, 0.04347826912778209, 0.043478269877510536, 0.04347826824608382, 0.043478261457914724, 0.043478258143524594, 0.04347825685935557, 0.04347825360727278, 0.0434782515984095, 0.043478274426324716, 0.04347826948699766, 0.04347826361100722, 0.04347826009860498, 0.04347825699319392, 0.04347825221752226]
三个函数的累计增益为[0.7528041419634075, 0.7528984675975974, 0.707601895159238]
probability [0.34012678343984143, 0.3401694009983331, 0.3197038155618255]
probabilityTotal [0.34012678 0.68029618 1.        ]
每一轮选择的下标，result: [1 2 1 1 1 1 2 2 0 0 1 1 1 2 0 1 1 0 1 0 1 2 0 1 0 0 2 1 0 1 1 1 1 2 2 0 0
 1 1 0 1 0 1 2 0 2 2 0 0 0 2 1 1 1 0 0 2 2 0 2 0 2 0 0 2 1 0 1 2 2 2 0 1 0
 2 0 0 0 2 0 2 2 0 2 1 2 0 0 2 2 0 1 0 2 2 2 1 2 0 1]
每个概率被转中的次数, count: [36 32 32]
choose which one? [0]
ys [ 7.09524622 10.3233835  11.58688654 ...  9.54490553 11.25724664
  9.48000851]
23  ys.argmax() 9407
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 34 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:233.534
训练集长度= 29
accuracy= 0.04146252929982125
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125]
三个采集函数选出的max_idx [6109, 547, 6109]
max_means [-241.9580569 -236.9566392 -241.9580569]  max_stds [71.29419802 65.70230131 71.29419802]
所有模型的可信度所占权重  [0.04166665285334433, 0.04166666080614383, 0.04166666264452615, 0.041666667435725696, 0.04166666632248348, 0.04166666640699306, 0.041666669520993974, 0.041666671939408345, 0.04166667347418344, 0.041666675071420245, 0.04166667578991002, 0.041666674226459394, 0.041666667721130604, 0.041666664544840026, 0.041666663314178023, 0.041666660197598654, 0.041666658272437984, 0.04166668014919032, 0.0416666754156685, 0.04166666978451093, 0.04166666641845875, 0.04166666344243978, 0.04166665886575438, 0.04166665538220013]
三个函数的累计增益为[0.7076470414184997, 0.728461335440685, 0.6998883690051958]
probability [0.33129593609569563, 0.3410404706145263, 0.32766359328977807]
probabilityTotal [0.33129594 0.67233641 1.        ]
每一轮选择的下标，result: ================= config35 =================
2022年 07月 15日 星期五 15:25:28 CST
cmd

end before line
finish
================= config36 =================
2022年 07月 15日 星期五 15:31:51 CST
cmd

end before line
finish
================= config37 =================
2022年 07月 15日 星期五 15:38:11 CST
cmd

end before line
finish
================= config38 =================
2022年 07月 15日 星期五 15:44:42 CST
cmd

end before line
finish
[1 1 1 0 1 1 2 2 1 0 2 2 2 1 1 0 2 1 2 2 0 1 1 1 1 2 1 2 1 2 1 0 1 2 2 0 1
 0 1 1 2 0 1 2 0 1 0 1 0 2 0 2 0 1 1 1 2 2 2 0 2 2 0 2 1 2 0 0 1 2 0 1 1 0
 1 1 1 1 0 2 0 2 2 1 2 1 2 1 1 0 2 1 0 2 1 2 0 0 1 0]
每个概率被转中的次数, count: [26 41 33]
choose which one? [1]
ys [0.285446   0.25186094 0.26429568 ... 0.21519784 0.25316268 0.22195927]
24  ys.argmax() 547
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 35 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:222.98
训练集长度= 30
accuracy= 0.041462524987637965
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965]
三个采集函数选出的max_idx [9929, 9929, 8617]
max_means [-229.00055989 -229.00055989 -240.27513861]  max_stds [60.68361362 60.68361362 70.3267805 ]
所有模型的可信度所占权重  [0.039999987338936935, 0.039999994973624574, 0.03999999673847162, 0.040000001338023256, 0.04000000026931071, 0.040000000350439914, 0.04000000333988083, 0.04000000566155867, 0.04000000713494277, 0.040000008668290135, 0.04000000935804032, 0.0400000078571277, 0.04000000161201197, 0.03999999856277297, 0.039999997381337436, 0.039999994389421194, 0.03999999254126692, 0.04000001354294948, 0.04000000899876846, 0.04000000359285712, 0.04000000036144698, 0.03999999750446872, 0.03999999311085067, 0.03999998976663854, 0.0399999856065622]
三个函数的累计增益为[0.7763814105660164, 0.7772971457983735, 0.7113203074433547]
probability [0.34277342164349817, 0.34317771996213736, 0.3140488583943644]
probabilityTotal [0.34277342 0.68595114 1.        ]
每一轮选择的下标，result: [1 1 2 1 1 2 1 2 0 0 2 2 2 2 2 1 0 0 1 1 1 2 2 0 2 0 0 0 2 1 0 0 1 1 1 1 2
 0 0 1 0 2 1 0 1 2 1 1 1 1 1 1 1 0 2 1 2 2 0 2 2 0 1 1 1 2 2 2 2 1 2 0 1 1
 0 0 1 2 0 0 1 2 0 0 1 0 1 1 1 2 2 1 2 0 1 1 1 2 2 2]
每个概率被转中的次数, count: [26 41 33]
choose which one? [1]
ys [0.2161165  0.26116747 0.2121715  ... 0.16399961 0.16900471 0.26545888]
25  ys.argmax() 9929
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 36 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:228.171
训练集长度= 31
accuracy= 0.04146252158379491
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965, 0.04146252158379491]
三个采集函数选出的max_idx [9767, 9147, 9767]
max_means [-233.69802406 -232.23490371 -233.69802406]  max_stds [66.90497261 63.70756995 66.90497261]
所有模型的可信度所占权重  [0.03846152694118231, 0.03846153428222824, 0.038461535979196576, 0.03846154040184246, 0.03846153937423423, 0.03846153945224307, 0.038461542326705546, 0.038461544559088116, 0.038461545975803625, 0.03846154745017612, 0.03846154811339746, 0.038461546670212225, 0.03846154066529315, 0.038461537733332524, 0.038461536597336796, 0.038461533720494205, 0.03846153194342276, 0.038461552137348635, 0.03846154776794374, 0.038461542569951976, 0.03846153946282679, 0.03846153671573226, 0.03846153249109945, 0.03846152927551081, 0.038461525275437336, 0.03846152211795969]
三个函数的累计增益为[0.757820602557206, 0.7645860345564482, 0.7484428757537895]
probability [0.3337167867192978, 0.3366960382993373, 0.32958717498136497]
probabilityTotal [0.33371679 0.67041283 1.        ]
每一轮选择的下标，result: [1 2 2 1 1 0 1 0 0 0 2 2 1 2 0 2 1 2 0 2 2 2 0 1 2 1 0 0 1 0 0 1 1 2 1 1 2
 0 0 0 2 0 0 1 1 0 0 2 1 2 1 1 1 1 2 1 0 1 0 2 0 0 1 2 2 2 0 0 2 1 2 2 1 0
 2 2 1 1 1 0 0 0 0 1 1 2 0 1 1 2 2 0 0 2 2 0 1 2 0 2]
每个概率被转中的次数, count: [34 33 33]
choose which one? [0]
ys [ 6.57248143 10.95135924  8.5025414  ... 11.21925958  8.93340076
  8.95157582]
26  ys.argmax() 9767
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 37 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:235.994
训练集长度= 32
accuracy= 0.041462520776884934
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965, 0.04146252158379491, 0.041462520776884934]
三个采集函数选出的max_idx [3116, 3116, 6842]
max_means [-221.65085516 -221.65085516 -237.11991734]  max_stds [60.6013411  60.6013411  66.79715591]
所有模型的可信度所占权重  [0.03703702655295485, 0.037037033622110305, 0.03703703525622799, 0.03703703951507224, 0.03703703852552356, 0.03703703860064319, 0.037037041368644136, 0.037037043518345907, 0.03703704488259049, 0.037037046302356616, 0.03703704694101422, 0.03703704555128026, 0.0370370397687655, 0.037037036945395965, 0.03703703585147414, 0.037037033081181225, 0.03703703136992721, 0.037037050815930235, 0.03703704660835508, 0.037037041602881446, 0.03703703861083492, 0.03703703596548459, 0.0370370318973196, 0.03703702880082677, 0.03703702494890411, 0.03703702190837003, 0.03703702118758554]
三个函数的累计增益为[0.8344605460744148, 0.8355264089038323, 0.7328591070259005]
probability [0.34728006894391483, 0.3477236524286299, 0.30499627862745515]
probabilityTotal [0.34728007 0.69500372 1.        ]
每一轮选择的下标，result: [0 0 0 0 2 1 2 1 0 2 0 0 0 1 1 2 0 1 0 1 0 1 0 2 1 2 0 1 0 0 2 2 1 1 0 0 1
 2 1 1 0 1 0 1 0 2 1 2 1 0 2 1 1 0 1 1 0 1 0 2 2 2 0 1 1 0 1 1 0 0 2 2 0 0
 0 2 0 1 2 2 1 2 0 2 0 2 2 2 0 0 0 0 2 0 2 1 0 1 1 2]
每个概率被转中的次数, count: [40 32 28]
choose which one? [0]
ys [10.90647581  8.49956608  8.93201825 ... 15.3011906   3.92944403
  6.69072253]
27  ys.argmax() 3116
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 38 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:244.652
训练集长度= 33
accuracy= 0.041462521402643615
所有模型的可信度  ================= config39 =================
2022年 07月 15日 星期五 15:51:20 CST
cmd

end before line
finish
================= config40 =================
2022年 07月 15日 星期五 15:58:02 CST
cmd

end before line
finish
================= config41 =================
2022年 07月 15日 星期五 16:04:40 CST
cmd

end before line
finish
[0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965, 0.04146252158379491, 0.041462520776884934, 0.041462521402643615]
三个采集函数选出的max_idx [3048, 3048, 3048]
max_means [-225.57636276 -225.57636276 -225.57636276]  max_stds [62.61069016 62.61069016 62.61069016]
所有模型的可信度所占权重  [0.035714276131220406, 0.03571428294790613, 0.035714284523662494, 0.035714288630405225, 0.035714287676197554, 0.03571428774863434, 0.03571429041777815, 0.03571429249070488, 0.03571429380622647, 0.03571429517528668, 0.035714295791135095, 0.035714294451034474, 0.03571428887503802, 0.035714286152503064, 0.03571428509764985, 0.035714282426295936, 0.03571428077615812, 0.0357142995276613, 0.03571429547035663, 0.03571429064364984, 0.035714287758462075, 0.03571428520758851, 0.035714281284715065, 0.03571427829881123, 0.03571427458445717, 0.03571427165251355, 0.03571427095747136, 0.035714271496476574]
三个函数的累计增益为[0.815709213678825, 0.8167370099937747, 0.8036952171446865]
probability [0.3348365575215401, 0.335258452694673, 0.3299049897837868]
probabilityTotal [0.33483656 0.67009501 1.        ]
每一轮选择的下标，result: [1 0 0 1 0 1 0 0 0 0 2 0 0 0 2 1 0 2 2 1 0 2 0 2 1 1 1 1 0 2 2 0 0 0 2 0 2
 1 2 1 1 0 1 0 0 1 0 0 1 1 2 0 0 2 2 2 0 2 0 1 1 0 0 0 2 0 0 1 0 0 2 0 2 1
 2 2 0 0 2 0 1 2 0 1 0 0 2 0 0 0 1 1 2 0 1 2 0 1 2 2]
每个概率被转中的次数, count: [46 26 28]
choose which one? [0]
ys [ 4.40047024  9.04896016  9.68751968 ...  8.48144052  8.54030105
 12.01459253]
28  ys.argmax() 3048
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 39 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:246.87
训练集长度= 34
accuracy= 0.04146252359347734
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965, 0.04146252158379491, 0.041462520776884934, 0.041462521402643615, 0.04146252359347734]
三个采集函数选出的max_idx [9161, 4167, 1757]
max_means [-232.86013095 -231.96402251 -246.12931116]  max_stds [60.65163954 58.07740877 66.48036158]
所有模型的可信度所占权重  [0.034482749778609594, 0.03448275636023726, 0.034482757881657215, 0.034482761846788175, 0.034482760925484204, 0.034482760995423176, 0.034482763572527574, 0.034482765573974096, 0.03448276684413289, 0.03448276816598414, 0.03448276876059641, 0.034482767466706137, 0.03448276208298536, 0.03448275945433089, 0.03448275843585192, 0.034482755856613624, 0.03448275426337709, 0.03448277236827693, 0.03448276845087927, 0.03448276379061059, 0.03448276100491202, 0.034482758541999586, 0.03448275475439759, 0.03448275187145592, 0.034482748285182996, 0.03448274545434085, 0.03448274478326562, 0.034482745303684455, 0.03448274712571454]
三个函数的累计增益为[0.7727598017040815, 0.7769855070273488, 0.6897032415550752]
probability [0.3450670039305962, 0.34695394405374685, 0.30797905201565695]
probabilityTotal [0.345067   0.69202095 1.        ]
每一轮选择的下标，result: [1 1 2 0 0 1 2 1 2 2 1 2 1 0 0 1 0 0 0 0 1 0 1 2 0 2 1 2 1 0 0 2 1 1 1 0 1
 0 1 0 1 0 1 1 0 0 2 2 2 2 2 2 0 1 2 0 0 0 0 1 1 2 1 1 2 1 2 2 0 0 2 2 0 2
 0 1 1 1 0 0 0 0 0 2 0 0 0 0 0 1 1 2 2 1 1 2 2 1 0 0]
每个概率被转中的次数, count: [39 33 28]
choose which one? [0]
ys [ 6.92227768  8.26978136  5.57653094 ...  8.5936656  11.0972303
 11.4790997 ]
29  ys.argmax() 9161
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 40 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:236.844
训练集长度= 35
accuracy= 0.0414625228994856
所有模型的可信度  [0.04146252678335439, 0.04146253469719291, 0.041462536526568936, 0.041462541294296267, 0.04146254018650786, 0.04146254027060342, 0.04146254336934876, 0.04146254577591525, 0.041462547303171435, 0.04146254889258334, 0.04146254960755321, 0.04146254805176197, 0.04146254157830297, 0.04146253841757312, 0.04146253719294017, 0.041462534091629005, 0.04146253217589975, 0.04146255394547728, 0.04146254923514511, 0.04146254363157474, 0.04146254028201294, 0.04146253732057357, 0.04146253276630948, 0.04146252929982125, 0.041462524987637965, 0.04146252158379491, 0.041462520776884934, 0.041462521402643615, 0.04146252359347734, 0.0414625228994856]
三个采集函数选出的max_idx [2570, 2570, 5806]
max_means [-225.22772156 -225.22772156 -245.71940432]  max_stds [57.43805349 57.43805349 65.53235103]
所有模型的可信度所占权重  [0.033333325174980374, 0.03333333153722053, 0.033333333007926506, 0.03333333684088648, 0.03333333595029263, 0.0333333360179003, 0.033333338509101244, 0.03333334044383291, 0.03333334167165309, 0.03333334294944265, 0.03333334352423452, 0.033333342273473905, 0.03333333706921043, 0.033333334528177744, 0.03333333354364806, 0.03333333105038434, 0.03333332951025567, 0.03333334701165906, 0.03333334322484128, 0.03333333871991483, 0.03333333602707285, 0.03333333364625747, 0.03333332998490884, 0.033333327198065185, 0.03333332373133465, 0.03333332099485388, 0.03333332034614781, 0.03333332084921936, 0.03333332261051513, 0.03333332205258839]
三个函数的累计增益为[0.8251127564249847, 0.8261798113133698, 0.6914255297432029]
probability [0.3522031768619486, 0.35265865415114195, 0.2951381689869094]
probabilityTotal [0.35220318 0.70486183 1.        ]
每一轮选择的下标，result: [1 2 1 0 2 0 1 1 0 0 1 1 0 0 2 0 2 1 1 1 2 1 1 2 2 0 1 2 1 0 2 0 0 1 0 0 1
 1 1 0 2 2 0 2 1 2 1 0 0 0 1 1 0 1 2 2 1 2 1 1 0 2 1 1 2 1 0 1 1 1 1 2 1 1
 2 2 1 0 0 1 1 0 1 1 2 0 1 0 2 2 2 0 0 1 1 2 1 0 0 0]
每个概率被转中的次数, count: [31 43 26]
choose which one? [1]
ys [0.24653611 0.21899736 0.20581854 ... 0.18957165 0.1814242  0.17311464]
30  ys.argmax() 2570
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 41 /usr/local/home/auto_tool/yyq/BO-combineAC2/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 1114
runtime:254.962
{'maxIndex': 28, 'target': -222.978, 'params': {'spark.broadcast.blockSize': 23.657869702008576, 'spark.broadcast.checksum': 0.07099661581451822, 'spark.broadcast.compress': 0.21784044907804323, 'spark.default.parallelism': 426.00793543200064, 'spark.executor.cores': 6.0107034407593165, 'spark.executor.instances': 8.35405533370192, 'spark.executor.memory': 9.45091328427093, 'spark.executor.memoryOverhead': 861.5269604378586, 'spark.kryoserializer.buffer': 90.86979231919095, 'spark.kryoserializer.buffer.max': 100.31759588159316, 'spark.locality.wait': 7.905976524394086, 'spark.maxRemoteBlockSizeFetchToMem': 1943530245.5415447, 'spark.memory.fraction': 0.8991895226153492, 'spark.memory.offHeap.enabled': 0.6149728915157393, 'spark.memory.offHeap.size': 265.5906971820822, 'spark.memory.storageFraction': 0.6463914362731509, 'spark.rdd.compress': 0.36441042221892406, 'spark.reducer.maxBlocksInFlightPerAddress': 1696825447.1037521, 'spark.reducer.maxReqsInFlight': 1704210264.409903, 'spark.reducer.maxSizeInFlight': 47.866106110922814, 'spark.scheduler.mode': 0.9331573855440038, 'spark.scheduler.revive.interval': 856.6157541965135, 'spark.shuffle.compress': 0.9816026753343818, 'spark.shuffle.file.buffer': 42.6636164564335, 'spark.shuffle.io.numConnectionsPerPeer': 2.190960617366966, 'spark.shuffle.sort.bypassMergeThreshold': 270.17803251515016, 'spark.storage.memoryMapThreshold': 9.944610640494613}}
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/yyq/BO-combineAC2/output.txt" 的文件状态(stat): 没有那个文件或目录
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/config/terasort-20G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 11月 11日 星期五 15:12:01 CST
cmd

end before line
finish
================= config2 =================
2022年 11月 11日 星期五 15:47:20 CST
cmd

end before line
finish
================= config3 =================
2022年 11月 11日 星期五 16:45:05 CST
cmd

end before line
finish
benchmark = terasort-20G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：terasort  默认配置执行结果为 2234.476 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 4468
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 733
生成测试集 - 配置成功 target -146.771  conf {'spark.broadcast.blockSize': 27.85536429155959, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 4.4402676724513395, 'spark.executor.instances': 8.554031568612787, 'spark.executor.memory': 9.117561268266025, 'spark.executor.memoryOverhead': 857.7637567760185, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 4.772750629629654, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxReqsInFlight': 1224481150.5130224, 'spark.reducer.maxSizeInFlight': 33.508871476074184, 'spark.scheduler.mode': 0.8007445686755367, 'spark.scheduler.revive.interval': 984.1307878596988, 'spark.shuffle.compress': 0.31342417815924284, 'spark.shuffle.file.buffer': 38.15432370141805, 'spark.shuffle.io.numConnectionsPerPeer': 4.505556609184153, 'spark.shuffle.sort.bypassMergeThreshold': 457.8426654015389, 'spark.storage.memoryMapThreshold': 1.7653979023280013}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 2 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 4.421396560438707, 'spark.broadcast.checksum': 0.1698304195645689, 'spark.broadcast.compress': 0.8781425034294131, 'spark.default.parallelism': 229.50405014991503, 'spark.executor.cores': 5.263322875015156, 'spark.executor.instances': 13.747337180903012, 'spark.executor.memory': 11.198991709838102, 'spark.executor.memoryOverhead': 1332.5635232260988, 'spark.kryoserializer.buffer': 62.28950057658204, 'spark.kryoserializer.buffer.max': 97.90408905743203, 'spark.locality.wait': 8.511631047076357, 'spark.maxRemoteBlockSizeFetchToMem': 1093378450.5915713, 'spark.memory.fraction': 0.8000577259779871, 'spark.memory.offHeap.enabled': 0.9888610889064947, 'spark.memory.offHeap.size': 766.1216300849555, 'spark.memory.storageFraction': 0.6121775968257621, 'spark.rdd.compress': 0.7892793284514885, 'spark.reducer.maxBlocksInFlightPerAddress': 1184579903.5869133, 'spark.reducer.maxReqsInFlight': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 67.61258414846858, 'spark.scheduler.mode': 0.2936141483736795, 'spark.scheduler.revive.interval': 643.8876692931744, 'spark.shuffle.compress': 0.13002857211827767, 'spark.shuffle.file.buffer': 16.619742651849506, 'spark.shuffle.io.numConnectionsPerPeer': 3.715342131759564, 'spark.shuffle.sort.bypassMergeThreshold': 184.6512464000236, 'spark.storage.memoryMapThreshold': 3.389919934350036}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 3 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
生成测试集 - 配置失败 target -1467  conf ================= config4 =================
2022年 11月 11日 星期五 17:24:03 CST
cmd

end before line
finish
================= config5 =================
2022年 11月 11日 星期五 18:05:51 CST
cmd

end before line
finish
================= config6 =================
2022年 11月 11日 星期五 18:40:37 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 32.47753587538097, 'spark.broadcast.checksum': 0.053362545117080384, 'spark.broadcast.compress': 0.5741176054920131, 'spark.default.parallelism': 244.01857247174303, 'spark.executor.cores': 5.767916610709853, 'spark.executor.instances': 12.198550160125587, 'spark.executor.memory': 8.614006572966955, 'spark.executor.memoryOverhead': 951.6707593006281, 'spark.kryoserializer.buffer': 98.66241514186353, 'spark.kryoserializer.buffer.max': 71.76120987458265, 'spark.locality.wait': 1.4495811305147845, 'spark.maxRemoteBlockSizeFetchToMem': 1649155814.173286, 'spark.memory.fraction': 0.7655178580879156, 'spark.memory.offHeap.enabled': 0.5148891120583086, 'spark.memory.offHeap.size': 967.2650301345928, 'spark.memory.storageFraction': 0.7346220162007971, 'spark.rdd.compress': 0.9034019152878835, 'spark.reducer.maxBlocksInFlightPerAddress': 1221354162.5838413, 'spark.reducer.maxReqsInFlight': 1223288662.1370869, 'spark.reducer.maxSizeInFlight': 62.75478185805714, 'spark.scheduler.mode': 0.3976768369855336, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.compress': 0.9275085803960339, 'spark.shuffle.file.buffer': 27.12850751185621, 'spark.shuffle.io.numConnectionsPerPeer': 4.003248412544622, 'spark.shuffle.sort.bypassMergeThreshold': 390.3991941401806, 'spark.storage.memoryMapThreshold': 8.949754820852288}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 4 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 40.66767683744775, 'spark.broadcast.checksum': 0.7509424340273372, 'spark.broadcast.compress': 0.34889834197784253, 'spark.default.parallelism': 280.9783675295078, 'spark.executor.cores': 6.6876586545882, 'spark.executor.instances': 10.56854713922777, 'spark.executor.memory': 13.789040282890314, 'spark.executor.memoryOverhead': 1293.5782935090924, 'spark.kryoserializer.buffer': 91.6827891400757, 'spark.kryoserializer.buffer.max': 43.015613403524014, 'spark.locality.wait': 9.54540332836364, 'spark.maxRemoteBlockSizeFetchToMem': 1556830926.6649766, 'spark.memory.fraction': 0.7313558457548527, 'spark.memory.offHeap.enabled': 0.40813680276128117, 'spark.memory.offHeap.size': 242.71562776886037, 'spark.memory.storageFraction': 0.8613518082249015, 'spark.rdd.compress': 0.5736794866722859, 'spark.reducer.maxBlocksInFlightPerAddress': 1076823813.1819131, 'spark.reducer.maxReqsInFlight': 1736396128.2234385, 'spark.reducer.maxSizeInFlight': 39.67895528506062, 'spark.scheduler.mode': 0.5270581022576093, 'spark.scheduler.revive.interval': 942.9710496553873, 'spark.shuffle.compress': 0.35726976000249977, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 3.493440463167211, 'spark.shuffle.sort.bypassMergeThreshold': 106.32849713862251, 'spark.storage.memoryMapThreshold': 9.364935103693853}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 5 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 44.835608886049286, 'spark.broadcast.checksum': 0.9973228504514805, 'spark.broadcast.compress': 0.17234050834532855, 'spark.default.parallelism': 241.14072488866333, 'spark.executor.cores': 6.797786389111491, 'spark.executor.instances': 12.180908968939402, 'spark.executor.memory': 8.396001036332375, 'spark.executor.memoryOverhead': 1419.7398451179813, 'spark.kryoserializer.buffer': 104.37211409227965, 'spark.kryoserializer.buffer.max': 120.6103554124624, 'spark.locality.wait': 7.403722827656246, 'spark.maxRemoteBlockSizeFetchToMem': 1207176464.5648606, 'spark.memory.fraction': 0.5079520535359182, 'spark.memory.offHeap.enabled': 0.026210986877719278, 'spark.memory.offHeap.size': 28.985843733293677, 'spark.memory.storageFraction': 0.5984844270412184, 'spark.rdd.compress': 0.860027948682888, 'spark.reducer.maxBlocksInFlightPerAddress': 1652307272.8540678, 'spark.reducer.maxReqsInFlight': 1667329902.7413435, 'spark.reducer.maxSizeInFlight': 64.41748283326108, 'spark.scheduler.mode': 0.12417331511991114, 'spark.scheduler.revive.interval': 639.5918395055697, 'spark.shuffle.compress': 0.5857592714582879, 'spark.shuffle.file.buffer': 47.02706394622959, 'spark.shuffle.io.numConnectionsPerPeer': 3.24412087702284, 'spark.shuffle.sort.bypassMergeThreshold': 107.45891574917721, 'spark.storage.memoryMapThreshold': 8.205694054125548}
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 6 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config7 =================
2022年 11月 11日 星期五 19:28:13 CST
cmd

end before line
finish
================= config8 =================
2022年 11月 11日 星期五 20:20:53 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 16.444404978143268, 'spark.broadcast.checksum': 0.8071051956187791, 'spark.broadcast.compress': 0.38786064406417176, 'spark.default.parallelism': 459.0625563678286, 'spark.executor.cores': 6.241364928211554, 'spark.executor.instances': 11.337441403942513, 'spark.executor.memory': 8.818731353964111, 'spark.executor.memoryOverhead': 466.1471523212422, 'spark.kryoserializer.buffer': 43.648971751110786, 'spark.kryoserializer.buffer.max': 36.27698034029713, 'spark.locality.wait': 1.9674471619548362, 'spark.maxRemoteBlockSizeFetchToMem': 1316095066.149041, 'spark.memory.fraction': 0.7851955921530707, 'spark.memory.offHeap.enabled': 0.5597169820541424, 'spark.memory.offHeap.size': 12.857323682934634, 'spark.memory.storageFraction': 0.5287897118757947, 'spark.rdd.compress': 0.967276330000272, 'spark.reducer.maxBlocksInFlightPerAddress': 1683735049.1971612, 'spark.reducer.maxReqsInFlight': 1292026271.591752, 'spark.reducer.maxSizeInFlight': 36.11163573937552, 'spark.scheduler.mode': 0.7438258540750929, 'spark.scheduler.revive.interval': 597.7147405546594, 'spark.shuffle.compress': 0.5813589272732578, 'spark.shuffle.file.buffer': 47.040639650825995, 'spark.shuffle.io.numConnectionsPerPeer': 4.387315205960141, 'spark.shuffle.sort.bypassMergeThreshold': 195.93910365903446, 'spark.storage.memoryMapThreshold': 5.4439274284185695}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 16.444404978143268, 'spark.broadcast.checksum': 0.8071051956187791, 'spark.broadcast.compress': 0.38786064406417176, 'spark.default.parallelism': 459.0625563678286, 'spark.executor.cores': 6.241364928211554, 'spark.executor.instances': 11.337441403942513, 'spark.executor.memory': 8.818731353964111, 'spark.executor.memoryOverhead': 466.1471523212422, 'spark.kryoserializer.buffer': 43.648971751110786, 'spark.kryoserializer.buffer.max': 36.27698034029713, 'spark.locality.wait': 1.9674471619548362, 'spark.maxRemoteBlockSizeFetchToMem': 1316095066.149041, 'spark.memory.fraction': 0.7851955921530707, 'spark.memory.offHeap.enabled': 0.5597169820541424, 'spark.memory.offHeap.size': 12.857323682934634, 'spark.memory.storageFraction': 0.5287897118757947, 'spark.rdd.compress': 0.967276330000272, 'spark.reducer.maxBlocksInFlightPerAddress': 1683735049.1971612, 'spark.reducer.maxReqsInFlight': 1292026271.591752, 'spark.reducer.maxSizeInFlight': 36.11163573937552, 'spark.scheduler.mode': 0.7438258540750929, 'spark.scheduler.revive.interval': 597.7147405546594, 'spark.shuffle.compress': 0.5813589272732578, 'spark.shuffle.file.buffer': 47.040639650825995, 'spark.shuffle.io.numConnectionsPerPeer': 4.387315205960141, 'spark.shuffle.sort.bypassMergeThreshold': 195.93910365903446, 'spark.storage.memoryMapThreshold': 5.4439274284185695}
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 7 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 40.437254539645544, 'spark.broadcast.checksum': 0.8289808995501787, 'spark.broadcast.compress': 0.15679139464608427, 'spark.default.parallelism': 205.57286065322285, 'spark.executor.cores': 4.210066431157667, 'spark.executor.instances': 10.91807066562219, 'spark.executor.memory': 11.637976769919982, 'spark.executor.memoryOverhead': 1163.895320245566, 'spark.kryoserializer.buffer': 62.46679129492743, 'spark.kryoserializer.buffer.max': 126.90715082359509, 'spark.locality.wait': 6.217706973212172, 'spark.maxRemoteBlockSizeFetchToMem': 1481914945.7541697, 'spark.memory.fraction': 0.7203792876471588, 'spark.memory.offHeap.enabled': 0.7453344309065021, 'spark.memory.offHeap.size': 685.294482896061, 'spark.memory.storageFraction': 0.6059678230651238, 'spark.rdd.compress': 0.06633483442844157, 'spark.reducer.maxBlocksInFlightPerAddress': 1471116704.7018695, 'spark.reducer.maxReqsInFlight': 1749895847.5940676, 'spark.reducer.maxSizeInFlight': 34.0883524759123, 'spark.scheduler.mode': 0.7527555537388139, 'spark.scheduler.revive.interval': 533.2682406770575, 'spark.shuffle.compress': 0.26031509857854096, 'spark.shuffle.file.buffer': 41.75214603978705, 'spark.shuffle.io.numConnectionsPerPeer': 1.773737130493311, 'spark.shuffle.sort.bypassMergeThreshold': 355.78435235197605, 'spark.storage.memoryMapThreshold': 5.722032782113603}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 40.437254539645544, 'spark.broadcast.checksum': 0.8289808995501787, 'spark.broadcast.compress': 0.15679139464608427, 'spark.default.parallelism': 205.57286065322285, 'spark.executor.cores': 4.210066431157667, 'spark.executor.instances': 10.91807066562219, 'spark.executor.memory': 11.637976769919982, 'spark.executor.memoryOverhead': 1163.895320245566, 'spark.kryoserializer.buffer': 62.46679129492743, 'spark.kryoserializer.buffer.max': 126.90715082359509, 'spark.locality.wait': 6.217706973212172, 'spark.maxRemoteBlockSizeFetchToMem': 1481914945.7541697, 'spark.memory.fraction': 0.7203792876471588, 'spark.memory.offHeap.enabled': 0.7453344309065021, 'spark.memory.offHeap.size': 685.294482896061, 'spark.memory.storageFraction': 0.6059678230651238, 'spark.rdd.compress': 0.06633483442844157, 'spark.reducer.maxBlocksInFlightPerAddress': 1471116704.7018695, 'spark.reducer.maxReqsInFlight': 1749895847.5940676, 'spark.reducer.maxSizeInFlight': 34.0883524759123, 'spark.scheduler.mode': 0.7527555537388139, 'spark.scheduler.revive.interval': 533.2682406770575, 'spark.shuffle.compress': 0.26031509857854096, 'spark.shuffle.file.buffer': 41.75214603978705, 'spark.shuffle.io.numConnectionsPerPeer': 1.773737130493311, 'spark.shuffle.sort.bypassMergeThreshold': 355.78435235197605, 'spark.storage.memoryMapThreshold': 5.722032782113603}
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 8 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 59.338094164759745, 'spark.broadcast.checksum': 0.263296770487111, 'spark.broadcast.compress': 0.06596109068402378, 'spark.default.parallelism': 420.5197889866008, 'spark.executor.cores': 6.316534088629741, 'spark.executor.instances': 13.446895115021144, 'spark.executor.memory': 13.591832415181024, 'spark.executor.memoryOverhead': 403.1276065495435, 'spark.kryoserializer.buffer': 54.498760267656365, 'spark.kryoserializer.buffer.max': 91.21072227215913, 'spark.locality.wait': 9.541146886188548, 'spark.maxRemoteBlockSizeFetchToMem': 2093985163.1565142, 'spark.memory.fraction': 0.7226612752780626, 'spark.memory.offHeap.enabled': 0.9156063497662745, 'spark.memory.offHeap.size': 656.9637979610496, 'spark.memory.storageFraction': 0.6560030856564985, 'spark.rdd.compress': 0.48599066709690975, 'spark.reducer.maxBlocksInFlightPerAddress': 1722615263.192813, 'spark.reducer.maxReqsInFlight': 1663814410.6160128, 'spark.reducer.maxSizeInFlight': 68.45670848190977, 'spark.scheduler.mode': 0.9187334356336061, 'spark.scheduler.revive.interval': 697.4378064617774, 'spark.shuffle.compress': 0.9632625284407118, 'spark.shuffle.file.buffer': 21.56658133377486, 'spark.shuffle.io.numConnectionsPerPeer': 1.5053180777585493, 'spark.shuffle.sort.bypassMergeThreshold': 154.03166321869253, 'spark.storage.memoryMapThreshold': 5.550959491092071}
生成测试集 - 配置失败 target -1467  conf ================= config9 =================
2022年 11月 11日 星期五 20:56:40 CST
cmd

end before line
finish
================= config10 =================
2022年 11月 11日 星期五 21:33:47 CST
cmd

end before line
finish
================= config11 =================
2022年 11月 11日 星期五 22:21:00 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 59.338094164759745, 'spark.broadcast.checksum': 0.263296770487111, 'spark.broadcast.compress': 0.06596109068402378, 'spark.default.parallelism': 420.5197889866008, 'spark.executor.cores': 6.316534088629741, 'spark.executor.instances': 13.446895115021144, 'spark.executor.memory': 13.591832415181024, 'spark.executor.memoryOverhead': 403.1276065495435, 'spark.kryoserializer.buffer': 54.498760267656365, 'spark.kryoserializer.buffer.max': 91.21072227215913, 'spark.locality.wait': 9.541146886188548, 'spark.maxRemoteBlockSizeFetchToMem': 2093985163.1565142, 'spark.memory.fraction': 0.7226612752780626, 'spark.memory.offHeap.enabled': 0.9156063497662745, 'spark.memory.offHeap.size': 656.9637979610496, 'spark.memory.storageFraction': 0.6560030856564985, 'spark.rdd.compress': 0.48599066709690975, 'spark.reducer.maxBlocksInFlightPerAddress': 1722615263.192813, 'spark.reducer.maxReqsInFlight': 1663814410.6160128, 'spark.reducer.maxSizeInFlight': 68.45670848190977, 'spark.scheduler.mode': 0.9187334356336061, 'spark.scheduler.revive.interval': 697.4378064617774, 'spark.shuffle.compress': 0.9632625284407118, 'spark.shuffle.file.buffer': 21.56658133377486, 'spark.shuffle.io.numConnectionsPerPeer': 1.5053180777585493, 'spark.shuffle.sort.bypassMergeThreshold': 154.03166321869253, 'spark.storage.memoryMapThreshold': 5.550959491092071}
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 9 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 3.334537927000275, 'spark.broadcast.checksum': 0.947970211217681, 'spark.broadcast.compress': 0.8271154711707325, 'spark.default.parallelism': 204.50569422263672, 'spark.executor.cores': 4.528588766725166, 'spark.executor.instances': 9.992381446201023, 'spark.executor.memory': 8.785981068865501, 'spark.executor.memoryOverhead': 1493.811738905544, 'spark.kryoserializer.buffer': 65.09471865759618, 'spark.kryoserializer.buffer.max': 122.25031830400324, 'spark.locality.wait': 6.238127619523721, 'spark.maxRemoteBlockSizeFetchToMem': 2017379999.9509249, 'spark.memory.fraction': 0.8378937781568887, 'spark.memory.offHeap.enabled': 0.9053923187086492, 'spark.memory.offHeap.size': 470.91739219641033, 'spark.memory.storageFraction': 0.7185387264081493, 'spark.rdd.compress': 0.7986035911520394, 'spark.reducer.maxBlocksInFlightPerAddress': 1380530104.0122092, 'spark.reducer.maxReqsInFlight': 1600147534.6003466, 'spark.reducer.maxSizeInFlight': 52.757294767002165, 'spark.scheduler.mode': 0.015533275550835723, 'spark.scheduler.revive.interval': 796.7407040983186, 'spark.shuffle.compress': 0.4336763489894583, 'spark.shuffle.file.buffer': 41.83553692431492, 'spark.shuffle.io.numConnectionsPerPeer': 2.260979212381492, 'spark.shuffle.sort.bypassMergeThreshold': 457.1554834100605, 'spark.storage.memoryMapThreshold': 6.20071493756082}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 3.334537927000275, 'spark.broadcast.checksum': 0.947970211217681, 'spark.broadcast.compress': 0.8271154711707325, 'spark.default.parallelism': 204.50569422263672, 'spark.executor.cores': 4.528588766725166, 'spark.executor.instances': 9.992381446201023, 'spark.executor.memory': 8.785981068865501, 'spark.executor.memoryOverhead': 1493.811738905544, 'spark.kryoserializer.buffer': 65.09471865759618, 'spark.kryoserializer.buffer.max': 122.25031830400324, 'spark.locality.wait': 6.238127619523721, 'spark.maxRemoteBlockSizeFetchToMem': 2017379999.9509249, 'spark.memory.fraction': 0.8378937781568887, 'spark.memory.offHeap.enabled': 0.9053923187086492, 'spark.memory.offHeap.size': 470.91739219641033, 'spark.memory.storageFraction': 0.7185387264081493, 'spark.rdd.compress': 0.7986035911520394, 'spark.reducer.maxBlocksInFlightPerAddress': 1380530104.0122092, 'spark.reducer.maxReqsInFlight': 1600147534.6003466, 'spark.reducer.maxSizeInFlight': 52.757294767002165, 'spark.scheduler.mode': 0.015533275550835723, 'spark.scheduler.revive.interval': 796.7407040983186, 'spark.shuffle.compress': 0.4336763489894583, 'spark.shuffle.file.buffer': 41.83553692431492, 'spark.shuffle.io.numConnectionsPerPeer': 2.260979212381492, 'spark.shuffle.sort.bypassMergeThreshold': 457.1554834100605, 'spark.storage.memoryMapThreshold': 6.20071493756082}
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 10 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 13.408632500902835, 'spark.broadcast.checksum': 0.7879292338255043, 'spark.broadcast.compress': 0.6120311770449339, 'spark.default.parallelism': 216.17278162212588, 'spark.executor.cores': 5.260581040003396, 'spark.executor.instances': 12.074413019392578, 'spark.executor.memory': 13.511610667865156, 'spark.executor.memoryOverhead': 384.551176126051, 'spark.kryoserializer.buffer': 125.76887830698172, 'spark.kryoserializer.buffer.max': 68.15171021559435, 'spark.locality.wait': 9.764051845224904, 'spark.maxRemoteBlockSizeFetchToMem': 1723050381.454726, 'spark.memory.fraction': 0.8315383231922773, 'spark.memory.offHeap.enabled': 0.5747115047081023, 'spark.memory.offHeap.size': 643.1500270667268, 'spark.memory.storageFraction': 0.6142305126782776, 'spark.rdd.compress': 0.586833340656083, 'spark.reducer.maxBlocksInFlightPerAddress': 1879071559.5977912, 'spark.reducer.maxReqsInFlight': 1995349287.2917576, 'spark.reducer.maxSizeInFlight': 60.243945046448644, 'spark.scheduler.mode': 0.698057248447303, 'spark.scheduler.revive.interval': 932.2397150272999, 'spark.shuffle.compress': 0.32268099683674645, 'spark.shuffle.file.buffer': 37.465241305202795, 'spark.shuffle.io.numConnectionsPerPeer': 2.8034957456533967, 'spark.shuffle.sort.bypassMergeThreshold': 252.8411008126069, 'spark.storage.memoryMapThreshold': 4.69730214929967}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 13.408632500902835, 'spark.broadcast.checksum': 0.7879292338255043, 'spark.broadcast.compress': 0.6120311770449339, 'spark.default.parallelism': 216.17278162212588, 'spark.executor.cores': 5.260581040003396, 'spark.executor.instances': 12.074413019392578, 'spark.executor.memory': 13.511610667865156, 'spark.executor.memoryOverhead': 384.551176126051, 'spark.kryoserializer.buffer': 125.76887830698172, 'spark.kryoserializer.buffer.max': 68.15171021559435, 'spark.locality.wait': 9.764051845224904, 'spark.maxRemoteBlockSizeFetchToMem': 1723050381.454726, 'spark.memory.fraction': 0.8315383231922773, 'spark.memory.offHeap.enabled': 0.5747115047081023, 'spark.memory.offHeap.size': 643.1500270667268, 'spark.memory.storageFraction': 0.6142305126782776, 'spark.rdd.compress': 0.586833340656083, 'spark.reducer.maxBlocksInFlightPerAddress': 1879071559.5977912, 'spark.reducer.maxReqsInFlight': 1995349287.2917576, 'spark.reducer.maxSizeInFlight': 60.243945046448644, 'spark.scheduler.mode': 0.698057248447303, 'spark.scheduler.revive.interval': 932.2397150272999, 'spark.shuffle.compress': 0.32268099683674645, 'spark.shuffle.file.buffer': 37.465241305202795, 'spark.shuffle.io.numConnectionsPerPeer': 2.8034957456533967, 'spark.shuffle.sort.bypassMergeThreshold': 252.8411008126069, 'spark.storage.memoryMapThreshold': 4.69730214929967}
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 11 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config12 =================
2022年 11月 11日 星期五 22:56:43 CST
cmd

end before line
finish
================= config13 =================
2022年 11月 11日 星期五 23:29:10 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 26.891734175111516, 'spark.broadcast.checksum': 0.3173839459582769, 'spark.broadcast.compress': 0.6219193679203014, 'spark.default.parallelism': 329.07418124637934, 'spark.executor.cores': 6.921406233781757, 'spark.executor.instances': 12.066805348605866, 'spark.executor.memory': 9.191419330562665, 'spark.executor.memoryOverhead': 969.007083816153, 'spark.kryoserializer.buffer': 64.96123901834461, 'spark.kryoserializer.buffer.max': 108.5733251800224, 'spark.locality.wait': 8.919984597070886, 'spark.maxRemoteBlockSizeFetchToMem': 2044234245.8731952, 'spark.memory.fraction': 0.7650879249501049, 'spark.memory.offHeap.enabled': 0.2702082620297578, 'spark.memory.offHeap.size': 258.4235023406999, 'spark.memory.storageFraction': 0.841959177078961, 'spark.rdd.compress': 0.5277146463087466, 'spark.reducer.maxBlocksInFlightPerAddress': 1935055728.4809144, 'spark.reducer.maxReqsInFlight': 1688446687.6683707, 'spark.reducer.maxSizeInFlight': 59.19084121380053, 'spark.scheduler.mode': 0.5190116274640558, 'spark.scheduler.revive.interval': 885.4419552509439, 'spark.shuffle.compress': 0.5688579907047155, 'spark.shuffle.file.buffer': 30.902716114943388, 'spark.shuffle.io.numConnectionsPerPeer': 2.370755631813127, 'spark.shuffle.sort.bypassMergeThreshold': 127.28373936668164, 'spark.storage.memoryMapThreshold': 4.401317613952899}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 26.891734175111516, 'spark.broadcast.checksum': 0.3173839459582769, 'spark.broadcast.compress': 0.6219193679203014, 'spark.default.parallelism': 329.07418124637934, 'spark.executor.cores': 6.921406233781757, 'spark.executor.instances': 12.066805348605866, 'spark.executor.memory': 9.191419330562665, 'spark.executor.memoryOverhead': 969.007083816153, 'spark.kryoserializer.buffer': 64.96123901834461, 'spark.kryoserializer.buffer.max': 108.5733251800224, 'spark.locality.wait': 8.919984597070886, 'spark.maxRemoteBlockSizeFetchToMem': 2044234245.8731952, 'spark.memory.fraction': 0.7650879249501049, 'spark.memory.offHeap.enabled': 0.2702082620297578, 'spark.memory.offHeap.size': 258.4235023406999, 'spark.memory.storageFraction': 0.841959177078961, 'spark.rdd.compress': 0.5277146463087466, 'spark.reducer.maxBlocksInFlightPerAddress': 1935055728.4809144, 'spark.reducer.maxReqsInFlight': 1688446687.6683707, 'spark.reducer.maxSizeInFlight': 59.19084121380053, 'spark.scheduler.mode': 0.5190116274640558, 'spark.scheduler.revive.interval': 885.4419552509439, 'spark.shuffle.compress': 0.5688579907047155, 'spark.shuffle.file.buffer': 30.902716114943388, 'spark.shuffle.io.numConnectionsPerPeer': 2.370755631813127, 'spark.shuffle.sort.bypassMergeThreshold': 127.28373936668164, 'spark.storage.memoryMapThreshold': 4.401317613952899}
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 12 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 6.936816817291646, 'spark.broadcast.checksum': 0.982817113730445, 'spark.broadcast.compress': 0.18161285133076377, 'spark.default.parallelism': 443.5576093161619, 'spark.executor.cores': 6.624884934867694, 'spark.executor.instances': 12.13047951431566, 'spark.executor.memory': 11.416966476472254, 'spark.executor.memoryOverhead': 604.6918398741996, 'spark.kryoserializer.buffer': 76.8204821852774, 'spark.kryoserializer.buffer.max': 65.13651691090064, 'spark.locality.wait': 3.0253596203267614, 'spark.maxRemoteBlockSizeFetchToMem': 1709946190.027197, 'spark.memory.fraction': 0.6249079350807668, 'spark.memory.offHeap.enabled': 0.9163055534683507, 'spark.memory.offHeap.size': 931.4667775503945, 'spark.memory.storageFraction': 0.6028473175128785, 'spark.rdd.compress': 0.1108913007440292, 'spark.reducer.maxBlocksInFlightPerAddress': 1280933978.8422256, 'spark.reducer.maxReqsInFlight': 1610166241.6662745, 'spark.reducer.maxSizeInFlight': 58.97211206278062, 'spark.scheduler.mode': 0.20819443840879148, 'spark.scheduler.revive.interval': 624.0167791886154, 'spark.shuffle.compress': 0.851671874936367, 'spark.shuffle.file.buffer': 29.307158984560875, 'spark.shuffle.io.numConnectionsPerPeer': 3.4667402686209448, 'spark.shuffle.sort.bypassMergeThreshold': 193.4664556957, 'spark.storage.memoryMapThreshold': 1.9177053348321769}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 6.936816817291646, 'spark.broadcast.checksum': 0.982817113730445, 'spark.broadcast.compress': 0.18161285133076377, 'spark.default.parallelism': 443.5576093161619, 'spark.executor.cores': 6.624884934867694, 'spark.executor.instances': 12.13047951431566, 'spark.executor.memory': 11.416966476472254, 'spark.executor.memoryOverhead': 604.6918398741996, 'spark.kryoserializer.buffer': 76.8204821852774, 'spark.kryoserializer.buffer.max': 65.13651691090064, 'spark.locality.wait': 3.0253596203267614, 'spark.maxRemoteBlockSizeFetchToMem': 1709946190.027197, 'spark.memory.fraction': 0.6249079350807668, 'spark.memory.offHeap.enabled': 0.9163055534683507, 'spark.memory.offHeap.size': 931.4667775503945, 'spark.memory.storageFraction': 0.6028473175128785, 'spark.rdd.compress': 0.1108913007440292, 'spark.reducer.maxBlocksInFlightPerAddress': 1280933978.8422256, 'spark.reducer.maxReqsInFlight': 1610166241.6662745, 'spark.reducer.maxSizeInFlight': 58.97211206278062, 'spark.scheduler.mode': 0.20819443840879148, 'spark.scheduler.revive.interval': 624.0167791886154, 'spark.shuffle.compress': 0.851671874936367, 'spark.shuffle.file.buffer': 29.307158984560875, 'spark.shuffle.io.numConnectionsPerPeer': 3.4667402686209448, 'spark.shuffle.sort.bypassMergeThreshold': 193.4664556957, 'spark.storage.memoryMapThreshold': 1.9177053348321769}
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 13 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 33.98313505204885, 'spark.broadcast.checksum': 0.47714098704978236, 'spark.broadcast.compress': 0.15267164409316325, 'spark.default.parallelism': 386.54186952212467, 'spark.executor.cores': 5.632030356441814, 'spark.executor.instances': 11.924824081824466, 'spark.executor.memory': 8.86727324074796, 'spark.executor.memoryOverhead': 1414.3446372924193, 'spark.kryoserializer.buffer': 53.31671742079258, 'spark.kryoserializer.buffer.max': 81.85777513913916, 'spark.locality.wait': 8.06766425399457, 'spark.maxRemoteBlockSizeFetchToMem': 1097718675.7660332, 'spark.memory.fraction': 0.6297449838904746, 'spark.memory.offHeap.enabled': 0.872922376400111, 'spark.memory.offHeap.size': 864.9826381845193, 'spark.memory.storageFraction': 0.7153762370378175, 'spark.rdd.compress': 0.866608274166513, 'spark.reducer.maxBlocksInFlightPerAddress': 2093588240.6021712, 'spark.reducer.maxReqsInFlight': 1961089580.0008926, 'spark.reducer.maxSizeInFlight': 64.99754130415386, 'spark.scheduler.mode': 0.09874340182034835, 'spark.scheduler.revive.interval': 825.6521661704955, 'spark.shuffle.compress': 0.703516988152653, 'spark.shuffle.file.buffer': 35.52770600469215, 'spark.shuffle.io.numConnectionsPerPeer': 4.198461046944113, 'spark.shuffle.sort.bypassMergeThreshold': 113.8284879486537, 'spark.storage.memoryMapThreshold': 7.932148610994819}
生成测试集 - 配置失败 target -1467  conf ================= config14 =================
2022年 11月 12日 星期六 00:16:27 CST
cmd

end before line
finish
================= config15 =================
2022年 11月 12日 星期六 01:12:10 CST
cmd

end before line
finish
================= config16 =================
2022年 11月 12日 星期六 02:03:02 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 33.98313505204885, 'spark.broadcast.checksum': 0.47714098704978236, 'spark.broadcast.compress': 0.15267164409316325, 'spark.default.parallelism': 386.54186952212467, 'spark.executor.cores': 5.632030356441814, 'spark.executor.instances': 11.924824081824466, 'spark.executor.memory': 8.86727324074796, 'spark.executor.memoryOverhead': 1414.3446372924193, 'spark.kryoserializer.buffer': 53.31671742079258, 'spark.kryoserializer.buffer.max': 81.85777513913916, 'spark.locality.wait': 8.06766425399457, 'spark.maxRemoteBlockSizeFetchToMem': 1097718675.7660332, 'spark.memory.fraction': 0.6297449838904746, 'spark.memory.offHeap.enabled': 0.872922376400111, 'spark.memory.offHeap.size': 864.9826381845193, 'spark.memory.storageFraction': 0.7153762370378175, 'spark.rdd.compress': 0.866608274166513, 'spark.reducer.maxBlocksInFlightPerAddress': 2093588240.6021712, 'spark.reducer.maxReqsInFlight': 1961089580.0008926, 'spark.reducer.maxSizeInFlight': 64.99754130415386, 'spark.scheduler.mode': 0.09874340182034835, 'spark.scheduler.revive.interval': 825.6521661704955, 'spark.shuffle.compress': 0.703516988152653, 'spark.shuffle.file.buffer': 35.52770600469215, 'spark.shuffle.io.numConnectionsPerPeer': 4.198461046944113, 'spark.shuffle.sort.bypassMergeThreshold': 113.8284879486537, 'spark.storage.memoryMapThreshold': 7.932148610994819}
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 14 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 47.36717324585067, 'spark.broadcast.checksum': 0.2596983932983531, 'spark.broadcast.compress': 0.2570692988221467, 'spark.default.parallelism': 389.6909952290383, 'spark.executor.cores': 5.035892384773245, 'spark.executor.instances': 12.779532068043725, 'spark.executor.memory': 10.676877392020744, 'spark.executor.memoryOverhead': 1457.1494476690998, 'spark.kryoserializer.buffer': 127.0852912278887, 'spark.kryoserializer.buffer.max': 60.82384059525441, 'spark.locality.wait': 2.2870524543228945, 'spark.maxRemoteBlockSizeFetchToMem': 2041513900.6972976, 'spark.memory.fraction': 0.7166237515549493, 'spark.memory.offHeap.enabled': 0.9747403708550822, 'spark.memory.offHeap.size': 651.8829056019428, 'spark.memory.storageFraction': 0.8975652098441915, 'spark.rdd.compress': 0.5460708041429516, 'spark.reducer.maxBlocksInFlightPerAddress': 1638987365.4726179, 'spark.reducer.maxReqsInFlight': 1219156426.665207, 'spark.reducer.maxSizeInFlight': 41.07384820722629, 'spark.scheduler.mode': 0.026218567296373285, 'spark.scheduler.revive.interval': 580.1975897598245, 'spark.shuffle.compress': 0.7456371927074961, 'spark.shuffle.file.buffer': 16.972790077721243, 'spark.shuffle.io.numConnectionsPerPeer': 2.4661723889749774, 'spark.shuffle.sort.bypassMergeThreshold': 444.9385011352176, 'spark.storage.memoryMapThreshold': 7.234099457566189}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 47.36717324585067, 'spark.broadcast.checksum': 0.2596983932983531, 'spark.broadcast.compress': 0.2570692988221467, 'spark.default.parallelism': 389.6909952290383, 'spark.executor.cores': 5.035892384773245, 'spark.executor.instances': 12.779532068043725, 'spark.executor.memory': 10.676877392020744, 'spark.executor.memoryOverhead': 1457.1494476690998, 'spark.kryoserializer.buffer': 127.0852912278887, 'spark.kryoserializer.buffer.max': 60.82384059525441, 'spark.locality.wait': 2.2870524543228945, 'spark.maxRemoteBlockSizeFetchToMem': 2041513900.6972976, 'spark.memory.fraction': 0.7166237515549493, 'spark.memory.offHeap.enabled': 0.9747403708550822, 'spark.memory.offHeap.size': 651.8829056019428, 'spark.memory.storageFraction': 0.8975652098441915, 'spark.rdd.compress': 0.5460708041429516, 'spark.reducer.maxBlocksInFlightPerAddress': 1638987365.4726179, 'spark.reducer.maxReqsInFlight': 1219156426.665207, 'spark.reducer.maxSizeInFlight': 41.07384820722629, 'spark.scheduler.mode': 0.026218567296373285, 'spark.scheduler.revive.interval': 580.1975897598245, 'spark.shuffle.compress': 0.7456371927074961, 'spark.shuffle.file.buffer': 16.972790077721243, 'spark.shuffle.io.numConnectionsPerPeer': 2.4661723889749774, 'spark.shuffle.sort.bypassMergeThreshold': 444.9385011352176, 'spark.storage.memoryMapThreshold': 7.234099457566189}
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 15 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 44.83841280810245, 'spark.broadcast.checksum': 0.18863680095531088, 'spark.broadcast.compress': 0.44190428074842336, 'spark.default.parallelism': 374.4732222032874, 'spark.executor.cores': 6.9692551229911155, 'spark.executor.instances': 9.223437351398731, 'spark.executor.memory': 9.48639741057413, 'spark.executor.memoryOverhead': 743.4392978526623, 'spark.kryoserializer.buffer': 104.0165516766073, 'spark.kryoserializer.buffer.max': 75.86963143382651, 'spark.locality.wait': 1.512364945699855, 'spark.maxRemoteBlockSizeFetchToMem': 1619756592.546304, 'spark.memory.fraction': 0.5847840658574703, 'spark.memory.offHeap.enabled': 0.7986042447602102, 'spark.memory.offHeap.size': 304.46733466344676, 'spark.memory.storageFraction': 0.5110424047818014, 'spark.rdd.compress': 0.593432449464621, 'spark.reducer.maxBlocksInFlightPerAddress': 1979808584.3255172, 'spark.reducer.maxReqsInFlight': 1482854771.023972, 'spark.reducer.maxSizeInFlight': 59.99319891485489, 'spark.scheduler.mode': 0.5111414782971282, 'spark.scheduler.revive.interval': 770.4759024810943, 'spark.shuffle.compress': 0.9594343210617524, 'spark.shuffle.file.buffer': 41.7267485279567, 'spark.shuffle.io.numConnectionsPerPeer': 1.129292266494296, 'spark.shuffle.sort.bypassMergeThreshold': 383.75490049251806, 'spark.storage.memoryMapThreshold': 5.185013334071555}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 44.83841280810245, 'spark.broadcast.checksum': 0.18863680095531088, 'spark.broadcast.compress': 0.44190428074842336, 'spark.default.parallelism': 374.4732222032874, 'spark.executor.cores': 6.9692551229911155, 'spark.executor.instances': 9.223437351398731, 'spark.executor.memory': 9.48639741057413, 'spark.executor.memoryOverhead': 743.4392978526623, 'spark.kryoserializer.buffer': 104.0165516766073, 'spark.kryoserializer.buffer.max': 75.86963143382651, 'spark.locality.wait': 1.512364945699855, 'spark.maxRemoteBlockSizeFetchToMem': 1619756592.546304, 'spark.memory.fraction': 0.5847840658574703, 'spark.memory.offHeap.enabled': 0.7986042447602102, 'spark.memory.offHeap.size': 304.46733466344676, 'spark.memory.storageFraction': 0.5110424047818014, 'spark.rdd.compress': 0.593432449464621, 'spark.reducer.maxBlocksInFlightPerAddress': 1979808584.3255172, 'spark.reducer.maxReqsInFlight': 1482854771.023972, 'spark.reducer.maxSizeInFlight': 59.99319891485489, 'spark.scheduler.mode': 0.5111414782971282, 'spark.scheduler.revive.interval': 770.4759024810943, 'spark.shuffle.compress': 0.9594343210617524, 'spark.shuffle.file.buffer': 41.7267485279567, 'spark.shuffle.io.numConnectionsPerPeer': 1.129292266494296, 'spark.shuffle.sort.bypassMergeThreshold': 383.75490049251806, 'spark.storage.memoryMapThreshold': 5.185013334071555}
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 16 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config17 =================
2022年 11月 12日 星期六 02:50:33 CST
cmd

end before line
finish
================= config18 =================
2022年 11月 12日 星期六 03:42:04 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 60.74803436649619, 'spark.broadcast.checksum': 0.2214327343234883, 'spark.broadcast.compress': 0.2670720196843658, 'spark.default.parallelism': 224.4421894631786, 'spark.executor.cores': 5.28585648599136, 'spark.executor.instances': 8.65411258411441, 'spark.executor.memory': 11.802720563671507, 'spark.executor.memoryOverhead': 1484.8625984393946, 'spark.kryoserializer.buffer': 98.89284762753714, 'spark.kryoserializer.buffer.max': 105.55629258327397, 'spark.locality.wait': 4.0820870785916785, 'spark.maxRemoteBlockSizeFetchToMem': 1981967464.681264, 'spark.memory.fraction': 0.671507509999777, 'spark.memory.offHeap.enabled': 0.8240098704123188, 'spark.memory.offHeap.size': 641.5320664312768, 'spark.memory.storageFraction': 0.5573692194680979, 'spark.rdd.compress': 0.07838689985494796, 'spark.reducer.maxBlocksInFlightPerAddress': 1093426348.4401531, 'spark.reducer.maxReqsInFlight': 1145387243.6716783, 'spark.reducer.maxSizeInFlight': 46.01202305800473, 'spark.scheduler.mode': 0.11334192276759048, 'spark.scheduler.revive.interval': 513.891674424335, 'spark.shuffle.compress': 0.7548614813904674, 'spark.shuffle.file.buffer': 28.63521537474046, 'spark.shuffle.io.numConnectionsPerPeer': 3.9877539824301005, 'spark.shuffle.sort.bypassMergeThreshold': 280.96193069858066, 'spark.storage.memoryMapThreshold': 5.05078072300685}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 60.74803436649619, 'spark.broadcast.checksum': 0.2214327343234883, 'spark.broadcast.compress': 0.2670720196843658, 'spark.default.parallelism': 224.4421894631786, 'spark.executor.cores': 5.28585648599136, 'spark.executor.instances': 8.65411258411441, 'spark.executor.memory': 11.802720563671507, 'spark.executor.memoryOverhead': 1484.8625984393946, 'spark.kryoserializer.buffer': 98.89284762753714, 'spark.kryoserializer.buffer.max': 105.55629258327397, 'spark.locality.wait': 4.0820870785916785, 'spark.maxRemoteBlockSizeFetchToMem': 1981967464.681264, 'spark.memory.fraction': 0.671507509999777, 'spark.memory.offHeap.enabled': 0.8240098704123188, 'spark.memory.offHeap.size': 641.5320664312768, 'spark.memory.storageFraction': 0.5573692194680979, 'spark.rdd.compress': 0.07838689985494796, 'spark.reducer.maxBlocksInFlightPerAddress': 1093426348.4401531, 'spark.reducer.maxReqsInFlight': 1145387243.6716783, 'spark.reducer.maxSizeInFlight': 46.01202305800473, 'spark.scheduler.mode': 0.11334192276759048, 'spark.scheduler.revive.interval': 513.891674424335, 'spark.shuffle.compress': 0.7548614813904674, 'spark.shuffle.file.buffer': 28.63521537474046, 'spark.shuffle.io.numConnectionsPerPeer': 3.9877539824301005, 'spark.shuffle.sort.bypassMergeThreshold': 280.96193069858066, 'spark.storage.memoryMapThreshold': 5.05078072300685}
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 17 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 31.64049541650552, 'spark.broadcast.checksum': 0.47400392656219403, 'spark.broadcast.compress': 0.8031633421141696, 'spark.default.parallelism': 320.7177559573207, 'spark.executor.cores': 6.714058481030869, 'spark.executor.instances': 8.222366287724215, 'spark.executor.memory': 12.643246056322512, 'spark.executor.memoryOverhead': 556.2543335398399, 'spark.kryoserializer.buffer': 91.37730242356021, 'spark.kryoserializer.buffer.max': 32.994969088182266, 'spark.locality.wait': 5.847645543187123, 'spark.maxRemoteBlockSizeFetchToMem': 1076982072.4728813, 'spark.memory.fraction': 0.8804775141960819, 'spark.memory.offHeap.enabled': 0.905402033702778, 'spark.memory.offHeap.size': 815.0701485488838, 'spark.memory.storageFraction': 0.866109727965915, 'spark.rdd.compress': 0.14555823115839706, 'spark.reducer.maxBlocksInFlightPerAddress': 1243103195.9224339, 'spark.reducer.maxReqsInFlight': 1275209797.7024307, 'spark.reducer.maxSizeInFlight': 53.87980331039621, 'spark.scheduler.mode': 0.9058094960083019, 'spark.scheduler.revive.interval': 994.9775891795368, 'spark.shuffle.compress': 0.7111224587658159, 'spark.shuffle.file.buffer': 39.41761309255345, 'spark.shuffle.io.numConnectionsPerPeer': 4.637172818177017, 'spark.shuffle.sort.bypassMergeThreshold': 260.34949294844836, 'spark.storage.memoryMapThreshold': 3.2486561220253307}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 31.64049541650552, 'spark.broadcast.checksum': 0.47400392656219403, 'spark.broadcast.compress': 0.8031633421141696, 'spark.default.parallelism': 320.7177559573207, 'spark.executor.cores': 6.714058481030869, 'spark.executor.instances': 8.222366287724215, 'spark.executor.memory': 12.643246056322512, 'spark.executor.memoryOverhead': 556.2543335398399, 'spark.kryoserializer.buffer': 91.37730242356021, 'spark.kryoserializer.buffer.max': 32.994969088182266, 'spark.locality.wait': 5.847645543187123, 'spark.maxRemoteBlockSizeFetchToMem': 1076982072.4728813, 'spark.memory.fraction': 0.8804775141960819, 'spark.memory.offHeap.enabled': 0.905402033702778, 'spark.memory.offHeap.size': 815.0701485488838, 'spark.memory.storageFraction': 0.866109727965915, 'spark.rdd.compress': 0.14555823115839706, 'spark.reducer.maxBlocksInFlightPerAddress': 1243103195.9224339, 'spark.reducer.maxReqsInFlight': 1275209797.7024307, 'spark.reducer.maxSizeInFlight': 53.87980331039621, 'spark.scheduler.mode': 0.9058094960083019, 'spark.scheduler.revive.interval': 994.9775891795368, 'spark.shuffle.compress': 0.7111224587658159, 'spark.shuffle.file.buffer': 39.41761309255345, 'spark.shuffle.io.numConnectionsPerPeer': 4.637172818177017, 'spark.shuffle.sort.bypassMergeThreshold': 260.34949294844836, 'spark.storage.memoryMapThreshold': 3.2486561220253307}
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 18 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 12.752670588801617, 'spark.broadcast.checksum': 0.119457050333729, 'spark.broadcast.compress': 0.8126105880328287, 'spark.default.parallelism': 244.03771202517294, 'spark.executor.cores': 4.792892448180702, 'spark.executor.instances': 12.914535071801184, 'spark.executor.memory': 9.86352351076526, 'spark.executor.memoryOverhead': 1730.8943229806246, 'spark.kryoserializer.buffer': 57.59731540655698, 'spark.kryoserializer.buffer.max': 83.2307211172363, 'spark.locality.wait': 3.8302031006726467, 'spark.maxRemoteBlockSizeFetchToMem': 2051676214.8363955, 'spark.memory.fraction': 0.6466226575404938, 'spark.memory.offHeap.enabled': 0.43359232727316455, 'spark.memory.offHeap.size': 524.587716893042, 'spark.memory.storageFraction': 0.8755545909478853, 'spark.rdd.compress': 0.030949006271150714, 'spark.reducer.maxBlocksInFlightPerAddress': 1843484426.8745723, 'spark.reducer.maxReqsInFlight': 2030466140.2004285, 'spark.reducer.maxSizeInFlight': 25.309786728838503, 'spark.scheduler.mode': 0.5220512472525107, 'spark.scheduler.revive.interval': 662.9949058850127, 'spark.shuffle.compress': 0.8594893208655858, 'spark.shuffle.file.buffer': 33.87252962952057, 'spark.shuffle.io.numConnectionsPerPeer': 3.7609114726509913, 'spark.shuffle.sort.bypassMergeThreshold': 281.141399980615, 'spark.storage.memoryMapThreshold': 6.6547813376922145}
生成测试集 - 配置失败 target -1467  conf ================= config19 =================
2022年 11月 12日 星期六 04:38:40 CST
cmd

end before line
finish
================= config20 =================
2022年 11月 12日 星期六 05:35:06 CST
cmd

end before line
finish
================= config21 =================
2022年 11月 12日 星期六 06:08:20 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 12.752670588801617, 'spark.broadcast.checksum': 0.119457050333729, 'spark.broadcast.compress': 0.8126105880328287, 'spark.default.parallelism': 244.03771202517294, 'spark.executor.cores': 4.792892448180702, 'spark.executor.instances': 12.914535071801184, 'spark.executor.memory': 9.86352351076526, 'spark.executor.memoryOverhead': 1730.8943229806246, 'spark.kryoserializer.buffer': 57.59731540655698, 'spark.kryoserializer.buffer.max': 83.2307211172363, 'spark.locality.wait': 3.8302031006726467, 'spark.maxRemoteBlockSizeFetchToMem': 2051676214.8363955, 'spark.memory.fraction': 0.6466226575404938, 'spark.memory.offHeap.enabled': 0.43359232727316455, 'spark.memory.offHeap.size': 524.587716893042, 'spark.memory.storageFraction': 0.8755545909478853, 'spark.rdd.compress': 0.030949006271150714, 'spark.reducer.maxBlocksInFlightPerAddress': 1843484426.8745723, 'spark.reducer.maxReqsInFlight': 2030466140.2004285, 'spark.reducer.maxSizeInFlight': 25.309786728838503, 'spark.scheduler.mode': 0.5220512472525107, 'spark.scheduler.revive.interval': 662.9949058850127, 'spark.shuffle.compress': 0.8594893208655858, 'spark.shuffle.file.buffer': 33.87252962952057, 'spark.shuffle.io.numConnectionsPerPeer': 3.7609114726509913, 'spark.shuffle.sort.bypassMergeThreshold': 281.141399980615, 'spark.storage.memoryMapThreshold': 6.6547813376922145}
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 19 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 19.9860048046204, 'spark.broadcast.checksum': 0.009348577966515781, 'spark.broadcast.compress': 0.5767559349870908, 'spark.default.parallelism': 293.43326423973883, 'spark.executor.cores': 5.55180279550339, 'spark.executor.instances': 13.498435118323385, 'spark.executor.memory': 10.558848731008375, 'spark.executor.memoryOverhead': 723.1799661818704, 'spark.kryoserializer.buffer': 67.64420108278922, 'spark.kryoserializer.buffer.max': 121.4586671971079, 'spark.locality.wait': 9.431815431781843, 'spark.maxRemoteBlockSizeFetchToMem': 1980333729.8823082, 'spark.memory.fraction': 0.8680826057222641, 'spark.memory.offHeap.enabled': 0.22790028995131695, 'spark.memory.offHeap.size': 89.58178258287705, 'spark.memory.storageFraction': 0.5909238945138755, 'spark.rdd.compress': 0.31437661611405043, 'spark.reducer.maxBlocksInFlightPerAddress': 1261395253.8517845, 'spark.reducer.maxReqsInFlight': 1725604215.816061, 'spark.reducer.maxSizeInFlight': 43.85214792005574, 'spark.scheduler.mode': 0.8163515118272141, 'spark.scheduler.revive.interval': 592.5651991345153, 'spark.shuffle.compress': 0.7018765297563104, 'spark.shuffle.file.buffer': 23.691379995172444, 'spark.shuffle.io.numConnectionsPerPeer': 3.296876355363439, 'spark.shuffle.sort.bypassMergeThreshold': 239.59503888831554, 'spark.storage.memoryMapThreshold': 1.5126795953454946}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 19.9860048046204, 'spark.broadcast.checksum': 0.009348577966515781, 'spark.broadcast.compress': 0.5767559349870908, 'spark.default.parallelism': 293.43326423973883, 'spark.executor.cores': 5.55180279550339, 'spark.executor.instances': 13.498435118323385, 'spark.executor.memory': 10.558848731008375, 'spark.executor.memoryOverhead': 723.1799661818704, 'spark.kryoserializer.buffer': 67.64420108278922, 'spark.kryoserializer.buffer.max': 121.4586671971079, 'spark.locality.wait': 9.431815431781843, 'spark.maxRemoteBlockSizeFetchToMem': 1980333729.8823082, 'spark.memory.fraction': 0.8680826057222641, 'spark.memory.offHeap.enabled': 0.22790028995131695, 'spark.memory.offHeap.size': 89.58178258287705, 'spark.memory.storageFraction': 0.5909238945138755, 'spark.rdd.compress': 0.31437661611405043, 'spark.reducer.maxBlocksInFlightPerAddress': 1261395253.8517845, 'spark.reducer.maxReqsInFlight': 1725604215.816061, 'spark.reducer.maxSizeInFlight': 43.85214792005574, 'spark.scheduler.mode': 0.8163515118272141, 'spark.scheduler.revive.interval': 592.5651991345153, 'spark.shuffle.compress': 0.7018765297563104, 'spark.shuffle.file.buffer': 23.691379995172444, 'spark.shuffle.io.numConnectionsPerPeer': 3.296876355363439, 'spark.shuffle.sort.bypassMergeThreshold': 239.59503888831554, 'spark.storage.memoryMapThreshold': 1.5126795953454946}
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 20 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 16.186447599543303, 'spark.broadcast.checksum': 0.6641025553547935, 'spark.broadcast.compress': 0.4972500933605313, 'spark.default.parallelism': 355.7047952221036, 'spark.executor.cores': 4.524160450326767, 'spark.executor.instances': 11.424295109277537, 'spark.executor.memory': 13.98052055124926, 'spark.executor.memoryOverhead': 1503.8809341533135, 'spark.kryoserializer.buffer': 89.05977188777386, 'spark.kryoserializer.buffer.max': 125.69495055976688, 'spark.locality.wait': 9.114063262023892, 'spark.maxRemoteBlockSizeFetchToMem': 1713270563.5397444, 'spark.memory.fraction': 0.5129705301257829, 'spark.memory.offHeap.enabled': 0.09357709581748075, 'spark.memory.offHeap.size': 66.94063620323982, 'spark.memory.storageFraction': 0.6806932594765901, 'spark.rdd.compress': 0.37543483316785775, 'spark.reducer.maxBlocksInFlightPerAddress': 2121015947.83584, 'spark.reducer.maxReqsInFlight': 1254112510.6416812, 'spark.reducer.maxSizeInFlight': 70.69380441276745, 'spark.scheduler.mode': 0.7674748688630131, 'spark.scheduler.revive.interval': 912.1189198122489, 'spark.shuffle.compress': 0.6326158167779973, 'spark.shuffle.file.buffer': 37.399448646615426, 'spark.shuffle.io.numConnectionsPerPeer': 2.9075293340847734, 'spark.shuffle.sort.bypassMergeThreshold': 105.25454276922889, 'spark.storage.memoryMapThreshold': 4.177054769876423}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 16.186447599543303, 'spark.broadcast.checksum': 0.6641025553547935, 'spark.broadcast.compress': 0.4972500933605313, 'spark.default.parallelism': 355.7047952221036, 'spark.executor.cores': 4.524160450326767, 'spark.executor.instances': 11.424295109277537, 'spark.executor.memory': 13.98052055124926, 'spark.executor.memoryOverhead': 1503.8809341533135, 'spark.kryoserializer.buffer': 89.05977188777386, 'spark.kryoserializer.buffer.max': 125.69495055976688, 'spark.locality.wait': 9.114063262023892, 'spark.maxRemoteBlockSizeFetchToMem': 1713270563.5397444, 'spark.memory.fraction': 0.5129705301257829, 'spark.memory.offHeap.enabled': 0.09357709581748075, 'spark.memory.offHeap.size': 66.94063620323982, 'spark.memory.storageFraction': 0.6806932594765901, 'spark.rdd.compress': 0.37543483316785775, 'spark.reducer.maxBlocksInFlightPerAddress': 2121015947.83584, 'spark.reducer.maxReqsInFlight': 1254112510.6416812, 'spark.reducer.maxSizeInFlight': 70.69380441276745, 'spark.scheduler.mode': 0.7674748688630131, 'spark.scheduler.revive.interval': 912.1189198122489, 'spark.shuffle.compress': 0.6326158167779973, 'spark.shuffle.file.buffer': 37.399448646615426, 'spark.shuffle.io.numConnectionsPerPeer': 2.9075293340847734, 'spark.shuffle.sort.bypassMergeThreshold': 105.25454276922889, 'spark.storage.memoryMapThreshold': 4.177054769876423}
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 21 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config22 =================
2022年 11月 12日 星期六 07:07:41 CST
cmd

end before line
finish
================= config23 =================
2022年 11月 12日 星期六 07:43:51 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 32.50845169260062, 'spark.broadcast.checksum': 0.7300912110901043, 'spark.broadcast.compress': 0.4686283427461092, 'spark.default.parallelism': 337.22147482682954, 'spark.executor.cores': 4.41298822283681, 'spark.executor.instances': 8.065332402820873, 'spark.executor.memory': 12.549669562861977, 'spark.executor.memoryOverhead': 822.6553410044971, 'spark.kryoserializer.buffer': 126.50081121857703, 'spark.kryoserializer.buffer.max': 53.14248571127898, 'spark.locality.wait': 4.048372229335117, 'spark.maxRemoteBlockSizeFetchToMem': 1636270625.179293, 'spark.memory.fraction': 0.8019565828242131, 'spark.memory.offHeap.enabled': 0.46385778390029564, 'spark.memory.offHeap.size': 127.81828414635652, 'spark.memory.storageFraction': 0.6250005513968198, 'spark.rdd.compress': 0.5045191697009946, 'spark.reducer.maxBlocksInFlightPerAddress': 1797281685.9686222, 'spark.reducer.maxReqsInFlight': 1900684041.8440661, 'spark.reducer.maxSizeInFlight': 30.256117485809007, 'spark.scheduler.mode': 0.022915131322381765, 'spark.scheduler.revive.interval': 759.5411611059947, 'spark.shuffle.compress': 0.8099887106624163, 'spark.shuffle.file.buffer': 16.403320544956042, 'spark.shuffle.io.numConnectionsPerPeer': 3.6898793786149358, 'spark.shuffle.sort.bypassMergeThreshold': 374.7232906627967, 'spark.storage.memoryMapThreshold': 5.043220782279738}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 32.50845169260062, 'spark.broadcast.checksum': 0.7300912110901043, 'spark.broadcast.compress': 0.4686283427461092, 'spark.default.parallelism': 337.22147482682954, 'spark.executor.cores': 4.41298822283681, 'spark.executor.instances': 8.065332402820873, 'spark.executor.memory': 12.549669562861977, 'spark.executor.memoryOverhead': 822.6553410044971, 'spark.kryoserializer.buffer': 126.50081121857703, 'spark.kryoserializer.buffer.max': 53.14248571127898, 'spark.locality.wait': 4.048372229335117, 'spark.maxRemoteBlockSizeFetchToMem': 1636270625.179293, 'spark.memory.fraction': 0.8019565828242131, 'spark.memory.offHeap.enabled': 0.46385778390029564, 'spark.memory.offHeap.size': 127.81828414635652, 'spark.memory.storageFraction': 0.6250005513968198, 'spark.rdd.compress': 0.5045191697009946, 'spark.reducer.maxBlocksInFlightPerAddress': 1797281685.9686222, 'spark.reducer.maxReqsInFlight': 1900684041.8440661, 'spark.reducer.maxSizeInFlight': 30.256117485809007, 'spark.scheduler.mode': 0.022915131322381765, 'spark.scheduler.revive.interval': 759.5411611059947, 'spark.shuffle.compress': 0.8099887106624163, 'spark.shuffle.file.buffer': 16.403320544956042, 'spark.shuffle.io.numConnectionsPerPeer': 3.6898793786149358, 'spark.shuffle.sort.bypassMergeThreshold': 374.7232906627967, 'spark.storage.memoryMapThreshold': 5.043220782279738}
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 22 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 58.71689857799992, 'spark.broadcast.checksum': 0.6443610847569929, 'spark.broadcast.compress': 0.005239837651465851, 'spark.default.parallelism': 345.32853365431265, 'spark.executor.cores': 6.5779534182928, 'spark.executor.instances': 12.982397420224036, 'spark.executor.memory': 11.894925182674868, 'spark.executor.memoryOverhead': 1307.6405391650242, 'spark.kryoserializer.buffer': 87.53595965976325, 'spark.kryoserializer.buffer.max': 58.3154984160178, 'spark.locality.wait': 6.0447699148245295, 'spark.maxRemoteBlockSizeFetchToMem': 1795005759.4221594, 'spark.memory.fraction': 0.6409718520865635, 'spark.memory.offHeap.enabled': 0.8558283672539277, 'spark.memory.offHeap.size': 199.71838567291627, 'spark.memory.storageFraction': 0.7989283241327694, 'spark.rdd.compress': 0.2896027461868774, 'spark.reducer.maxBlocksInFlightPerAddress': 1904602481.095468, 'spark.reducer.maxReqsInFlight': 1533021283.1942072, 'spark.reducer.maxSizeInFlight': 62.76952363738606, 'spark.scheduler.mode': 0.3535348626679904, 'spark.scheduler.revive.interval': 606.8466188147905, 'spark.shuffle.compress': 0.7672845084217665, 'spark.shuffle.file.buffer': 25.876542324180836, 'spark.shuffle.io.numConnectionsPerPeer': 3.93298027090571, 'spark.shuffle.sort.bypassMergeThreshold': 397.78926123109284, 'spark.storage.memoryMapThreshold': 2.9925703081738098}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 58.71689857799992, 'spark.broadcast.checksum': 0.6443610847569929, 'spark.broadcast.compress': 0.005239837651465851, 'spark.default.parallelism': 345.32853365431265, 'spark.executor.cores': 6.5779534182928, 'spark.executor.instances': 12.982397420224036, 'spark.executor.memory': 11.894925182674868, 'spark.executor.memoryOverhead': 1307.6405391650242, 'spark.kryoserializer.buffer': 87.53595965976325, 'spark.kryoserializer.buffer.max': 58.3154984160178, 'spark.locality.wait': 6.0447699148245295, 'spark.maxRemoteBlockSizeFetchToMem': 1795005759.4221594, 'spark.memory.fraction': 0.6409718520865635, 'spark.memory.offHeap.enabled': 0.8558283672539277, 'spark.memory.offHeap.size': 199.71838567291627, 'spark.memory.storageFraction': 0.7989283241327694, 'spark.rdd.compress': 0.2896027461868774, 'spark.reducer.maxBlocksInFlightPerAddress': 1904602481.095468, 'spark.reducer.maxReqsInFlight': 1533021283.1942072, 'spark.reducer.maxSizeInFlight': 62.76952363738606, 'spark.scheduler.mode': 0.3535348626679904, 'spark.scheduler.revive.interval': 606.8466188147905, 'spark.shuffle.compress': 0.7672845084217665, 'spark.shuffle.file.buffer': 25.876542324180836, 'spark.shuffle.io.numConnectionsPerPeer': 3.93298027090571, 'spark.shuffle.sort.bypassMergeThreshold': 397.78926123109284, 'spark.storage.memoryMapThreshold': 2.9925703081738098}
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 23 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 15.274952482880204, 'spark.broadcast.checksum': 0.1989479234270667, 'spark.broadcast.compress': 0.14251833776584466, 'spark.default.parallelism': 313.1247797622002, 'spark.executor.cores': 4.079883654074864, 'spark.executor.instances': 8.665522214205444, 'spark.executor.memory': 12.047384142580462, 'spark.executor.memoryOverhead': 1480.4936320863167, 'spark.kryoserializer.buffer': 39.73083460432505, 'spark.kryoserializer.buffer.max': 54.243421806636036, 'spark.locality.wait': 2.8686309562343295, 'spark.maxRemoteBlockSizeFetchToMem': 2058720745.402297, 'spark.memory.fraction': 0.7845258072545946, 'spark.memory.offHeap.enabled': 0.5538846110514143, 'spark.memory.offHeap.size': 311.8264196307151, 'spark.memory.storageFraction': 0.8339416190527194, 'spark.rdd.compress': 0.43530595762951996, 'spark.reducer.maxBlocksInFlightPerAddress': 2065295383.80577, 'spark.reducer.maxReqsInFlight': 1831859175.226156, 'spark.reducer.maxSizeInFlight': 46.945502782333605, 'spark.scheduler.mode': 0.1262101037493587, 'spark.scheduler.revive.interval': 988.0217752338738, 'spark.shuffle.compress': 0.15983365034409336, 'spark.shuffle.file.buffer': 22.483268007029203, 'spark.shuffle.io.numConnectionsPerPeer': 2.7247270206414838, 'spark.shuffle.sort.bypassMergeThreshold': 261.68076231005887, 'spark.storage.memoryMapThreshold': 2.320763326878647}
生成测试集 - 配置失败 target -1467  conf ================= config24 =================
2022年 11月 12日 星期六 08:28:39 CST
cmd

end before line
finish
================= config25 =================
2022年 11月 12日 星期六 09:09:14 CST
cmd

end before line
finish
================= config26 =================
2022年 11月 12日 星期六 09:52:40 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 15.274952482880204, 'spark.broadcast.checksum': 0.1989479234270667, 'spark.broadcast.compress': 0.14251833776584466, 'spark.default.parallelism': 313.1247797622002, 'spark.executor.cores': 4.079883654074864, 'spark.executor.instances': 8.665522214205444, 'spark.executor.memory': 12.047384142580462, 'spark.executor.memoryOverhead': 1480.4936320863167, 'spark.kryoserializer.buffer': 39.73083460432505, 'spark.kryoserializer.buffer.max': 54.243421806636036, 'spark.locality.wait': 2.8686309562343295, 'spark.maxRemoteBlockSizeFetchToMem': 2058720745.402297, 'spark.memory.fraction': 0.7845258072545946, 'spark.memory.offHeap.enabled': 0.5538846110514143, 'spark.memory.offHeap.size': 311.8264196307151, 'spark.memory.storageFraction': 0.8339416190527194, 'spark.rdd.compress': 0.43530595762951996, 'spark.reducer.maxBlocksInFlightPerAddress': 2065295383.80577, 'spark.reducer.maxReqsInFlight': 1831859175.226156, 'spark.reducer.maxSizeInFlight': 46.945502782333605, 'spark.scheduler.mode': 0.1262101037493587, 'spark.scheduler.revive.interval': 988.0217752338738, 'spark.shuffle.compress': 0.15983365034409336, 'spark.shuffle.file.buffer': 22.483268007029203, 'spark.shuffle.io.numConnectionsPerPeer': 2.7247270206414838, 'spark.shuffle.sort.bypassMergeThreshold': 261.68076231005887, 'spark.storage.memoryMapThreshold': 2.320763326878647}
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 24 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 47.21777300038965, 'spark.broadcast.checksum': 0.18874506687718595, 'spark.broadcast.compress': 0.6438956443116628, 'spark.default.parallelism': 426.2917851728896, 'spark.executor.cores': 4.632197176249962, 'spark.executor.instances': 11.60572548864584, 'spark.executor.memory': 12.493570251475019, 'spark.executor.memoryOverhead': 1258.997852260477, 'spark.kryoserializer.buffer': 89.32422108287831, 'spark.kryoserializer.buffer.max': 60.36629942292772, 'spark.locality.wait': 7.5844582411735795, 'spark.maxRemoteBlockSizeFetchToMem': 2088758533.60918, 'spark.memory.fraction': 0.6702245561046187, 'spark.memory.offHeap.enabled': 0.7821818168314053, 'spark.memory.offHeap.size': 57.48842461380127, 'spark.memory.storageFraction': 0.8341086409959864, 'spark.rdd.compress': 0.1922500168221477, 'spark.reducer.maxBlocksInFlightPerAddress': 1497973855.6586087, 'spark.reducer.maxReqsInFlight': 1395951392.59972, 'spark.reducer.maxSizeInFlight': 27.844974902690367, 'spark.scheduler.mode': 0.9046310029362429, 'spark.scheduler.revive.interval': 685.0770887768691, 'spark.shuffle.compress': 0.5306974384761395, 'spark.shuffle.file.buffer': 31.811720508682402, 'spark.shuffle.io.numConnectionsPerPeer': 1.5286445677717526, 'spark.shuffle.sort.bypassMergeThreshold': 182.5816235557732, 'spark.storage.memoryMapThreshold': 1.6856992812908906}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 47.21777300038965, 'spark.broadcast.checksum': 0.18874506687718595, 'spark.broadcast.compress': 0.6438956443116628, 'spark.default.parallelism': 426.2917851728896, 'spark.executor.cores': 4.632197176249962, 'spark.executor.instances': 11.60572548864584, 'spark.executor.memory': 12.493570251475019, 'spark.executor.memoryOverhead': 1258.997852260477, 'spark.kryoserializer.buffer': 89.32422108287831, 'spark.kryoserializer.buffer.max': 60.36629942292772, 'spark.locality.wait': 7.5844582411735795, 'spark.maxRemoteBlockSizeFetchToMem': 2088758533.60918, 'spark.memory.fraction': 0.6702245561046187, 'spark.memory.offHeap.enabled': 0.7821818168314053, 'spark.memory.offHeap.size': 57.48842461380127, 'spark.memory.storageFraction': 0.8341086409959864, 'spark.rdd.compress': 0.1922500168221477, 'spark.reducer.maxBlocksInFlightPerAddress': 1497973855.6586087, 'spark.reducer.maxReqsInFlight': 1395951392.59972, 'spark.reducer.maxSizeInFlight': 27.844974902690367, 'spark.scheduler.mode': 0.9046310029362429, 'spark.scheduler.revive.interval': 685.0770887768691, 'spark.shuffle.compress': 0.5306974384761395, 'spark.shuffle.file.buffer': 31.811720508682402, 'spark.shuffle.io.numConnectionsPerPeer': 1.5286445677717526, 'spark.shuffle.sort.bypassMergeThreshold': 182.5816235557732, 'spark.storage.memoryMapThreshold': 1.6856992812908906}
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 25 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 33.49114539660782, 'spark.broadcast.checksum': 0.2615495518329871, 'spark.broadcast.compress': 0.3570616088827919, 'spark.default.parallelism': 232.41959860917106, 'spark.executor.cores': 6.362655518957522, 'spark.executor.instances': 8.639503260732807, 'spark.executor.memory': 13.914252942279127, 'spark.executor.memoryOverhead': 626.8879564450701, 'spark.kryoserializer.buffer': 86.95089079372633, 'spark.kryoserializer.buffer.max': 36.305152120552464, 'spark.locality.wait': 8.084046606902508, 'spark.maxRemoteBlockSizeFetchToMem': 1277329354.712544, 'spark.memory.fraction': 0.7111615913632506, 'spark.memory.offHeap.enabled': 0.7400775431590716, 'spark.memory.offHeap.size': 153.52984055527008, 'spark.memory.storageFraction': 0.7204348696747886, 'spark.rdd.compress': 0.2166172083287794, 'spark.reducer.maxBlocksInFlightPerAddress': 1888922373.767385, 'spark.reducer.maxReqsInFlight': 1849966101.526362, 'spark.reducer.maxSizeInFlight': 32.474353645299985, 'spark.scheduler.mode': 0.8619665576670734, 'spark.scheduler.revive.interval': 509.88754975817216, 'spark.shuffle.compress': 0.8602369974231152, 'spark.shuffle.file.buffer': 33.88492195715003, 'spark.shuffle.io.numConnectionsPerPeer': 2.612881888423397, 'spark.shuffle.sort.bypassMergeThreshold': 403.49877240893466, 'spark.storage.memoryMapThreshold': 7.452361015232229}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 33.49114539660782, 'spark.broadcast.checksum': 0.2615495518329871, 'spark.broadcast.compress': 0.3570616088827919, 'spark.default.parallelism': 232.41959860917106, 'spark.executor.cores': 6.362655518957522, 'spark.executor.instances': 8.639503260732807, 'spark.executor.memory': 13.914252942279127, 'spark.executor.memoryOverhead': 626.8879564450701, 'spark.kryoserializer.buffer': 86.95089079372633, 'spark.kryoserializer.buffer.max': 36.305152120552464, 'spark.locality.wait': 8.084046606902508, 'spark.maxRemoteBlockSizeFetchToMem': 1277329354.712544, 'spark.memory.fraction': 0.7111615913632506, 'spark.memory.offHeap.enabled': 0.7400775431590716, 'spark.memory.offHeap.size': 153.52984055527008, 'spark.memory.storageFraction': 0.7204348696747886, 'spark.rdd.compress': 0.2166172083287794, 'spark.reducer.maxBlocksInFlightPerAddress': 1888922373.767385, 'spark.reducer.maxReqsInFlight': 1849966101.526362, 'spark.reducer.maxSizeInFlight': 32.474353645299985, 'spark.scheduler.mode': 0.8619665576670734, 'spark.scheduler.revive.interval': 509.88754975817216, 'spark.shuffle.compress': 0.8602369974231152, 'spark.shuffle.file.buffer': 33.88492195715003, 'spark.shuffle.io.numConnectionsPerPeer': 2.612881888423397, 'spark.shuffle.sort.bypassMergeThreshold': 403.49877240893466, 'spark.storage.memoryMapThreshold': 7.452361015232229}
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 26 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config27 =================
2022年 11月 12日 星期六 10:33:31 CST
cmd

end before line
finish
================= config28 =================
2022年 11月 12日 星期六 11:29:32 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 63.214222838122446, 'spark.broadcast.checksum': 0.2780850486129828, 'spark.broadcast.compress': 0.0037936724093425855, 'spark.default.parallelism': 480.1707824944663, 'spark.executor.cores': 6.573691313613681, 'spark.executor.instances': 12.373105265115536, 'spark.executor.memory': 11.10013269752923, 'spark.executor.memoryOverhead': 1353.2370122360512, 'spark.kryoserializer.buffer': 106.93083746016731, 'spark.kryoserializer.buffer.max': 67.9880905795385, 'spark.locality.wait': 7.932902727969618, 'spark.maxRemoteBlockSizeFetchToMem': 1879718100.4500852, 'spark.memory.fraction': 0.7452844846177039, 'spark.memory.offHeap.enabled': 0.4018659239678374, 'spark.memory.offHeap.size': 714.0434117266851, 'spark.memory.storageFraction': 0.5012451431300768, 'spark.rdd.compress': 0.7748966467245978, 'spark.reducer.maxBlocksInFlightPerAddress': 2036261820.7858977, 'spark.reducer.maxReqsInFlight': 1330705107.2157965, 'spark.reducer.maxSizeInFlight': 29.796824846843027, 'spark.scheduler.mode': 0.2202839877937276, 'spark.scheduler.revive.interval': 651.0483656450491, 'spark.shuffle.compress': 0.8830285085638342, 'spark.shuffle.file.buffer': 33.381325767619025, 'spark.shuffle.io.numConnectionsPerPeer': 2.1468465984257223, 'spark.shuffle.sort.bypassMergeThreshold': 155.3418759171786, 'spark.storage.memoryMapThreshold': 3.611300167940875}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 63.214222838122446, 'spark.broadcast.checksum': 0.2780850486129828, 'spark.broadcast.compress': 0.0037936724093425855, 'spark.default.parallelism': 480.1707824944663, 'spark.executor.cores': 6.573691313613681, 'spark.executor.instances': 12.373105265115536, 'spark.executor.memory': 11.10013269752923, 'spark.executor.memoryOverhead': 1353.2370122360512, 'spark.kryoserializer.buffer': 106.93083746016731, 'spark.kryoserializer.buffer.max': 67.9880905795385, 'spark.locality.wait': 7.932902727969618, 'spark.maxRemoteBlockSizeFetchToMem': 1879718100.4500852, 'spark.memory.fraction': 0.7452844846177039, 'spark.memory.offHeap.enabled': 0.4018659239678374, 'spark.memory.offHeap.size': 714.0434117266851, 'spark.memory.storageFraction': 0.5012451431300768, 'spark.rdd.compress': 0.7748966467245978, 'spark.reducer.maxBlocksInFlightPerAddress': 2036261820.7858977, 'spark.reducer.maxReqsInFlight': 1330705107.2157965, 'spark.reducer.maxSizeInFlight': 29.796824846843027, 'spark.scheduler.mode': 0.2202839877937276, 'spark.scheduler.revive.interval': 651.0483656450491, 'spark.shuffle.compress': 0.8830285085638342, 'spark.shuffle.file.buffer': 33.381325767619025, 'spark.shuffle.io.numConnectionsPerPeer': 2.1468465984257223, 'spark.shuffle.sort.bypassMergeThreshold': 155.3418759171786, 'spark.storage.memoryMapThreshold': 3.611300167940875}
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 27 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 40.06000756395766, 'spark.broadcast.checksum': 0.3241385298974466, 'spark.broadcast.compress': 0.45736018169099846, 'spark.default.parallelism': 333.23513210498436, 'spark.executor.cores': 6.484406082194536, 'spark.executor.instances': 10.558088925417383, 'spark.executor.memory': 10.074192927053014, 'spark.executor.memoryOverhead': 1309.386070193283, 'spark.kryoserializer.buffer': 53.262277350418756, 'spark.kryoserializer.buffer.max': 76.85559909694916, 'spark.locality.wait': 3.832891185916148, 'spark.maxRemoteBlockSizeFetchToMem': 1746822484.1759062, 'spark.memory.fraction': 0.8509441898779251, 'spark.memory.offHeap.enabled': 0.4476890001456285, 'spark.memory.offHeap.size': 803.2843968429293, 'spark.memory.storageFraction': 0.6827862802246202, 'spark.rdd.compress': 0.6562293317171314, 'spark.reducer.maxBlocksInFlightPerAddress': 1215304992.0039687, 'spark.reducer.maxReqsInFlight': 1538652176.0497112, 'spark.reducer.maxSizeInFlight': 67.64697545543696, 'spark.scheduler.mode': 0.6054790010309347, 'spark.scheduler.revive.interval': 883.387293618551, 'spark.shuffle.compress': 0.5047006080958943, 'spark.shuffle.file.buffer': 31.93777999449624, 'spark.shuffle.io.numConnectionsPerPeer': 4.3715993607714, 'spark.shuffle.sort.bypassMergeThreshold': 127.1227737363815, 'spark.storage.memoryMapThreshold': 6.159450443947161}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 40.06000756395766, 'spark.broadcast.checksum': 0.3241385298974466, 'spark.broadcast.compress': 0.45736018169099846, 'spark.default.parallelism': 333.23513210498436, 'spark.executor.cores': 6.484406082194536, 'spark.executor.instances': 10.558088925417383, 'spark.executor.memory': 10.074192927053014, 'spark.executor.memoryOverhead': 1309.386070193283, 'spark.kryoserializer.buffer': 53.262277350418756, 'spark.kryoserializer.buffer.max': 76.85559909694916, 'spark.locality.wait': 3.832891185916148, 'spark.maxRemoteBlockSizeFetchToMem': 1746822484.1759062, 'spark.memory.fraction': 0.8509441898779251, 'spark.memory.offHeap.enabled': 0.4476890001456285, 'spark.memory.offHeap.size': 803.2843968429293, 'spark.memory.storageFraction': 0.6827862802246202, 'spark.rdd.compress': 0.6562293317171314, 'spark.reducer.maxBlocksInFlightPerAddress': 1215304992.0039687, 'spark.reducer.maxReqsInFlight': 1538652176.0497112, 'spark.reducer.maxSizeInFlight': 67.64697545543696, 'spark.scheduler.mode': 0.6054790010309347, 'spark.scheduler.revive.interval': 883.387293618551, 'spark.shuffle.compress': 0.5047006080958943, 'spark.shuffle.file.buffer': 31.93777999449624, 'spark.shuffle.io.numConnectionsPerPeer': 4.3715993607714, 'spark.shuffle.sort.bypassMergeThreshold': 127.1227737363815, 'spark.storage.memoryMapThreshold': 6.159450443947161}
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 28 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 60.45127967684286, 'spark.broadcast.checksum': 0.5178600481723219, 'spark.broadcast.compress': 0.1944658095278845, 'spark.default.parallelism': 454.38181773304285, 'spark.executor.cores': 4.754917427067559, 'spark.executor.instances': 12.204356218895228, 'spark.executor.memory': 11.2415656423814, 'spark.executor.memoryOverhead': 1684.8545512321812, 'spark.kryoserializer.buffer': 91.93632343065688, 'spark.kryoserializer.buffer.max': 112.44588435658201, 'spark.locality.wait': 1.0713958857507078, 'spark.maxRemoteBlockSizeFetchToMem': 2136037110.193574, 'spark.memory.fraction': 0.5310858281329546, 'spark.memory.offHeap.enabled': 0.3221295136147696, 'spark.memory.offHeap.size': 968.8600529477277, 'spark.memory.storageFraction': 0.503575640948498, 'spark.rdd.compress': 0.8227300054219355, 'spark.reducer.maxBlocksInFlightPerAddress': 1998460778.4299903, 'spark.reducer.maxReqsInFlight': 1546006563.6997178, 'spark.reducer.maxSizeInFlight': 36.275769302684694, 'spark.scheduler.mode': 0.8026895196332986, 'spark.scheduler.revive.interval': 738.9310022161105, 'spark.shuffle.compress': 0.13433860865569613, 'spark.shuffle.file.buffer': 45.69116777040034, 'spark.shuffle.io.numConnectionsPerPeer': 4.583879868026594, 'spark.shuffle.sort.bypassMergeThreshold': 296.61806000677416, 'spark.storage.memoryMapThreshold': 8.71032246866013}
生成测试集 - 配置失败 target -1467  conf ================= config29 =================
2022年 11月 12日 星期六 12:24:01 CST
cmd

end before line
finish
================= config30 =================
2022年 11月 12日 星期六 13:10:07 CST
cmd

end before line
finish
================= config31 =================
2022年 11月 12日 星期六 13:57:34 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 60.45127967684286, 'spark.broadcast.checksum': 0.5178600481723219, 'spark.broadcast.compress': 0.1944658095278845, 'spark.default.parallelism': 454.38181773304285, 'spark.executor.cores': 4.754917427067559, 'spark.executor.instances': 12.204356218895228, 'spark.executor.memory': 11.2415656423814, 'spark.executor.memoryOverhead': 1684.8545512321812, 'spark.kryoserializer.buffer': 91.93632343065688, 'spark.kryoserializer.buffer.max': 112.44588435658201, 'spark.locality.wait': 1.0713958857507078, 'spark.maxRemoteBlockSizeFetchToMem': 2136037110.193574, 'spark.memory.fraction': 0.5310858281329546, 'spark.memory.offHeap.enabled': 0.3221295136147696, 'spark.memory.offHeap.size': 968.8600529477277, 'spark.memory.storageFraction': 0.503575640948498, 'spark.rdd.compress': 0.8227300054219355, 'spark.reducer.maxBlocksInFlightPerAddress': 1998460778.4299903, 'spark.reducer.maxReqsInFlight': 1546006563.6997178, 'spark.reducer.maxSizeInFlight': 36.275769302684694, 'spark.scheduler.mode': 0.8026895196332986, 'spark.scheduler.revive.interval': 738.9310022161105, 'spark.shuffle.compress': 0.13433860865569613, 'spark.shuffle.file.buffer': 45.69116777040034, 'spark.shuffle.io.numConnectionsPerPeer': 4.583879868026594, 'spark.shuffle.sort.bypassMergeThreshold': 296.61806000677416, 'spark.storage.memoryMapThreshold': 8.71032246866013}
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 29 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 27.951837597374116, 'spark.broadcast.checksum': 0.6834649001663011, 'spark.broadcast.compress': 0.39799063940792245, 'spark.default.parallelism': 351.7226052352431, 'spark.executor.cores': 4.5686551085017815, 'spark.executor.instances': 13.789933544665484, 'spark.executor.memory': 9.765294129465529, 'spark.executor.memoryOverhead': 525.8430514355862, 'spark.kryoserializer.buffer': 45.85427842198862, 'spark.kryoserializer.buffer.max': 33.35286024247452, 'spark.locality.wait': 7.44351129516155, 'spark.maxRemoteBlockSizeFetchToMem': 1679866878.5088024, 'spark.memory.fraction': 0.8178313404739008, 'spark.memory.offHeap.enabled': 0.5070799232841364, 'spark.memory.offHeap.size': 810.8247444522535, 'spark.memory.storageFraction': 0.7783056857087358, 'spark.rdd.compress': 0.7778484768591754, 'spark.reducer.maxBlocksInFlightPerAddress': 1510199480.1602097, 'spark.reducer.maxReqsInFlight': 1769280244.2123609, 'spark.reducer.maxSizeInFlight': 32.63012628926277, 'spark.scheduler.mode': 0.321819963387904, 'spark.scheduler.revive.interval': 586.3023100598963, 'spark.shuffle.compress': 0.4086372250132624, 'spark.shuffle.file.buffer': 23.725399934899162, 'spark.shuffle.io.numConnectionsPerPeer': 2.6276879765174317, 'spark.shuffle.sort.bypassMergeThreshold': 490.0889369749248, 'spark.storage.memoryMapThreshold': 3.8828739323982813}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 27.951837597374116, 'spark.broadcast.checksum': 0.6834649001663011, 'spark.broadcast.compress': 0.39799063940792245, 'spark.default.parallelism': 351.7226052352431, 'spark.executor.cores': 4.5686551085017815, 'spark.executor.instances': 13.789933544665484, 'spark.executor.memory': 9.765294129465529, 'spark.executor.memoryOverhead': 525.8430514355862, 'spark.kryoserializer.buffer': 45.85427842198862, 'spark.kryoserializer.buffer.max': 33.35286024247452, 'spark.locality.wait': 7.44351129516155, 'spark.maxRemoteBlockSizeFetchToMem': 1679866878.5088024, 'spark.memory.fraction': 0.8178313404739008, 'spark.memory.offHeap.enabled': 0.5070799232841364, 'spark.memory.offHeap.size': 810.8247444522535, 'spark.memory.storageFraction': 0.7783056857087358, 'spark.rdd.compress': 0.7778484768591754, 'spark.reducer.maxBlocksInFlightPerAddress': 1510199480.1602097, 'spark.reducer.maxReqsInFlight': 1769280244.2123609, 'spark.reducer.maxSizeInFlight': 32.63012628926277, 'spark.scheduler.mode': 0.321819963387904, 'spark.scheduler.revive.interval': 586.3023100598963, 'spark.shuffle.compress': 0.4086372250132624, 'spark.shuffle.file.buffer': 23.725399934899162, 'spark.shuffle.io.numConnectionsPerPeer': 2.6276879765174317, 'spark.shuffle.sort.bypassMergeThreshold': 490.0889369749248, 'spark.storage.memoryMapThreshold': 3.8828739323982813}
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 30 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 62.91443858844351, 'spark.broadcast.checksum': 0.6363061258559836, 'spark.broadcast.compress': 0.375091018393911, 'spark.default.parallelism': 457.245349725079, 'spark.executor.cores': 5.858760218105721, 'spark.executor.instances': 9.512198480785036, 'spark.executor.memory': 12.757134067861326, 'spark.executor.memoryOverhead': 977.5586954745376, 'spark.kryoserializer.buffer': 66.32107206372237, 'spark.kryoserializer.buffer.max': 63.70658590640777, 'spark.locality.wait': 7.276319880518255, 'spark.maxRemoteBlockSizeFetchToMem': 1362202372.2864661, 'spark.memory.fraction': 0.8233112054821521, 'spark.memory.offHeap.enabled': 0.2952887943998478, 'spark.memory.offHeap.size': 557.1802967914058, 'spark.memory.storageFraction': 0.695168596722081, 'spark.rdd.compress': 0.8553564125953698, 'spark.reducer.maxBlocksInFlightPerAddress': 2027639493.484558, 'spark.reducer.maxReqsInFlight': 1271723110.4651887, 'spark.reducer.maxSizeInFlight': 52.09672602903605, 'spark.scheduler.mode': 0.8982050460171371, 'spark.scheduler.revive.interval': 723.0586095172148, 'spark.shuffle.compress': 0.9218683054838154, 'spark.shuffle.file.buffer': 24.92770849462307, 'spark.shuffle.io.numConnectionsPerPeer': 3.435324696775183, 'spark.shuffle.sort.bypassMergeThreshold': 372.98148390672617, 'spark.storage.memoryMapThreshold': 3.053851600154357}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 62.91443858844351, 'spark.broadcast.checksum': 0.6363061258559836, 'spark.broadcast.compress': 0.375091018393911, 'spark.default.parallelism': 457.245349725079, 'spark.executor.cores': 5.858760218105721, 'spark.executor.instances': 9.512198480785036, 'spark.executor.memory': 12.757134067861326, 'spark.executor.memoryOverhead': 977.5586954745376, 'spark.kryoserializer.buffer': 66.32107206372237, 'spark.kryoserializer.buffer.max': 63.70658590640777, 'spark.locality.wait': 7.276319880518255, 'spark.maxRemoteBlockSizeFetchToMem': 1362202372.2864661, 'spark.memory.fraction': 0.8233112054821521, 'spark.memory.offHeap.enabled': 0.2952887943998478, 'spark.memory.offHeap.size': 557.1802967914058, 'spark.memory.storageFraction': 0.695168596722081, 'spark.rdd.compress': 0.8553564125953698, 'spark.reducer.maxBlocksInFlightPerAddress': 2027639493.484558, 'spark.reducer.maxReqsInFlight': 1271723110.4651887, 'spark.reducer.maxSizeInFlight': 52.09672602903605, 'spark.scheduler.mode': 0.8982050460171371, 'spark.scheduler.revive.interval': 723.0586095172148, 'spark.shuffle.compress': 0.9218683054838154, 'spark.shuffle.file.buffer': 24.92770849462307, 'spark.shuffle.io.numConnectionsPerPeer': 3.435324696775183, 'spark.shuffle.sort.bypassMergeThreshold': 372.98148390672617, 'spark.storage.memoryMapThreshold': 3.053851600154357}
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 31 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config32 =================
2022年 11月 12日 星期六 14:54:41 CST
cmd

end before line
finish
================= config33 =================
2022年 11月 12日 星期六 15:30:22 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 2.8535857785784415, 'spark.broadcast.checksum': 0.4167239623706961, 'spark.broadcast.compress': 0.938481891856734, 'spark.default.parallelism': 302.90843294912196, 'spark.executor.cores': 6.3392328864478, 'spark.executor.instances': 9.048417876964445, 'spark.executor.memory': 10.051717017814715, 'spark.executor.memoryOverhead': 582.2434752690306, 'spark.kryoserializer.buffer': 100.8099981580521, 'spark.kryoserializer.buffer.max': 99.13353187489416, 'spark.locality.wait': 7.196475861540269, 'spark.maxRemoteBlockSizeFetchToMem': 1345823422.3943014, 'spark.memory.fraction': 0.7769440486493635, 'spark.memory.offHeap.enabled': 0.22729754091594956, 'spark.memory.offHeap.size': 434.84069471369185, 'spark.memory.storageFraction': 0.6487688486670748, 'spark.rdd.compress': 0.3553079116201222, 'spark.reducer.maxBlocksInFlightPerAddress': 1135648200.889595, 'spark.reducer.maxReqsInFlight': 1751967224.2544813, 'spark.reducer.maxSizeInFlight': 57.95119692872157, 'spark.scheduler.mode': 0.6135886945028356, 'spark.scheduler.revive.interval': 824.1563780815623, 'spark.shuffle.compress': 0.16994071421725776, 'spark.shuffle.file.buffer': 20.7822975660436, 'spark.shuffle.io.numConnectionsPerPeer': 3.0567001741035313, 'spark.shuffle.sort.bypassMergeThreshold': 450.13309054181565, 'spark.storage.memoryMapThreshold': 2.6555809739249985}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 2.8535857785784415, 'spark.broadcast.checksum': 0.4167239623706961, 'spark.broadcast.compress': 0.938481891856734, 'spark.default.parallelism': 302.90843294912196, 'spark.executor.cores': 6.3392328864478, 'spark.executor.instances': 9.048417876964445, 'spark.executor.memory': 10.051717017814715, 'spark.executor.memoryOverhead': 582.2434752690306, 'spark.kryoserializer.buffer': 100.8099981580521, 'spark.kryoserializer.buffer.max': 99.13353187489416, 'spark.locality.wait': 7.196475861540269, 'spark.maxRemoteBlockSizeFetchToMem': 1345823422.3943014, 'spark.memory.fraction': 0.7769440486493635, 'spark.memory.offHeap.enabled': 0.22729754091594956, 'spark.memory.offHeap.size': 434.84069471369185, 'spark.memory.storageFraction': 0.6487688486670748, 'spark.rdd.compress': 0.3553079116201222, 'spark.reducer.maxBlocksInFlightPerAddress': 1135648200.889595, 'spark.reducer.maxReqsInFlight': 1751967224.2544813, 'spark.reducer.maxSizeInFlight': 57.95119692872157, 'spark.scheduler.mode': 0.6135886945028356, 'spark.scheduler.revive.interval': 824.1563780815623, 'spark.shuffle.compress': 0.16994071421725776, 'spark.shuffle.file.buffer': 20.7822975660436, 'spark.shuffle.io.numConnectionsPerPeer': 3.0567001741035313, 'spark.shuffle.sort.bypassMergeThreshold': 450.13309054181565, 'spark.storage.memoryMapThreshold': 2.6555809739249985}
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 32 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 30.696025359912113, 'spark.broadcast.checksum': 0.42893233402990294, 'spark.broadcast.compress': 0.4972891859195163, 'spark.default.parallelism': 248.45323114580358, 'spark.executor.cores': 5.027321923404432, 'spark.executor.instances': 9.57128242462112, 'spark.executor.memory': 13.067161659376874, 'spark.executor.memoryOverhead': 1481.2555089594468, 'spark.kryoserializer.buffer': 72.95735919374178, 'spark.kryoserializer.buffer.max': 90.27348423574773, 'spark.locality.wait': 2.3091904923959796, 'spark.maxRemoteBlockSizeFetchToMem': 1620934544.6068068, 'spark.memory.fraction': 0.6187788343147618, 'spark.memory.offHeap.enabled': 0.8596509535692011, 'spark.memory.offHeap.size': 687.7167420481433, 'spark.memory.storageFraction': 0.7533896050489683, 'spark.rdd.compress': 0.12475130006917923, 'spark.reducer.maxBlocksInFlightPerAddress': 1579031711.0854259, 'spark.reducer.maxReqsInFlight': 2133066278.862368, 'spark.reducer.maxSizeInFlight': 69.51836035548791, 'spark.scheduler.mode': 0.6450856402604436, 'spark.scheduler.revive.interval': 575.8624355159868, 'spark.shuffle.compress': 0.639126848719905, 'spark.shuffle.file.buffer': 34.101187601405684, 'spark.shuffle.io.numConnectionsPerPeer': 2.874663350645008, 'spark.shuffle.sort.bypassMergeThreshold': 271.214987787308, 'spark.storage.memoryMapThreshold': 6.393427800922271}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 30.696025359912113, 'spark.broadcast.checksum': 0.42893233402990294, 'spark.broadcast.compress': 0.4972891859195163, 'spark.default.parallelism': 248.45323114580358, 'spark.executor.cores': 5.027321923404432, 'spark.executor.instances': 9.57128242462112, 'spark.executor.memory': 13.067161659376874, 'spark.executor.memoryOverhead': 1481.2555089594468, 'spark.kryoserializer.buffer': 72.95735919374178, 'spark.kryoserializer.buffer.max': 90.27348423574773, 'spark.locality.wait': 2.3091904923959796, 'spark.maxRemoteBlockSizeFetchToMem': 1620934544.6068068, 'spark.memory.fraction': 0.6187788343147618, 'spark.memory.offHeap.enabled': 0.8596509535692011, 'spark.memory.offHeap.size': 687.7167420481433, 'spark.memory.storageFraction': 0.7533896050489683, 'spark.rdd.compress': 0.12475130006917923, 'spark.reducer.maxBlocksInFlightPerAddress': 1579031711.0854259, 'spark.reducer.maxReqsInFlight': 2133066278.862368, 'spark.reducer.maxSizeInFlight': 69.51836035548791, 'spark.scheduler.mode': 0.6450856402604436, 'spark.scheduler.revive.interval': 575.8624355159868, 'spark.shuffle.compress': 0.639126848719905, 'spark.shuffle.file.buffer': 34.101187601405684, 'spark.shuffle.io.numConnectionsPerPeer': 2.874663350645008, 'spark.shuffle.sort.bypassMergeThreshold': 271.214987787308, 'spark.storage.memoryMapThreshold': 6.393427800922271}
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 33 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 54.69813308798986, 'spark.broadcast.checksum': 0.7511210403719374, 'spark.broadcast.compress': 0.579360540297233, 'spark.default.parallelism': 477.41125446080844, 'spark.executor.cores': 4.194219950324647, 'spark.executor.instances': 13.948079052390854, 'spark.executor.memory': 8.317967256007938, 'spark.executor.memoryOverhead': 657.5083937559676, 'spark.kryoserializer.buffer': 72.58425551787785, 'spark.kryoserializer.buffer.max': 42.3208521137761, 'spark.locality.wait': 6.613033698979317, 'spark.maxRemoteBlockSizeFetchToMem': 1125273177.9741712, 'spark.memory.fraction': 0.6138495524027768, 'spark.memory.offHeap.enabled': 0.06103668111967109, 'spark.memory.offHeap.size': 720.4037950516031, 'spark.memory.storageFraction': 0.7673824670357928, 'spark.rdd.compress': 0.3785805932506022, 'spark.reducer.maxBlocksInFlightPerAddress': 1275813871.0307505, 'spark.reducer.maxReqsInFlight': 1875832150.6594214, 'spark.reducer.maxSizeInFlight': 40.33820595674243, 'spark.scheduler.mode': 0.7953011674056428, 'spark.scheduler.revive.interval': 743.9504695898102, 'spark.shuffle.compress': 0.5256694443509794, 'spark.shuffle.file.buffer': 16.91170718373015, 'spark.shuffle.io.numConnectionsPerPeer': 3.576928079516127, 'spark.shuffle.sort.bypassMergeThreshold': 240.26260097286695, 'spark.storage.memoryMapThreshold': 3.0628452456285915}
生成测试集 - 配置失败 target -1467  conf ================= config34 =================
2022年 11月 12日 星期六 16:27:48 CST
cmd

end before line
finish
================= config35 =================
2022年 11月 12日 星期六 17:09:24 CST
cmd

end before line
finish
================= config36 =================
2022年 11月 12日 星期六 17:59:06 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 54.69813308798986, 'spark.broadcast.checksum': 0.7511210403719374, 'spark.broadcast.compress': 0.579360540297233, 'spark.default.parallelism': 477.41125446080844, 'spark.executor.cores': 4.194219950324647, 'spark.executor.instances': 13.948079052390854, 'spark.executor.memory': 8.317967256007938, 'spark.executor.memoryOverhead': 657.5083937559676, 'spark.kryoserializer.buffer': 72.58425551787785, 'spark.kryoserializer.buffer.max': 42.3208521137761, 'spark.locality.wait': 6.613033698979317, 'spark.maxRemoteBlockSizeFetchToMem': 1125273177.9741712, 'spark.memory.fraction': 0.6138495524027768, 'spark.memory.offHeap.enabled': 0.06103668111967109, 'spark.memory.offHeap.size': 720.4037950516031, 'spark.memory.storageFraction': 0.7673824670357928, 'spark.rdd.compress': 0.3785805932506022, 'spark.reducer.maxBlocksInFlightPerAddress': 1275813871.0307505, 'spark.reducer.maxReqsInFlight': 1875832150.6594214, 'spark.reducer.maxSizeInFlight': 40.33820595674243, 'spark.scheduler.mode': 0.7953011674056428, 'spark.scheduler.revive.interval': 743.9504695898102, 'spark.shuffle.compress': 0.5256694443509794, 'spark.shuffle.file.buffer': 16.91170718373015, 'spark.shuffle.io.numConnectionsPerPeer': 3.576928079516127, 'spark.shuffle.sort.bypassMergeThreshold': 240.26260097286695, 'spark.storage.memoryMapThreshold': 3.0628452456285915}
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 34 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 28.900769325125438, 'spark.broadcast.checksum': 0.3824674572709176, 'spark.broadcast.compress': 0.46978904008636024, 'spark.default.parallelism': 493.8450062539419, 'spark.executor.cores': 5.093134211104691, 'spark.executor.instances': 12.646460800016236, 'spark.executor.memory': 11.316605579299356, 'spark.executor.memoryOverhead': 1602.998723166359, 'spark.kryoserializer.buffer': 66.0754737103589, 'spark.kryoserializer.buffer.max': 55.56979329790472, 'spark.locality.wait': 9.199173156912714, 'spark.maxRemoteBlockSizeFetchToMem': 1120486115.6289885, 'spark.memory.fraction': 0.880301371224401, 'spark.memory.offHeap.enabled': 0.5564069156709253, 'spark.memory.offHeap.size': 385.3959338875776, 'spark.memory.storageFraction': 0.8980209289356444, 'spark.rdd.compress': 0.05836264614763165, 'spark.reducer.maxBlocksInFlightPerAddress': 1628551052.2092762, 'spark.reducer.maxReqsInFlight': 1107132053.5207057, 'spark.reducer.maxSizeInFlight': 51.41643548093921, 'spark.scheduler.mode': 0.18046850899511557, 'spark.scheduler.revive.interval': 815.4796001697653, 'spark.shuffle.compress': 0.9809236757505815, 'spark.shuffle.file.buffer': 43.99688163879619, 'spark.shuffle.io.numConnectionsPerPeer': 2.8073449976834826, 'spark.shuffle.sort.bypassMergeThreshold': 383.3843480206869, 'spark.storage.memoryMapThreshold': 7.997218750028703}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 28.900769325125438, 'spark.broadcast.checksum': 0.3824674572709176, 'spark.broadcast.compress': 0.46978904008636024, 'spark.default.parallelism': 493.8450062539419, 'spark.executor.cores': 5.093134211104691, 'spark.executor.instances': 12.646460800016236, 'spark.executor.memory': 11.316605579299356, 'spark.executor.memoryOverhead': 1602.998723166359, 'spark.kryoserializer.buffer': 66.0754737103589, 'spark.kryoserializer.buffer.max': 55.56979329790472, 'spark.locality.wait': 9.199173156912714, 'spark.maxRemoteBlockSizeFetchToMem': 1120486115.6289885, 'spark.memory.fraction': 0.880301371224401, 'spark.memory.offHeap.enabled': 0.5564069156709253, 'spark.memory.offHeap.size': 385.3959338875776, 'spark.memory.storageFraction': 0.8980209289356444, 'spark.rdd.compress': 0.05836264614763165, 'spark.reducer.maxBlocksInFlightPerAddress': 1628551052.2092762, 'spark.reducer.maxReqsInFlight': 1107132053.5207057, 'spark.reducer.maxSizeInFlight': 51.41643548093921, 'spark.scheduler.mode': 0.18046850899511557, 'spark.scheduler.revive.interval': 815.4796001697653, 'spark.shuffle.compress': 0.9809236757505815, 'spark.shuffle.file.buffer': 43.99688163879619, 'spark.shuffle.io.numConnectionsPerPeer': 2.8073449976834826, 'spark.shuffle.sort.bypassMergeThreshold': 383.3843480206869, 'spark.storage.memoryMapThreshold': 7.997218750028703}
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 35 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 32.68027121931894, 'spark.broadcast.checksum': 0.5285334901775651, 'spark.broadcast.compress': 0.1507843983721926, 'spark.default.parallelism': 310.8199776835719, 'spark.executor.cores': 4.42666375921836, 'spark.executor.instances': 12.361362520067376, 'spark.executor.memory': 10.86207796641358, 'spark.executor.memoryOverhead': 999.4128851249756, 'spark.kryoserializer.buffer': 117.05580523187372, 'spark.kryoserializer.buffer.max': 82.6514021419099, 'spark.locality.wait': 4.681817487251739, 'spark.maxRemoteBlockSizeFetchToMem': 1362462108.553297, 'spark.memory.fraction': 0.528804814067908, 'spark.memory.offHeap.enabled': 0.4181361337253158, 'spark.memory.offHeap.size': 26.371565984341373, 'spark.memory.storageFraction': 0.6164615762209712, 'spark.rdd.compress': 0.5035095098483965, 'spark.reducer.maxBlocksInFlightPerAddress': 2110904554.096187, 'spark.reducer.maxReqsInFlight': 1191190832.800655, 'spark.reducer.maxSizeInFlight': 56.305970602397856, 'spark.scheduler.mode': 0.49993237109919997, 'spark.scheduler.revive.interval': 888.5491146378915, 'spark.shuffle.compress': 0.14360699787420927, 'spark.shuffle.file.buffer': 18.662484365948018, 'spark.shuffle.io.numConnectionsPerPeer': 2.596874421409815, 'spark.shuffle.sort.bypassMergeThreshold': 418.78490079196007, 'spark.storage.memoryMapThreshold': 2.725081650189011}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 32.68027121931894, 'spark.broadcast.checksum': 0.5285334901775651, 'spark.broadcast.compress': 0.1507843983721926, 'spark.default.parallelism': 310.8199776835719, 'spark.executor.cores': 4.42666375921836, 'spark.executor.instances': 12.361362520067376, 'spark.executor.memory': 10.86207796641358, 'spark.executor.memoryOverhead': 999.4128851249756, 'spark.kryoserializer.buffer': 117.05580523187372, 'spark.kryoserializer.buffer.max': 82.6514021419099, 'spark.locality.wait': 4.681817487251739, 'spark.maxRemoteBlockSizeFetchToMem': 1362462108.553297, 'spark.memory.fraction': 0.528804814067908, 'spark.memory.offHeap.enabled': 0.4181361337253158, 'spark.memory.offHeap.size': 26.371565984341373, 'spark.memory.storageFraction': 0.6164615762209712, 'spark.rdd.compress': 0.5035095098483965, 'spark.reducer.maxBlocksInFlightPerAddress': 2110904554.096187, 'spark.reducer.maxReqsInFlight': 1191190832.800655, 'spark.reducer.maxSizeInFlight': 56.305970602397856, 'spark.scheduler.mode': 0.49993237109919997, 'spark.scheduler.revive.interval': 888.5491146378915, 'spark.shuffle.compress': 0.14360699787420927, 'spark.shuffle.file.buffer': 18.662484365948018, 'spark.shuffle.io.numConnectionsPerPeer': 2.596874421409815, 'spark.shuffle.sort.bypassMergeThreshold': 418.78490079196007, 'spark.storage.memoryMapThreshold': 2.725081650189011}
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 36 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config37 =================
2022年 11月 12日 星期六 18:30:43 CST
cmd

end before line
finish
================= config38 =================
2022年 11月 12日 星期六 19:01:53 CST
cmd

end before line
finish
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 49.60218591313099, 'spark.broadcast.checksum': 0.2902979970618682, 'spark.broadcast.compress': 0.21689148761179533, 'spark.default.parallelism': 205.01467672310193, 'spark.executor.cores': 5.195977179767136, 'spark.executor.instances': 10.286488947760715, 'spark.executor.memory': 11.956069617172188, 'spark.executor.memoryOverhead': 481.2291270449009, 'spark.kryoserializer.buffer': 46.649982756058094, 'spark.kryoserializer.buffer.max': 33.59128475848968, 'spark.locality.wait': 2.0241672080266615, 'spark.maxRemoteBlockSizeFetchToMem': 1773594806.2286592, 'spark.memory.fraction': 0.6610627408699676, 'spark.memory.offHeap.enabled': 0.32102631416731586, 'spark.memory.offHeap.size': 571.301882105623, 'spark.memory.storageFraction': 0.89738418523994, 'spark.rdd.compress': 0.8344865140180296, 'spark.reducer.maxBlocksInFlightPerAddress': 1824956494.9824138, 'spark.reducer.maxReqsInFlight': 2059714475.3983226, 'spark.reducer.maxSizeInFlight': 25.906977920788073, 'spark.scheduler.mode': 0.07033344161552524, 'spark.scheduler.revive.interval': 737.0031449940273, 'spark.shuffle.compress': 0.3491674129570773, 'spark.shuffle.file.buffer': 45.99206598811037, 'spark.shuffle.io.numConnectionsPerPeer': 2.9582598445806743, 'spark.shuffle.sort.bypassMergeThreshold': 315.8596440373402, 'spark.storage.memoryMapThreshold': 9.057343291580988}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 49.60218591313099, 'spark.broadcast.checksum': 0.2902979970618682, 'spark.broadcast.compress': 0.21689148761179533, 'spark.default.parallelism': 205.01467672310193, 'spark.executor.cores': 5.195977179767136, 'spark.executor.instances': 10.286488947760715, 'spark.executor.memory': 11.956069617172188, 'spark.executor.memoryOverhead': 481.2291270449009, 'spark.kryoserializer.buffer': 46.649982756058094, 'spark.kryoserializer.buffer.max': 33.59128475848968, 'spark.locality.wait': 2.0241672080266615, 'spark.maxRemoteBlockSizeFetchToMem': 1773594806.2286592, 'spark.memory.fraction': 0.6610627408699676, 'spark.memory.offHeap.enabled': 0.32102631416731586, 'spark.memory.offHeap.size': 571.301882105623, 'spark.memory.storageFraction': 0.89738418523994, 'spark.rdd.compress': 0.8344865140180296, 'spark.reducer.maxBlocksInFlightPerAddress': 1824956494.9824138, 'spark.reducer.maxReqsInFlight': 2059714475.3983226, 'spark.reducer.maxSizeInFlight': 25.906977920788073, 'spark.scheduler.mode': 0.07033344161552524, 'spark.scheduler.revive.interval': 737.0031449940273, 'spark.shuffle.compress': 0.3491674129570773, 'spark.shuffle.file.buffer': 45.99206598811037, 'spark.shuffle.io.numConnectionsPerPeer': 2.9582598445806743, 'spark.shuffle.sort.bypassMergeThreshold': 315.8596440373402, 'spark.storage.memoryMapThreshold': 9.057343291580988}
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 37 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 29.691372841068812, 'spark.broadcast.checksum': 0.8770343892703519, 'spark.broadcast.compress': 0.25358174937162836, 'spark.default.parallelism': 282.14291124743255, 'spark.executor.cores': 4.985084170262771, 'spark.executor.instances': 11.28538562288572, 'spark.executor.memory': 9.320772044161888, 'spark.executor.memoryOverhead': 1304.5293935524257, 'spark.kryoserializer.buffer': 45.70815514908804, 'spark.kryoserializer.buffer.max': 41.03362635196538, 'spark.locality.wait': 8.8317257158484, 'spark.maxRemoteBlockSizeFetchToMem': 1328077340.1674187, 'spark.memory.fraction': 0.6544016044090382, 'spark.memory.offHeap.enabled': 0.5715420927253323, 'spark.memory.offHeap.size': 538.4212172303053, 'spark.memory.storageFraction': 0.5304095517768428, 'spark.rdd.compress': 0.8741259355980283, 'spark.reducer.maxBlocksInFlightPerAddress': 2095015916.7922544, 'spark.reducer.maxReqsInFlight': 1946164897.7978349, 'spark.reducer.maxSizeInFlight': 37.622488077449965, 'spark.scheduler.mode': 0.5278467961179595, 'spark.scheduler.revive.interval': 669.7083620088047, 'spark.shuffle.compress': 0.5546673107876667, 'spark.shuffle.file.buffer': 47.18091100521608, 'spark.shuffle.io.numConnectionsPerPeer': 2.2468116708759256, 'spark.shuffle.sort.bypassMergeThreshold': 367.51864236914787, 'spark.storage.memoryMapThreshold': 3.933704865780873}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 29.691372841068812, 'spark.broadcast.checksum': 0.8770343892703519, 'spark.broadcast.compress': 0.25358174937162836, 'spark.default.parallelism': 282.14291124743255, 'spark.executor.cores': 4.985084170262771, 'spark.executor.instances': 11.28538562288572, 'spark.executor.memory': 9.320772044161888, 'spark.executor.memoryOverhead': 1304.5293935524257, 'spark.kryoserializer.buffer': 45.70815514908804, 'spark.kryoserializer.buffer.max': 41.03362635196538, 'spark.locality.wait': 8.8317257158484, 'spark.maxRemoteBlockSizeFetchToMem': 1328077340.1674187, 'spark.memory.fraction': 0.6544016044090382, 'spark.memory.offHeap.enabled': 0.5715420927253323, 'spark.memory.offHeap.size': 538.4212172303053, 'spark.memory.storageFraction': 0.5304095517768428, 'spark.rdd.compress': 0.8741259355980283, 'spark.reducer.maxBlocksInFlightPerAddress': 2095015916.7922544, 'spark.reducer.maxReqsInFlight': 1946164897.7978349, 'spark.reducer.maxSizeInFlight': 37.622488077449965, 'spark.scheduler.mode': 0.5278467961179595, 'spark.scheduler.revive.interval': 669.7083620088047, 'spark.shuffle.compress': 0.5546673107876667, 'spark.shuffle.file.buffer': 47.18091100521608, 'spark.shuffle.io.numConnectionsPerPeer': 2.2468116708759256, 'spark.shuffle.sort.bypassMergeThreshold': 367.51864236914787, 'spark.storage.memoryMapThreshold': 3.933704865780873}
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 38 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 50.017590492934936, 'spark.broadcast.checksum': 0.3258099666132048, 'spark.broadcast.compress': 0.889827341447375, 'spark.default.parallelism': 425.51231627578005, 'spark.executor.cores': 6.287896286335332, 'spark.executor.instances': 10.816874171359554, 'spark.executor.memory': 9.264587014812232, 'spark.executor.memoryOverhead': 440.86233409937995, 'spark.kryoserializer.buffer': 62.89556479714347, 'spark.kryoserializer.buffer.max': 35.56281579142346, 'spark.locality.wait': 7.244698702365097, 'spark.maxRemoteBlockSizeFetchToMem': 1793524261.3999915, 'spark.memory.fraction': 0.67218871309799, 'spark.memory.offHeap.enabled': 0.767788977658173, 'spark.memory.offHeap.size': 548.8726986133132, 'spark.memory.storageFraction': 0.5159439706541811, 'spark.rdd.compress': 0.13479311796067905, 'spark.reducer.maxBlocksInFlightPerAddress': 1281421100.0697904, 'spark.reducer.maxReqsInFlight': 1434158085.1133044, 'spark.reducer.maxSizeInFlight': 26.511021428998884, 'spark.scheduler.mode': 0.6051167805003662, 'spark.scheduler.revive.interval': 756.0305137619594, 'spark.shuffle.compress': 0.6174610120171561, 'spark.shuffle.file.buffer': 29.83537903245901, 'spark.shuffle.io.numConnectionsPerPeer': 4.390801872949751, 'spark.shuffle.sort.bypassMergeThreshold': 281.62362242366055, 'spark.storage.memoryMapThreshold': 1.138631678127288}
生成测试集 - 配置失败 target -1467  conf ================= config39 =================
2022年 11月 12日 星期六 19:51:32 CST
cmd

end before line
finish
================= config40 =================
2022年 11月 12日 星期六 20:34:28 CST
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 11月 12日 星期六 21:27:39 CST
cmd

end before line
finish
================= config41 =================
2022年 11月 12日 星期六 21:32:51 CST
cmd

end before line
finish
{'spark.broadcast.blockSize': 50.017590492934936, 'spark.broadcast.checksum': 0.3258099666132048, 'spark.broadcast.compress': 0.889827341447375, 'spark.default.parallelism': 425.51231627578005, 'spark.executor.cores': 6.287896286335332, 'spark.executor.instances': 10.816874171359554, 'spark.executor.memory': 9.264587014812232, 'spark.executor.memoryOverhead': 440.86233409937995, 'spark.kryoserializer.buffer': 62.89556479714347, 'spark.kryoserializer.buffer.max': 35.56281579142346, 'spark.locality.wait': 7.244698702365097, 'spark.maxRemoteBlockSizeFetchToMem': 1793524261.3999915, 'spark.memory.fraction': 0.67218871309799, 'spark.memory.offHeap.enabled': 0.767788977658173, 'spark.memory.offHeap.size': 548.8726986133132, 'spark.memory.storageFraction': 0.5159439706541811, 'spark.rdd.compress': 0.13479311796067905, 'spark.reducer.maxBlocksInFlightPerAddress': 1281421100.0697904, 'spark.reducer.maxReqsInFlight': 1434158085.1133044, 'spark.reducer.maxSizeInFlight': 26.511021428998884, 'spark.scheduler.mode': 0.6051167805003662, 'spark.scheduler.revive.interval': 756.0305137619594, 'spark.shuffle.compress': 0.6174610120171561, 'spark.shuffle.file.buffer': 29.83537903245901, 'spark.shuffle.io.numConnectionsPerPeer': 4.390801872949751, 'spark.shuffle.sort.bypassMergeThreshold': 281.62362242366055, 'spark.storage.memoryMapThreshold': 1.138631678127288}
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 39 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 56.130225203720165, 'spark.broadcast.checksum': 0.6562015477440989, 'spark.broadcast.compress': 0.823003040648471, 'spark.default.parallelism': 485.5327079101555, 'spark.executor.cores': 4.152737150550662, 'spark.executor.instances': 9.410431184546088, 'spark.executor.memory': 8.380060660738039, 'spark.executor.memoryOverhead': 962.0929617504902, 'spark.kryoserializer.buffer': 114.9275979681394, 'spark.kryoserializer.buffer.max': 39.83590234064654, 'spark.locality.wait': 5.258007575972906, 'spark.maxRemoteBlockSizeFetchToMem': 1208542422.577615, 'spark.memory.fraction': 0.8091542408668471, 'spark.memory.offHeap.enabled': 0.8414221567958434, 'spark.memory.offHeap.size': 44.329920702626396, 'spark.memory.storageFraction': 0.694576297268158, 'spark.rdd.compress': 0.23941104413775594, 'spark.reducer.maxBlocksInFlightPerAddress': 2096452758.667498, 'spark.reducer.maxReqsInFlight': 2087238814.8167262, 'spark.reducer.maxSizeInFlight': 53.46883211446564, 'spark.scheduler.mode': 0.9734873973251963, 'spark.scheduler.revive.interval': 672.4306718581255, 'spark.shuffle.compress': 0.8978507176676818, 'spark.shuffle.file.buffer': 29.907039149072304, 'spark.shuffle.io.numConnectionsPerPeer': 1.9432585485900549, 'spark.shuffle.sort.bypassMergeThreshold': 476.33118528055974, 'spark.storage.memoryMapThreshold': 7.157962458849048}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 56.130225203720165, 'spark.broadcast.checksum': 0.6562015477440989, 'spark.broadcast.compress': 0.823003040648471, 'spark.default.parallelism': 485.5327079101555, 'spark.executor.cores': 4.152737150550662, 'spark.executor.instances': 9.410431184546088, 'spark.executor.memory': 8.380060660738039, 'spark.executor.memoryOverhead': 962.0929617504902, 'spark.kryoserializer.buffer': 114.9275979681394, 'spark.kryoserializer.buffer.max': 39.83590234064654, 'spark.locality.wait': 5.258007575972906, 'spark.maxRemoteBlockSizeFetchToMem': 1208542422.577615, 'spark.memory.fraction': 0.8091542408668471, 'spark.memory.offHeap.enabled': 0.8414221567958434, 'spark.memory.offHeap.size': 44.329920702626396, 'spark.memory.storageFraction': 0.694576297268158, 'spark.rdd.compress': 0.23941104413775594, 'spark.reducer.maxBlocksInFlightPerAddress': 2096452758.667498, 'spark.reducer.maxReqsInFlight': 2087238814.8167262, 'spark.reducer.maxSizeInFlight': 53.46883211446564, 'spark.scheduler.mode': 0.9734873973251963, 'spark.scheduler.revive.interval': 672.4306718581255, 'spark.shuffle.compress': 0.8978507176676818, 'spark.shuffle.file.buffer': 29.907039149072304, 'spark.shuffle.io.numConnectionsPerPeer': 1.9432585485900549, 'spark.shuffle.sort.bypassMergeThreshold': 476.33118528055974, 'spark.storage.memoryMapThreshold': 7.157962458849048}
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 40 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
target == int(min_runtime * 10) 该配置执行失败，需要使用gan生成一个样本 	{'spark.broadcast.blockSize': 6.024518291026018, 'spark.broadcast.checksum': 0.8704248568230661, 'spark.broadcast.compress': 0.7013802946333463, 'spark.default.parallelism': 381.4780618922845, 'spark.executor.cores': 6.1971246975379914, 'spark.executor.instances': 9.520634254998685, 'spark.executor.memory': 11.602933731647266, 'spark.executor.memoryOverhead': 1500.8428975097295, 'spark.kryoserializer.buffer': 37.194911391103986, 'spark.kryoserializer.buffer.max': 44.52902444856953, 'spark.locality.wait': 8.582012289607722, 'spark.maxRemoteBlockSizeFetchToMem': 1737685230.298447, 'spark.memory.fraction': 0.7125151241924232, 'spark.memory.offHeap.enabled': 0.2482907289970986, 'spark.memory.offHeap.size': 302.1604610554838, 'spark.memory.storageFraction': 0.8490744659677848, 'spark.rdd.compress': 0.42166593484970927, 'spark.reducer.maxBlocksInFlightPerAddress': 1142923283.1468332, 'spark.reducer.maxReqsInFlight': 2036872207.6338384, 'spark.reducer.maxSizeInFlight': 33.76227997555445, 'spark.scheduler.mode': 0.8262275354923914, 'spark.scheduler.revive.interval': 940.8853115414037, 'spark.shuffle.compress': 0.48675074481833813, 'spark.shuffle.file.buffer': 35.15087017934836, 'spark.shuffle.io.numConnectionsPerPeer': 3.109069825941668, 'spark.shuffle.sort.bypassMergeThreshold': 349.9285176741996, 'spark.storage.memoryMapThreshold': 8.695375492126164}
生成测试集 - 配置失败 target -1467  conf {'spark.broadcast.blockSize': 6.024518291026018, 'spark.broadcast.checksum': 0.8704248568230661, 'spark.broadcast.compress': 0.7013802946333463, 'spark.default.parallelism': 381.4780618922845, 'spark.executor.cores': 6.1971246975379914, 'spark.executor.instances': 9.520634254998685, 'spark.executor.memory': 11.602933731647266, 'spark.executor.memoryOverhead': 1500.8428975097295, 'spark.kryoserializer.buffer': 37.194911391103986, 'spark.kryoserializer.buffer.max': 44.52902444856953, 'spark.locality.wait': 8.582012289607722, 'spark.maxRemoteBlockSizeFetchToMem': 1737685230.298447, 'spark.memory.fraction': 0.7125151241924232, 'spark.memory.offHeap.enabled': 0.2482907289970986, 'spark.memory.offHeap.size': 302.1604610554838, 'spark.memory.storageFraction': 0.8490744659677848, 'spark.rdd.compress': 0.42166593484970927, 'spark.reducer.maxBlocksInFlightPerAddress': 1142923283.1468332, 'spark.reducer.maxReqsInFlight': 2036872207.6338384, 'spark.reducer.maxSizeInFlight': 33.76227997555445, 'spark.scheduler.mode': 0.8262275354923914, 'spark.scheduler.revive.interval': 940.8853115414037, 'spark.shuffle.compress': 0.48675074481833813, 'spark.shuffle.file.buffer': 35.15087017934836, 'spark.shuffle.io.numConnectionsPerPeer': 3.109069825941668, 'spark.shuffle.sort.bypassMergeThreshold': 349.9285176741996, 'spark.storage.memoryMapThreshold': 8.695375492126164}
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 41 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行成功
================= config42 =================
2022年 11月 12日 星期六 22:04:44 CST
cmd

end before line
finish
================= config2 =================
2022年 11月 12日 星期六 22:24:41 CST
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 11月 13日 星期日 07:57:14 CST
cmd

end before line
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/common/start_benchmark.py", line 33, in <module>
    for line in p.stderr:
KeyboardInterrupt
benchmark = terasort-20G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：terasort  默认配置执行结果为 2234.476 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 4468
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行失败
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 194, in probe
    target = self._cache[_hashable(x)]
KeyError: (27.85536429155959, 0.7203244934421581, 0.00011437481734488664, 290.69977178955196, 4.4402676724513395, 8.554031568612787, 9.117561268266025, 857.7637567760185, 70.08967752614431, 83.72640646432227, 4.772750629629654, 1809490227.7801933, 0.581780899892607, 0.8781174363909454, 28.04489543467639, 0.768187004071361, 0.41730480236712697, 1673630458.4455886, 1224481150.5130224, 33.508871476074184, 0.8007445686755367, 984.1307878596988, 0.31342417815924284, 38.15432370141805, 4.505556609184153, 457.8426654015389, 1.7653979023280013)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 372, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 264, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 230, in getTestSamples
    success, target = self._space.probe(params)
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 198, in probe
    target = self.target_func(**params)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 46, in black_box_function
    return -schafferRun(i)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 281, in schafferRun
    runtime = run(configNum)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 109, in run
    time.sleep(3)
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 11月 13日 星期日 08:36:35 CST
cmd

end before line
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/common/start_benchmark.py", line 33, in <module>
    for line in p.stderr:
KeyboardInterrupt
benchmark = terasort-20G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：terasort  默认配置执行结果为 2234.476 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 4468
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行失败
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 194, in probe
    target = self._cache[_hashable(x)]
KeyError: (27.85536429155959, 0.7203244934421581, 0.00011437481734488664, 290.69977178955196, 4.4402676724513395, 8.554031568612787, 9.117561268266025, 857.7637567760185, 70.08967752614431, 83.72640646432227, 4.772750629629654, 1809490227.7801933, 0.581780899892607, 0.8781174363909454, 28.04489543467639, 0.768187004071361, 0.41730480236712697, 1673630458.4455886, 1224481150.5130224, 33.508871476074184, 0.8007445686755367, 984.1307878596988, 0.31342417815924284, 38.15432370141805, 4.505556609184153, 457.8426654015389, 1.7653979023280013)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 372, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 264, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 230, in getTestSamples
    success, target = self._space.probe(params)
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 198, in probe
    target = self.target_func(**params)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 46, in black_box_function
    return -schafferRun(i)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 281, in schafferRun
    runtime = run(configNum)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 109, in run
    time.sleep(3)
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_terasort.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 11月 13日 星期日 08:46:07 CST
cmd

end before line
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/common/start_benchmark.py", line 33, in <module>
    for line in p.stderr:
KeyboardInterrupt
benchmark = terasort-20G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：terasort  默认配置执行结果为 2234.476 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-terasort.sh	将stop_time修改为 4468
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                 vital_params
0                   spark.broadcast.blockSize
1                    spark.broadcast.checksum
2                    spark.broadcast.compress
3                   spark.default.parallelism
4                        spark.executor.cores
5                    spark.executor.instances
6                       spark.executor.memory
7               spark.executor.memoryOverhead
8                 spark.kryoserializer.buffer
9             spark.kryoserializer.buffer.max
10                        spark.locality.wait
11         spark.maxRemoteBlockSizeFetchToMem
12                      spark.memory.fraction
13               spark.memory.offHeap.enabled
14                  spark.memory.offHeap.size
15               spark.memory.storageFraction
16                         spark.rdd.compress
17  spark.reducer.maxBlocksInFlightPerAddress
18              spark.reducer.maxReqsInFlight
19              spark.reducer.maxSizeInFlight
20                       spark.scheduler.mode
21            spark.scheduler.revive.interval
22                     spark.shuffle.compress
23                  spark.shuffle.file.buffer
24     spark.shuffle.io.numConnectionsPerPeer
25    spark.shuffle.sort.bypassMergeThreshold
26           spark.storage.memoryMapThreshold
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/terasort-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/terasort-20G 20G
run_cmd命令执行失败
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 194, in probe
    target = self._cache[_hashable(x)]
KeyError: (27.85536429155959, 0.7203244934421581, 0.00011437481734488664, 290.69977178955196, 4.4402676724513395, 8.554031568612787, 9.117561268266025, 857.7637567760185, 70.08967752614431, 83.72640646432227, 4.772750629629654, 1809490227.7801933, 0.581780899892607, 0.8781174363909454, 28.04489543467639, 0.768187004071361, 0.41730480236712697, 1673630458.4455886, 1224481150.5130224, 33.508871476074184, 0.8007445686755367, 984.1307878596988, 0.31342417815924284, 38.15432370141805, 4.505556609184153, 457.8426654015389, 1.7653979023280013)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 372, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 264, in maximize
    self.getTestSamples() # 生成测试集
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 230, in getTestSamples
    success, target = self._space.probe(params)
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 198, in probe
    target = self.target_func(**params)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 46, in black_box_function
    return -schafferRun(i)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 281, in schafferRun
    runtime = run(configNum)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 109, in run
    time.sleep(3)
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/config/tpch-50G" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/logs_tpch.json" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/GAN*" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/SnetConfig/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/dataset/" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 12月 08日 星期四 19:07:18 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config1/tpch-times.txt'
================= config2 =================
2022年 12月 08日 星期四 19:07:25 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config2/tpch-times.txt'
================= config3 =================
2022年 12月 08日 星期四 19:07:33 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config3/tpch-times.txt'
================= config4 =================
2022年 12月 08日 星期四 19:07:40 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config4/tpch-times.txt'
benchmark = tpch-50G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：tpch  默认配置执行结果为 4184.0 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 8368
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                    vital_params
0                   spark.memory.offHeap.enabled
1                      spark.memory.offHeap.size
2                          spark.executor.memory
3                           spark.executor.cores
4                  spark.executor.memoryOverhead
5                       spark.executor.instances
6                      spark.broadcast.blockSize
7                       spark.broadcast.checksum
8                       spark.broadcast.compress
9                      spark.default.parallelism
10                   spark.kryoserializer.buffer
11               spark.kryoserializer.buffer.max
12                           spark.locality.wait
13            spark.maxRemoteBlockSizeFetchToMem
14                         spark.memory.fraction
15                  spark.memory.storageFraction
16                            spark.rdd.compress
17     spark.reducer.maxBlocksInFlightPerAddress
18                 spark.reducer.maxSizeInFlight
19               spark.scheduler.revive.interval
20                     spark.shuffle.file.buffer
21        spark.shuffle.io.numConnectionsPerPeer
22       spark.shuffle.sort.bypassMergeThreshold
23              spark.storage.memoryMapThreshold
24                  spark.sql.shuffle.partitions
25          spark.sql.autoBroadcastJoinThreshold
26   spark.sql.inMemoryColumnarStorage.batchSize
27  spark.sql.inMemoryColumnarStorage.compressed
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669332036.0
1669333306.0
1270.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 6350
生成测试集 - 配置成功 target -1270.0  conf {'spark.broadcast.blockSize': 45.34470415048237, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 1.293511781634226, 'spark.executor.instances': 4.369354379075191, 'spark.executor.memory': 3.7450408455106836, 'spark.executor.memoryOverhead': 554.3614384322225, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 6.515167086419769, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxSizeInFlight': 44.492382035047484, 'spark.scheduler.revive.interval': 599.0507445424394, 'spark.shuffle.file.buffer': 41.62382619761718, 'spark.shuffle.io.numConnectionsPerPeer': 2.936523151438795, 'spark.shuffle.sort.bypassMergeThreshold': 212.68483563184856, 'spark.sql.autoBroadcastJoinThreshold': 12502408.790480666, 'spark.sql.inMemoryColumnarStorage.batchSize': 13763.891522960383, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8946066635038473, 'spark.sql.shuffle.partitions': 262.7566317054667, 'spark.storage.memoryMapThreshold': 1.1171643496986472}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 2 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669160794.0
1669161477.0
683.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3415
生成测试集 - 配置成功 target -683.0  conf {'spark.broadcast.blockSize': 37.43457342606621, 'spark.broadcast.checksum': 0.8781425034294131, 'spark.broadcast.compress': 0.0983468338330501, 'spark.default.parallelism': 326.3322875015157, 'spark.executor.cores': 2.915779060301004, 'spark.executor.instances': 6.132661139892068, 'spark.executor.memory': 5.767508455801893, 'spark.executor.memoryOverhead': 539.549206085989, 'spark.kryoserializer.buffer': 97.90408905743203, 'spark.kryoserializer.buffer.max': 112.1240645021478, 'spark.locality.wait': 4.109729664065151, 'spark.maxRemoteBlockSizeFetchToMem': 1879202699.955295, 'spark.memory.fraction': 0.8955444355625979, 'spark.memory.offHeap.enabled': 0.7481656543798394, 'spark.memory.offHeap.size': 287.1746478739509, 'spark.memory.storageFraction': 0.8157117313805955, 'spark.rdd.compress': 0.10322600657764203, 'spark.reducer.maxBlocksInFlightPerAddress': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 69.07505609897906, 'spark.scheduler.revive.interval': 646.8070741868397, 'spark.shuffle.file.buffer': 25.20881083476316, 'spark.shuffle.io.numConnectionsPerPeer': 1.2600571442365553, 'spark.shuffle.sort.bypassMergeThreshold': 153.8733915740594, 'spark.sql.autoBroadcastJoinThreshold': 12360986.47787979, 'spark.sql.inMemoryColumnarStorage.batchSize': 7116.28116000059, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2655466593722262, 'spark.sql.shuffle.partitions': 323.73597389205077, 'spark.storage.memoryMapThreshold': 1.1600876353512413}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 3 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669335365.0
1669336062.0
697.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3415
生成测试集 - 配置成功 target -697.0  conf {'spark.broadcast.blockSize': 50.37176337574442, 'spark.broadcast.checksum': 0.14672857490581015, 'spark.broadcast.compress': 0.5893055369032842, 'spark.default.parallelism': 409.92750800627937, 'spark.executor.cores': 1.2046688576556517, 'spark.executor.instances': 5.656223951278273, 'spark.executor.memory': 5.77760063091098, 'spark.executor.memoryOverhead': 588.190379876763, 'spark.kryoserializer.buffer': 36.795532058824364, 'spark.kryoserializer.buffer.max': 83.44605496788911, 'spark.locality.wait': 7.982767871318733, 'spark.maxRemoteBlockSizeFetchToMem': 1626599409.527616, 'spark.memory.fraction': 0.8778379023963254, 'spark.memory.offHeap.enabled': 0.5865550405019929, 'spark.memory.offHeap.size': 925.0835612547927, 'spark.memory.storageFraction': 0.554989881658495, 'spark.rdd.compress': 0.13927634725075855, 'spark.reducer.maxBlocksInFlightPerAddress': 1940671618.0206747, 'spark.reducer.maxSizeInFlight': 52.72565878353707, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.file.buffer': 45.680274572673085, 'spark.shuffle.io.numConnectionsPerPeer': 1.6955317194910131, 'spark.shuffle.sort.bypassMergeThreshold': 300.1624206272311, 'spark.sql.autoBroadcastJoinThreshold': 12855520.63486835, 'spark.sql.inMemoryColumnarStorage.batchSize': 13833.060912058098, 'spark.sql.inMemoryColumnarStorage.compressed': 0.6236722070556089, 'spark.sql.shuffle.partitions': 362.6413651041006, 'spark.storage.memoryMapThreshold': 2.0466950259335275}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 4 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669336066.0
1669336939.0
873.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3415
生成测试集 - 配置成功 target -873.0  conf ================= config5 =================
2022年 12月 08日 星期四 19:07:47 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config5/tpch-times.txt'
================= config6 =================
2022年 12月 08日 星期四 19:07:54 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config6/tpch-times.txt'
================= config7 =================
2022年 12月 08日 星期四 19:08:02 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config7/tpch-times.txt'
{'spark.broadcast.blockSize': 40.637692536480834, 'spark.broadcast.checksum': 0.8958862181960668, 'spark.broadcast.compress': 0.4280911898712949, 'spark.default.parallelism': 489.45201414451566, 'spark.executor.cores': 2.326882995636896, 'spark.executor.instances': 6.486782880836487, 'spark.executor.memory': 3.4589838918135007, 'spark.executor.memoryOverhead': 852.0982045425861, 'spark.kryoserializer.buffer': 75.1915648140743, 'spark.kryoserializer.buffer.max': 87.52540298116465, 'spark.locality.wait': 6.448820816567687, 'spark.maxRemoteBlockSizeFetchToMem': 1328247288.4244535, 'spark.memory.fraction': 0.8613518082249015, 'spark.memory.offHeap.enabled': 0.5736794866722859, 'spark.memory.offHeap.size': 2.9392148799067854, 'spark.memory.storageFraction': 0.7468579654482895, 'spark.rdd.compress': 0.32664490177209615, 'spark.reducer.maxBlocksInFlightPerAddress': 1639666151.072064, 'spark.reducer.maxSizeInFlight': 68.35014717794479, 'spark.scheduler.revive.interval': 678.6348800012499, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 2.2467202315836055, 'spark.shuffle.sort.bypassMergeThreshold': 153.16424856931127, 'spark.sql.autoBroadcastJoinThreshold': 14988735.768100983, 'spark.sql.inMemoryColumnarStorage.batchSize': 11908.96917516924, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9973228504514805, 'spark.sql.shuffle.partitions': 275.85107625179927, 'spark.storage.memoryMapThreshold': 1.4114072488866332}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 5 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669336943.0
1669337601.0
658.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
生成测试集 - 配置成功 target -658.0  conf {'spark.broadcast.blockSize': 61.843054817189234, 'spark.broadcast.checksum': 0.6968181614899002, 'spark.broadcast.compress': 0.06600017272206249, 'spark.default.parallelism': 426.6389157807399, 'spark.executor.cores': 2.5077523769224928, 'spark.executor.instances': 7.692098142185934, 'spark.executor.memory': 5.8460990345138875, 'spark.executor.memoryOverhead': 445.2655842522772, 'spark.kryoserializer.buffer': 33.90849284862038, 'spark.kryoserializer.buffer.max': 34.51625474026105, 'spark.locality.wait': 4.169838928124768, 'spark.maxRemoteBlockSizeFetchToMem': 1338108624.7870486, 'spark.memory.fraction': 0.8440111794731553, 'spark.memory.offHeap.enabled': 0.5388310643416528, 'spark.memory.offHeap.size': 566.0897061742243, 'spark.memory.storageFraction': 0.8368123569438424, 'spark.rdd.compress': 0.12417331511991114, 'spark.reducer.maxBlocksInFlightPerAddress': 1373513015.7324514, 'spark.reducer.maxSizeInFlight': 58.74429668666521, 'spark.scheduler.revive.interval': 984.7978741598372, 'spark.shuffle.file.buffer': 33.95296701618272, 'spark.shuffle.io.numConnectionsPerPeer': 1.037294578745886, 'spark.shuffle.sort.bypassMergeThreshold': 310.12653453612324, 'spark.sql.autoBroadcastJoinThreshold': 7685792.321671219, 'spark.sql.inMemoryColumnarStorage.batchSize': 13071.051956187792, 'spark.sql.inMemoryColumnarStorage.compressed': 0.38786064406417176, 'spark.sql.shuffle.partitions': 379.5312781839143, 'spark.storage.memoryMapThreshold': 3.2413649282115538}
X_test [array([4.53447042e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       1.29351178e+00, 4.36935438e+00, 3.74504085e+00, 5.54361438e+02,
       7.00896775e+01, 8.37264065e+01, 6.51516709e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 4.44923820e+01, 5.99050745e+02,
       4.16238262e+01, 2.93652315e+00, 2.12684836e+02, 1.25024088e+07,
       1.37638915e+04, 8.94606664e-01, 2.62756632e+02, 1.11716435e+00]), array([3.74345734e+01, 8.78142503e-01, 9.83468338e-02, 3.26332288e+02,
       2.91577906e+00, 6.13266114e+00, 5.76750846e+00, 5.39549206e+02,
       9.79040891e+01, 1.12124065e+02, 4.10972966e+00, 1.87920270e+09,
       8.95544436e-01, 7.48165654e-01, 2.87174648e+02, 8.15711731e-01,
       1.03226007e-01, 1.55466383e+09, 6.90750561e+01, 6.46807074e+02,
       2.52088108e+01, 1.26005714e+00, 1.53873392e+02, 1.23609865e+07,
       7.11628116e+03, 2.65546659e-01, 3.23735974e+02, 1.16008764e+00]), array([5.03717634e+01, 1.46728575e-01, 5.89305537e-01, 4.09927508e+02,
       1.20466886e+00, 5.65622395e+00, 5.77760063e+00, 5.88190380e+02,
       3.67955321e+01, 8.34460550e+01, 7.98276787e+00, 1.62659941e+09,
       8.77837902e-01, 5.86555041e-01, 9.25083561e+02, 5.54989882e-01,
       1.39276347e-01, 1.94067162e+09, 5.27256588e+01, 5.82677099e+02,
       4.56802746e+01, 1.69553172e+00, 3.00162421e+02, 1.28555206e+07,
       1.38330609e+04, 6.23672207e-01, 3.62641365e+02, 2.04669503e+00]), array([4.06376925e+01, 8.95886218e-01, 4.28091190e-01, 4.89452014e+02,
       2.32688300e+00, 6.48678288e+00, 3.45898389e+00, 8.52098205e+02,
       7.51915648e+01, 8.75254030e+01, 6.44882082e+00, 1.32824729e+09,
       8.61351808e-01, 5.73679487e-01, 2.93921488e+00, 7.46857965e-01,
       3.26644902e-01, 1.63966615e+09, 6.83501472e+01, 6.78634880e+02,
       4.50731248e+01, 2.24672023e+00, 1.53164249e+02, 1.49887358e+07,
       1.19089692e+04, 9.97322850e-01, 2.75851076e+02, 1.41140725e+00]), array([6.18430548e+01, 6.96818161e-01, 6.60001727e-02, 4.26638916e+02,
       2.50775238e+00, 7.69209814e+00, 5.84609903e+00, 4.45265584e+02,
       3.39084928e+01, 3.45162547e+01, 4.16983893e+00, 1.33810862e+09,
       8.44011179e-01, 5.38831064e-01, 5.66089706e+02, 8.36812357e-01,
       1.24173315e-01, 1.37351302e+09, 5.87442967e+01, 9.84797874e+02,
       3.39529670e+01, 1.03729458e+00, 3.10126535e+02, 7.68579232e+06,
       1.30710520e+04, 3.87860644e-01, 3.79531278e+02, 3.24136493e+00])]  y_test [-1270.0, -683.0, -697.0, -873.0, -658.0]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 6 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669337606.0
1669338274.0
668.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
初始采样：config
[54.7943199873184, 0.7195389335674891, 0.9940975558628804, 491.48954807968136, 1.0462569808752753, 7.083111175711366, 3.258783015245402, 798.4499885269831, 102.94006188402417, 71.58321194912907, 9.708287742273663, 1871073610.363101, 0.7522142099757935, 0.04348462915070644, 322.6624978743691, 0.7374237702261002, 0.5998327118594304, 1865090318.8962789, 65.41892246949074, 771.84222438902, 20.323835961661672, 2.95828003371987, 215.33258995777996, 8468420.557209406, 7736.383217973874, 0.39374801059839615, 378.93345196196003, 1.9782419893568977, -668.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 7 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669338277.0
1669339020.0
743.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
================= config8 =================
2022年 12月 08日 星期四 19:08:09 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config8/tpch-times.txt'
================= config9 =================
2022年 12月 08日 星期四 19:08:16 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config9/tpch-times.txt'
================= config10 =================
2022年 12月 08日 星期四 19:08:24 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config10/tpch-times.txt'
初始采样：config
[48.43257439802515, 0.8443608768184466, 0.7027916893060984, 350.92082228922214, 2.344941211545491, 4.175816707955991, 5.89654750939331, 611.9771706606, 88.69806462605683, 47.36695030826538, 5.745432448651924, 1644517066.6234956, 0.6115182952032836, 0.6843784373308855, 999.6404582523446, 0.6146471260051786, 0.9186230697112923, 2023050658.0640125, 51.46300516417111, 971.7520935949814, 43.90298669216583, 1.447889964925199, 303.97458238200363, 13634940.56530928, 9627.422330370395, 0.08638391102657719, 295.5128234966923, 3.231991264463443, -743.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 8 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669339024.0
1669339691.0
667.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
初始采样：config
[63.245474671201045, 0.17458416951486294, 0.050050373641118334, 430.17136179755227, 2.6793604931551243, 6.0930355005039445, 6.924895522454383, 570.9467478015237, 39.410656791493636, 57.23091117398429, 6.407948034430769, 2039088775.2061787, 0.8503621158212591, 0.8973249047929349, 682.7267311698857, 0.5249829920300043, 0.6979847541436113, 1441115379.4178987, 58.37813305212718, 614.1178670492584, 39.03558212345371, 1.3842095111533723, 324.22834817658713, 11661721.236811602, 13766.152532576318, 0.6953588680635294, 360.833299297294, 3.4484487165884996, -667.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 9 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669339695.0
1669340358.0
663.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
初始采样：config
[37.94587536387605, 0.4539997698837138, 0.2645883208791881, 214.37407500808376, 1.719731764183741, 7.514795529836953, 4.038425520110606, 437.9808320267087, 62.6415966882925, 111.04630628442791, 8.36361423641456, 1309569983.607555, 0.5512853664796847, 0.24830776972681695, 29.687400149083103, 0.8882296439014681, 0.26344750223441266, 1199559528.6031659, 66.11987906832681, 808.4678251440704, 22.96952075870897, 2.1416447136102867, 167.58871381446488, 10314617.723502956, 12137.681133941607, 0.5043060129048216, 314.1057014393837, 1.2824035679441206, -663.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 10 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669340361.0
1669341084.0
723.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
初始采样：config
[39.81605076347954, 0.33230199290659884, 0.42856868939222464, 279.7678315907115, 2.0910527461899924, 5.126993959428653, 5.235040262561194, 730.5778345939888, 111.79378042571129, 107.14229198726152, 4.354476176385393, 1263014333.6860461, 0.6877542480410408, 0.5988155996041753, 422.95361966511075, 0.7821503845067752, 0.08449133634818329, 1507448923.5538292, 41.69537378512214, 535.4410808395137, 30.966738992658918, 2.499227514746819, 253.9192801299418, 7276724.783785958, 5579.60457138895, 0.9805338791360112, 272.93938656801276, 2.4564840004484934, -723.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
bestconfig
   spark.broadcast.blockSize  spark.broadcast.checksum  spark.broadcast.compress  spark.default.parallelism  spark.executor.cores  spark.executor.instances  spark.executor.memory  spark.executor.memoryOverhead  spark.kryoserializer.buffer  spark.kryoserializer.buffer.max  spark.locality.wait  spark.maxRemoteBlockSizeFetchToMem  spark.memory.fraction  spark.memory.offHeap.enabled  spark.memory.offHeap.size  spark.memory.storageFraction  spark.rdd.compress  spark.reducer.maxBlocksInFlightPerAddress  spark.reducer.maxSizeInFlight  spark.scheduler.revive.interval  spark.shuffle.file.buffer  spark.shuffle.io.numConnectionsPerPeer  spark.shuffle.sort.bypassMergeThreshold  spark.sql.autoBroadcastJoinThreshold  spark.sql.inMemoryColumnarStorage.batchSize  spark.sql.inMemoryColumnarStorage.compressed  spark.sql.shuffle.partitions  spark.storage.memoryMapThreshold
0                  37.945875                     0.454                  0.264588                 214.374075              1.719732                  7.514796               4.038426                     437.980832                    62.641597                       111.046306             8.363614                        1.309570e+09               0.551285                      0.248308                    29.6874                       0.88823            0.263448                               1.199560e+09                      66.119879                       808.467825                  22.969521                                2.141645                               167.588714                          1.031462e+07                                 12137.681134                                      0.504306                    314.105701                          1.282404
     spark.broadcast.blockSize  spark.broadcast.checksum  spark.broadcast.compress  spark.default.parallelism  spark.executor.cores  spark.executor.instances  spark.executor.memory  spark.executor.memoryOverhead  spark.kryoserializer.buffer  spark.kryoserializer.buffer.max  spark.locality.wait  spark.maxRemoteBlockSizeFetchToMem  spark.memory.fraction  spark.memory.offHeap.enabled  spark.memory.offHeap.size  spark.memory.storageFraction  spark.rdd.compress  spark.reducer.maxBlocksInFlightPerAddress  spark.reducer.maxSizeInFlight  spark.scheduler.revive.interval  spark.shuffle.file.buffer  spark.shuffle.io.numConnectionsPerPeer  spark.shuffle.sort.bypassMergeThreshold  spark.sql.autoBroadcastJoinThreshold  spark.sql.inMemoryColumnarStorage.batchSize  spark.sql.inMemoryColumnarStorage.compressed  spark.sql.shuffle.partitions  spark.storage.memoryMapThreshold
0                         46.0                       0.0                       0.0                      355.0                   2.0                       6.0                    5.0                          613.0                         67.0                             86.0                  7.0                        1.524982e+09                   0.64                           0.0                      466.0                          0.75                 0.0                               1.523651e+09                           57.0                            800.0                       33.0                                     2.0                                    242.0                            10210168.0                                      10197.0                                           0.0                         324.0                               2.0
1                         44.0                       0.0                       0.0                      340.0                   2.0                       7.0                    5.0                          570.0                         62.0                             96.0                  8.0                        1.405441e+09                   0.61                           0.0                      382.0                          0.77                 0.0                               1.416994e+09                           61.0                            786.0                       28.0                                     2.0                                    227.0                            10156898.0                                      11189.0                                           0.0                         319.0                               2.0
2                         44.0                       0.0                       0.0                      330.0                   2.0                       7.0                    4.0                          537.0                         62.0                             93.0                  8.0                        1.416301e+09                   0.62                           0.0                      359.0                          0.78                 0.0                               1.387224e+09                           62.0                            833.0                       29.0                                     2.0                                    220.0                            10084118.0                                      11187.0                                           1.0                         314.0                               2.0
3                         45.0                       0.0                       0.0                      329.0                   2.0                       7.0                    4.0                          581.0                         67.0                            100.0                  7.0                        1.428690e+09                   0.62                           0.0                      364.0                          0.77                 0.0                               1.459506e+09                           60.0                            772.0                       30.0                                     2.0                                    232.0                            10092130.0                                      11236.0                                           0.0                         324.0                               2.0
4                         42.0                       0.0                       0.0                      320.0                   2.0                       7.0                    4.0                          530.0                         66.0                             88.0                  7.0                        1.516648e+09                   0.60                           0.0                      374.0                          0.76                 0.0                               1.419651e+09                           59.0                            810.0                       32.0                                     2.0                                    226.0                            10253806.0                                      10593.0                                           0.0                         323.0                               2.0

123                       38.0                       0.0                       0.0                      234.0                   2.0                       8.0                    4.0                          438.0                         63.0                            116.0                  8.0                        1.269511e+09                   0.56                           0.0                       68.0                          0.86                 0.0                               1.129587e+09                           67.0                            791.0                       20.0                                     2.0                                    172.0                            10060114.0                                      12764.0                                           1.0                         313.0                               1.0
124                       36.0                       0.0                       0.0                      225.0                   2.0                       8.0                    4.0                          421.0                         59.0                            119.0                  9.0                        1.181740e+09                   0.56                           0.0                       16.0                          0.89                 0.0                               1.090507e+09                           69.0                            799.0                       17.0                                     2.0                                    150.0                             9761370.0                                      13072.0                                           1.0                         307.0                               1.0
125                       36.0                       0.0                       0.0                      230.0                   2.0                       8.0                    4.0                          399.0                         56.0                            114.0                  9.0                        1.193325e+09                   0.54                           0.0                       46.0                          0.88                 0.0                               1.073742e+09                           69.0                            795.0                       19.0                                     2.0                                    159.0                            10159742.0                                      12911.0                                           0.0                         314.0                               1.0
126                       36.0                       0.0                       0.0                      223.0                   2.0                       8.0                    4.0                          415.0                         58.0                            112.0                  9.0                        1.239456e+09                   0.54                           0.0                       25.0                          0.89                 0.0                               1.073742e+09                           68.0                            813.0                       20.0                                     2.0                                    154.0                            10207623.0                                      12536.0                                           0.0                         313.0                               1.0
127                       34.0                       1.0                       0.0                      220.0                   2.0                       8.0                    4.0                          404.0                         62.0                            115.0                  9.0                        1.189539e+09                   0.55                           0.0                       30.0                          0.89                 0.0                               1.129941e+09                           70.0                            809.0                       19.0                                     2.0                                    162.0                            10193667.0                                      13123.0                                           0.0                         314.0                               1.0

[128 rows x 28 columns]================= config11 =================
2022年 12月 08日 星期四 19:08:33 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config11/tpch-times.txt'
================= config12 =================
2022年 12月 08日 星期四 19:08:40 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config12/tpch-times.txt'
================= config13 =================
2022年 12月 08日 星期四 19:08:47 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config13/tpch-times.txt'
================= config14 =================
2022年 12月 08日 星期四 19:08:55 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config14/tpch-times.txt'
================= config15 =================
2022年 12月 08日 星期四 19:09:02 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config15/tpch-times.txt'
================= config16 =================
2022年 12月 08日 星期四 19:09:10 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config16/tpch-times.txt'
================= config17 =================
2022年 12月 08日 星期四 19:09:17 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config17/tpch-times.txt'

5
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 11 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669341143.0
1669341937.0
794.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
GAN采样：config
[46.0, 0.0, 0.0, 355.0, 2.0, 6.0, 5.0, 613.0, 67.0, 86.0, 7.0, 1524981632.0, 0.6399999856948853, 0.0, 466.0, 0.75, 0.0, 1523651328.0, 57.0, 800.0, 33.0, 2.0, 242.0, 10210168.0, 10197.0, 0.0, 324.0, 2.0, -794.0]
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 12 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669177463.0
1669179049.0
1586.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
GAN采样：config
[44.0, 0.0, 0.0, 340.0, 2.0, 7.0, 5.0, 570.0, 62.0, 96.0, 8.0, 1405440640.0, 0.6100000143051147, 0.0, 382.0, 0.7699999809265137, 0.0, 1416994048.0, 61.0, 786.0, 28.0, 2.0, 227.0, 10156898.0, 11189.0, 0.0, 319.0, 2.0, -1586.0]
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 13 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669344062.0
1669345246.0
1184.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
GAN采样：config
[44.0, 0.0, 0.0, 330.0, 2.0, 7.0, 4.0, 537.0, 62.0, 93.0, 8.0, 1416300672.0, 0.6200000047683716, 0.0, 359.0, 0.7799999713897705, 0.0, 1387224448.0, 62.0, 833.0, 29.0, 2.0, 220.0, 10084118.0, 11187.0, 1.0, 314.0, 2.0, -1184.0]
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 14 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669345310.0
1669346049.0
739.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
GAN采样：config
[45.0, 0.0, 0.0, 329.0, 2.0, 7.0, 4.0, 581.0, 67.0, 100.0, 7.0, 1428689664.0, 0.6200000047683716, 0.0, 364.0, 0.7699999809265137, 0.0, 1459506304.0, 60.0, 772.0, 30.0, 2.0, 232.0, 10092130.0, 11236.0, 0.0, 324.0, 2.0, -739.0]
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 15 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669346108.0
1669346831.0
723.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
GAN采样：config
[42.0, 0.0, 0.0, 320.0, 2.0, 7.0, 4.0, 530.0, 66.0, 88.0, 7.0, 1516647808.0, 0.6000000238418579, 0.0, 374.0, 0.7599999904632568, 0.0, 1419651072.0, 59.0, 810.0, 32.0, 2.0, 226.0, 10253806.0, 10593.0, 0.0, 323.0, 2.0, -723.0]
训练集长度= 15
accuracy= 2.1995540290153855e-07
所有模型的可信度  [2.1995540290153855e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-844.73333333 -844.73333333 -844.73333333]  max_stds [268.16325044 268.16325044 268.16325044]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.24310733914140137, 0.24310733914140137, 0.24310733914140137]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 2 0 0 0 0 0 2 2 2 2 0 1 1 0 0 1 2 2 0 1 2 2 0 0 2 1 2 0 1 2 2 1 0 2 2
 0 1 1 0 0 0 0 2 0 2 1 0 1 2 0 1 0 0 0 2 1 0 1 0 1 0 0 0 1 1 2 1 0 0 2 1 1
 1 0 2 2 1 0 2 0 2 1 1 0 1 1 1 2 2 0 2 2 2 2 1 1 1 1]
每个概率被转中的次数, count: [37 32 31]
choose which one? [0]
ys [38.55291112 38.55291112 38.55291112 ... 38.55291112 38.55291112
 38.55291112]
1 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9746]
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 16 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669346894.0
1669347682.0
788.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
x_probe = {'spark.broadcast.blockSize': 63.642379598114815, 'spark.broadcast.checksum': 0.6833833149660121, 'spark.broadcast.compress': 0.044204903653854655, 'spark.default.parallelism': 489.3480893210861, 'spark.executor.cores': 1.636888856989743, 'spark.executor.instances': 6.508198617103338, 'spark.executor.memory': 4.846498099791049, 'spark.executor.memoryOverhead': 763.4943170501697, 'spark.kryoserializer.buffer': 81.10685711150893, 'spark.kryoserializer.buffer.max': 42.94791581474959, 'spark.locality.wait': 4.27354487333601, 'spark.maxRemoteBlockSizeFetchToMem': 1076495361.1973305, 'spark.memory.fraction': 0.6110498644689177, 'spark.memory.offHeap.enabled': 0.06385701506647523, 'spark.memory.offHeap.size': 719.162922429832, 'spark.memory.storageFraction': 0.6825996175734509, 'spark.rdd.compress': 0.15965377938787306, 'spark.reducer.maxBlocksInFlightPerAddress': 1236197853.2430248, 'spark.reducer.maxSizeInFlight': 58.76476555072354, 'spark.scheduler.revive.interval': 609.5829238166115, 'spark.shuffle.file.buffer': 22.22862659586087, 'spark.shuffle.io.numConnectionsPerPeer': 1.2247491974293292, 'spark.shuffle.sort.bypassMergeThreshold': 251.36849645523193, 'spark.sql.autoBroadcastJoinThreshold': 8823897.97576982, 'spark.sql.inMemoryColumnarStorage.batchSize': 7798.434152142514, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9924923647656788, 'spark.sql.shuffle.partitions': 304.2143281132007, 'spark.storage.memoryMapThreshold': 1.7141845324568585}
target = -788.0
训练集长度= 16
accuracy= 2.1819260854440518e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-841.1875 -841.1875 -841.1875]  max_stds [260.01086966 260.01086966 260.01086966]
所有模型的可信度所占权重  [0.5020116425398302, 0.49798835746016973]
三个函数的累计增益为[0.36161356708391346, 0.36161356708391346, 0.36161356708391346]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 1 2 2 1 2 1 1 1 0 1 2 0 1 2 2 2 0 0 0 2 1 2 1 0 1 1 0 1 2 0 2 1 1 2
 2 2 1 2 1 0 0 2 1 0 2 0 0 0 2 1 0 2 2 1 0 2 1 0 1 2 0 2 0 0 0 1 1 2 2 0 1
 2 2 2 1 2 1 1 1 2 1 0 2 0 0 1 2 1 1 2 2 2 1 1 1 0 2]
每个概率被转中的次数, count: [27 36 37]
choose which one? [2]
ys [-171.39949974 -171.39949974 -171.39949974 ... -171.39949974 -171.39949974
 -171.39949974]
2 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1382]
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 17 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669347742.0
1669348540.0
798.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
================= config18 =================
2022年 12月 08日 星期四 19:09:25 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config18/tpch-times.txt'
================= config19 =================
2022年 12月 08日 星期四 19:09:33 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config19/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 57.918964130791736, 'spark.broadcast.checksum': 0.07299764729665581, 'spark.broadcast.compress': 0.2953526365443422, 'spark.default.parallelism': 253.87826340183733, 'spark.executor.cores': 2.7244345689861813, 'spark.executor.instances': 7.393464618651197, 'spark.executor.memory': 6.288194865726702, 'spark.executor.memoryOverhead': 560.6871805415368, 'spark.kryoserializer.buffer': 67.86406564111479, 'spark.kryoserializer.buffer.max': 32.99490320593381, 'spark.locality.wait': 4.23460625337316, 'spark.maxRemoteBlockSizeFetchToMem': 1518679848.7978897, 'spark.memory.fraction': 0.5352029301138275, 'spark.memory.offHeap.enabled': 0.20911977247225977, 'spark.memory.offHeap.size': 389.40267713537855, 'spark.memory.storageFraction': 0.6004647297610027, 'spark.rdd.compress': 0.023193820666232212, 'spark.reducer.maxBlocksInFlightPerAddress': 1103393691.693391, 'spark.reducer.maxSizeInFlight': 66.16062389415471, 'spark.scheduler.revive.interval': 623.3671493872469, 'spark.shuffle.file.buffer': 45.18632841177437, 'spark.shuffle.io.numConnectionsPerPeer': 2.4359413256577866, 'spark.shuffle.sort.bypassMergeThreshold': 191.14398513306642, 'spark.sql.autoBroadcastJoinThreshold': 11061269.213698953, 'spark.sql.inMemoryColumnarStorage.batchSize': 10049.644152320838, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9409684440519983, 'spark.sql.shuffle.partitions': 323.9574595744084, 'spark.storage.memoryMapThreshold': 3.526760659598591}
target = -798.0
训练集长度= 17
accuracy= 2.1692964015410694e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-838.64705882 -838.64705882 -838.64705882]  max_stds [252.45219493 252.45219493 252.45219493]
所有模型的可信度所占权重  [0.33576996920027663, 0.3330789991254654, 0.331151031674258]
三个函数的累计增益为[0.3977606250271509, 0.3977606250271509, 0.3977606250271509]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 1 2 1 1 0 1 2 0 2 1 1 0 2 0 0 1 0 2 1 2 2 0 1 0 0 1 0 2 1 1 1 0 1 0 1
 1 0 1 0 1 1 0 0 2 1 1 2 0 2 2 2 1 2 2 2 0 0 1 2 2 1 2 2 0 2 0 1 2 0 2 0 2
 0 0 2 2 2 2 1 2 1 2 2 0 1 1 1 1 1 2 2 2 1 1 0 2 1 2]
每个概率被转中的次数, count: [28 36 36]
choose which one? [1]
ys [0.23712865 0.23712865 0.23712865 ... 0.23712865 0.23712865 0.23712865]
3 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2570]
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 18 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669348600.0
1669349288.0
688.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3290
x_probe = {'spark.broadcast.blockSize': 51.41537009895284, 'spark.broadcast.checksum': 0.5708075440706636, 'spark.broadcast.compress': 0.39904163290009587, 'spark.default.parallelism': 237.5873738336909, 'spark.executor.cores': 1.1082518387236167, 'spark.executor.instances': 4.5823344764010185, 'spark.executor.memory': 5.490679462394041, 'spark.executor.memoryOverhead': 526.1089297666949, 'spark.kryoserializer.buffer': 91.13963010478594, 'spark.kryoserializer.buffer.max': 52.94547380907285, 'spark.locality.wait': 4.257951983711996, 'spark.maxRemoteBlockSizeFetchToMem': 1519197166.9219058, 'spark.memory.fraction': 0.502116629204427, 'spark.memory.offHeap.enabled': 0.37706386446165663, 'spark.memory.offHeap.size': 689.148521720471, 'spark.memory.storageFraction': 0.6121357676392393, 'spark.rdd.compress': 0.17666798651398974, 'spark.reducer.maxBlocksInFlightPerAddress': 1500874884.3990543, 'spark.reducer.maxSizeInFlight': 69.10147052134874, 'spark.scheduler.revive.interval': 772.8482711462913, 'spark.shuffle.file.buffer': 42.925918233073645, 'spark.shuffle.io.numConnectionsPerPeer': 2.615998365847754, 'spark.shuffle.sort.bypassMergeThreshold': 166.70611141959913, 'spark.sql.autoBroadcastJoinThreshold': 12048841.812170409, 'spark.sql.inMemoryColumnarStorage.batchSize': 13308.46357379598, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7942607846490561, 'spark.sql.shuffle.partitions': 333.32323640432435, 'spark.storage.memoryMapThreshold': 1.4069214300358877}
target = -688.0
训练集长度= 18
accuracy= 2.1276889147036837e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-830.27777778 -830.27777778 -830.27777778]  max_stds [247.75431503 247.75431503 247.75431503]
所有模型的可信度所占权重  [0.2534496503533239, 0.2514184221699441, 0.249963132176128, 0.24516879530060398]
三个函数的累计增益为[0.42280227377994495, 0.42280227377994495, 0.42280227377994495]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 2 2 2 1 0 2 2 2 2 1 1 2 0 1 2 2 1 2 1 0 1 0 2 1 0 1 0 0 1 1 1 0 2 0
 2 0 1 0 1 1 2 1 1 0 1 2 1 1 2 2 0 0 0 0 1 1 1 0 1 2 0 1 1 1 2 0 0 0 1 0 0
 2 1 0 2 0 1 2 2 2 1 2 0 0 0 0 1 0 2 1 0 2 1 2 2 2 0]
每个概率被转中的次数, count: [34 34 32]
choose which one? [0]
ys [35.67813372 35.67813372 35.67813372 ... 35.67813372 35.67813372
 35.67813372]
4 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1393]
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 19 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669349354.0
1669349996.0
642.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 39.89029144322957, 'spark.broadcast.checksum': 0.07485113405171584, 'spark.broadcast.compress': 0.33737829069161285, 'spark.default.parallelism': 327.81992530382564, 'spark.executor.cores': 1.9769980577033637, 'spark.executor.instances': 4.256779362892832, 'spark.executor.memory': 4.318546935522167, 'spark.executor.memoryOverhead': 699.6091462639298, 'spark.kryoserializer.buffer': 84.5761101324483, 'spark.kryoserializer.buffer.max': 68.81559067287628, 'spark.locality.wait': 5.793598837594967, 'spark.maxRemoteBlockSizeFetchToMem': 1332313269.1671116, 'spark.memory.fraction': 0.5436587757999934, 'spark.memory.offHeap.enabled': 0.2945590584923259, 'spark.memory.offHeap.size': 415.578177005372, 'spark.memory.storageFraction': 0.591007916920754, 'spark.rdd.compress': 0.9298358837802566, 'spark.reducer.maxBlocksInFlightPerAddress': 1548734245.7323678, 'spark.reducer.maxSizeInFlight': 54.287367918248265, 'spark.scheduler.revive.interval': 602.5051492486401, 'spark.shuffle.file.buffer': 16.395611668766648, 'spark.shuffle.io.numConnectionsPerPeer': 1.3654285114499598, 'spark.shuffle.sort.bypassMergeThreshold': 306.96041584143876, 'spark.sql.autoBroadcastJoinThreshold': 7899381.983754403, 'spark.sql.inMemoryColumnarStorage.batchSize': 10849.285542460773, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8614797240592361, 'spark.sql.shuffle.partitions': 295.8658818411557, 'spark.storage.memoryMapThreshold': 2.4226342846576263}
target = -642.0
训练集长度= 19
accuracy= 2.078425013444393e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-820.36842105 -820.36842105 -820.36842105]  max_stds [244.78373065 244.78373065 244.78373065]
所有模型的可信度所占权重  [0.20447861214500657, 0.20283985383814634, 0.20166575208740736, 0.19779776746365219, 0.19321801446578757]
三个函数的累计增益为[0.42485760461054506, 0.42485760461054506, 0.42485760461054506]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config20 =================
2022年 12月 08日 星期四 19:09:40 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config20/tpch-times.txt'
================= config21 =================
2022年 12月 08日 星期四 19:09:48 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config21/tpch-times.txt'
================= config22 =================
2022年 12月 08日 星期四 19:09:56 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config22/tpch-times.txt'
[0 2 0 1 2 0 2 0 2 0 0 1 0 2 2 1 2 2 2 1 2 2 2 2 0 1 2 2 2 0 1 0 1 0 0 1 2
 1 0 2 0 0 0 0 1 0 0 0 2 2 0 0 2 1 2 2 1 0 2 2 1 2 1 0 0 2 1 1 0 1 1 0 0 0
 0 0 0 1 1 2 1 2 0 2 2 2 0 2 2 0 1 0 1 2 2 0 2 2 0 1]
每个概率被转中的次数, count: [38 24 38]
choose which one? [2]
ys [-189.80553089 -189.80553089 -189.80553089 ... -189.80553089 -189.80553089
 -189.80553089]
5 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8347]
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 20 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669350061.0
1669350769.0
708.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 56.63004827970467, 'spark.broadcast.checksum': 0.21173670279244095, 'spark.broadcast.compress': 0.23652329018492535, 'spark.default.parallelism': 432.45501673789647, 'spark.executor.cores': 2.4238814020255575, 'spark.executor.instances': 7.356865143412227, 'spark.executor.memory': 3.9429255845156868, 'spark.executor.memoryOverhead': 822.5969699643163, 'spark.kryoserializer.buffer': 123.25562944276086, 'spark.kryoserializer.buffer.max': 58.90524304135986, 'spark.locality.wait': 9.698137717143489, 'spark.maxRemoteBlockSizeFetchToMem': 1759410527.1478055, 'spark.memory.fraction': 0.5149063624568095, 'spark.memory.offHeap.enabled': 0.005260187129330296, 'spark.memory.offHeap.size': 37.30915673854395, 'spark.memory.storageFraction': 0.8437766605784103, 'spark.rdd.compress': 0.04581640958403932, 'spark.reducer.maxBlocksInFlightPerAddress': 2060754901.443162, 'spark.reducer.maxSizeInFlight': 48.50992909079969, 'spark.scheduler.revive.interval': 825.9622054909103, 'spark.shuffle.file.buffer': 43.22288210840539, 'spark.shuffle.io.numConnectionsPerPeer': 2.0163705445949125, 'spark.shuffle.sort.bypassMergeThreshold': 233.64971080817708, 'spark.sql.autoBroadcastJoinThreshold': 7214430.661805885, 'spark.sql.inMemoryColumnarStorage.batchSize': 11760.534329262518, 'spark.sql.inMemoryColumnarStorage.compressed': 0.570643997726469, 'spark.sql.shuffle.partitions': 255.33850920008408, 'spark.storage.memoryMapThreshold': 2.5519733218725547}
target = -708.0
训练集长度= 20
accuracy= 2.0504932975154322e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-814.75 -814.75 -814.75]  max_stds [239.83929515 239.83929515 239.83929515]
所有模型的可信度所占权重  [0.17174108884236539, 0.1703646997275466, 0.16937857452370056, 0.16612986364904853, 0.16228334024872057, 0.16010243300861846]
三个函数的累计增益为[0.43405516272179084, 0.43405516272179084, 0.43405516272179084]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 1 1 1 0 1 1 2 0 1 1 2 0 0 0 1 2 1 0 1 1 1 1 1 0 1 2 2 2 2 0 0 2 1 0
 2 1 1 0 2 2 2 1 2 0 1 0 1 0 2 0 0 0 0 2 1 2 0 0 0 0 1 0 2 1 1 0 2 0 2 0 0
 2 0 1 2 0 2 0 0 1 1 1 1 0 2 2 0 2 1 0 1 1 1 2 1 1 2]
每个概率被转中的次数, count: [35 36 29]
choose which one? [1]
ys [0.23567817 0.23567817 0.23567817 ... 0.23567817 0.23567817 0.23567817]
6 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [963]
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 21 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669350835.0
1669351527.0
692.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 34.08973030187869, 'spark.broadcast.checksum': 0.3773207922842522, 'spark.broadcast.compress': 0.6200273730594729, 'spark.default.parallelism': 319.19360725277176, 'spark.executor.cores': 1.7954651674302209, 'spark.executor.instances': 4.333325461518298, 'spark.executor.memory': 6.958488186363166, 'spark.executor.memoryOverhead': 489.59440186337457, 'spark.kryoserializer.buffer': 40.07339754387745, 'spark.kryoserializer.buffer.max': 57.64589689873663, 'spark.locality.wait': 6.195704141827575, 'spark.maxRemoteBlockSizeFetchToMem': 1402377267.5014791, 'spark.memory.fraction': 0.5592717978082399, 'spark.memory.offHeap.enabled': 0.7117291739194092, 'spark.memory.offHeap.size': 752.9701390700615, 'spark.memory.storageFraction': 0.5252541373375843, 'spark.rdd.compress': 0.18678204196070747, 'spark.reducer.maxBlocksInFlightPerAddress': 1326073291.950753, 'spark.reducer.maxSizeInFlight': 71.43352608385591, 'spark.scheduler.revive.interval': 753.4389013103157, 'spark.shuffle.file.buffer': 30.045181189088314, 'spark.shuffle.io.numConnectionsPerPeer': 1.7980120405852638, 'spark.shuffle.sort.bypassMergeThreshold': 219.25209071844893, 'spark.sql.autoBroadcastJoinThreshold': 13707922.872778244, 'spark.sql.inMemoryColumnarStorage.batchSize': 14424.617042059579, 'spark.sql.inMemoryColumnarStorage.compressed': 0.3960821661023838, 'spark.sql.shuffle.partitions': 376.8814609588257, 'spark.storage.memoryMapThreshold': 1.065887234704359}
target = -692.0
训练集长度= 21
accuracy= 2.0214339712414218e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-808.9047619 -808.9047619 -808.9047619]  max_stds [235.51441261 235.51441261 235.51441261]
所有模型的可信度所占权重  [0.14832969637903945, 0.1471409338011576, 0.14628923515953285, 0.14348338187824428, 0.1401612086468331, 0.1382775982019726, 0.13631794593322025]
三个函数的累计增益为[0.4427228174773159, 0.4427228174773159, 0.4427228174773159]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 0 1 1 1 2 2 2 0 0 1 2 2 0 2 2 0 2 0 1 0 2 2 0 0 2 1 2 2 2 2 0 0 1 0
 1 2 1 0 1 0 2 2 2 2 0 0 0 0 0 0 1 1 1 0 0 1 2 1 2 2 0 1 1 0 0 1 0 1 2 1 1
 0 1 2 2 0 0 0 0 2 2 2 1 2 2 2 0 0 1 2 2 0 2 2 2 2 0]
每个概率被转中的次数, count: [37 24 39]
choose which one? [2]
ys [-202.21963501 -202.21963501 -202.21963501 ... -202.21963501 -202.21963501
 -202.21963501]
7 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4431]
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 22 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669351587.0
1669352280.0
693.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config23 =================
2022年 12月 08日 星期四 19:10:03 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config23/tpch-times.txt'
================= config24 =================
2022年 12月 08日 星期四 19:10:11 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config24/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 58.461553822473306, 'spark.broadcast.checksum': 0.15638854164398386, 'spark.broadcast.compress': 0.18091406024612622, 'spark.default.parallelism': 406.1174759221336, 'spark.executor.cores': 2.863301574877932, 'spark.executor.instances': 6.846786634125557, 'spark.executor.memory': 6.077582663949151, 'spark.executor.memoryOverhead': 802.6857262418944, 'spark.kryoserializer.buffer': 86.27918223229497, 'spark.kryoserializer.buffer.max': 113.40805576859015, 'spark.locality.wait': 9.14848820358033, 'spark.maxRemoteBlockSizeFetchToMem': 2123557492.4800644, 'spark.memory.fraction': 0.5541576889004994, 'spark.memory.offHeap.enabled': 0.18298111668157757, 'spark.memory.offHeap.size': 26.45113259336574, 'spark.memory.storageFraction': 0.8756395322764916, 'spark.rdd.compress': 0.13012109861287768, 'spark.reducer.maxBlocksInFlightPerAddress': 1330352822.748529, 'spark.reducer.maxSizeInFlight': 57.6457870269746, 'spark.scheduler.revive.interval': 508.30197791345336, 'spark.shuffle.file.buffer': 47.35220689226626, 'spark.shuffle.io.numConnectionsPerPeer': 2.2235621553314546, 'spark.shuffle.sort.bypassMergeThreshold': 271.310698757605, 'spark.sql.autoBroadcastJoinThreshold': 14538853.68395826, 'spark.sql.inMemoryColumnarStorage.batchSize': 12994.603069177858, 'spark.sql.inMemoryColumnarStorage.compressed': 0.6707204632044357, 'spark.sql.shuffle.partitions': 329.6897968656866, 'spark.storage.memoryMapThreshold': 3.8819882524123415}
target = -693.0
训练集长度= 22
accuracy= 1.995242377211854e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-803.63636364 -803.63636364 -803.63636364]  max_stds [231.3626719 231.3626719 231.3626719]
所有模型的可信度所占权重  [0.13073859800984883, 0.12969081623321996, 0.1289401244361548, 0.12646703015246127, 0.12353884866740886, 0.12187862421627482, 0.12015137608958273, 0.11859458219504872]
三个函数的累计增益为[0.4500997796545138, 0.4500997796545138, 0.4500997796545138]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 1 2 0 2 2 2 0 1 0 2 1 1 2 1 0 1 2 1 1 2 0 0 0 2 0 2 0 2 0 1 2 2 0 1 2
 2 1 1 1 0 0 0 1 2 0 0 1 2 1 0 0 1 1 1 0 2 2 1 0 2 1 0 1 2 1 0 1 2 1 0 0 2
 0 2 2 1 0 0 1 1 0 1 0 0 2 2 0 1 0 0 1 2 1 0 0 0 0 1]
每个概率被转中的次数, count: [38 34 28]
choose which one? [0]
ys [33.13384751 33.13384751 33.13384751 ... 33.13384751 33.13384751
 33.13384751]
8 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9308]
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 23 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669352340.0
1669353128.0
788.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 41.54740492563367, 'spark.broadcast.checksum': 0.5021664538824397, 'spark.broadcast.compress': 0.6313143000438856, 'spark.default.parallelism': 496.38594581431164, 'spark.executor.cores': 2.4515279740704425, 'spark.executor.instances': 6.524367681680037, 'spark.executor.memory': 6.413008923989196, 'spark.executor.memoryOverhead': 857.4179197404724, 'spark.kryoserializer.buffer': 44.241996374483634, 'spark.kryoserializer.buffer.max': 96.21486202999711, 'spark.locality.wait': 6.002460460632088, 'spark.maxRemoteBlockSizeFetchToMem': 1154751596.7488787, 'spark.memory.fraction': 0.5692865223242302, 'spark.memory.offHeap.enabled': 0.021618352627137072, 'spark.memory.offHeap.size': 317.45744240030217, 'spark.memory.storageFraction': 0.7470607163813584, 'spark.rdd.compress': 0.720649265114548, 'spark.reducer.maxBlocksInFlightPerAddress': 1408767629.7746034, 'spark.reducer.maxSizeInFlight': 64.76889488494761, 'spark.scheduler.revive.interval': 619.4270953858043, 'spark.shuffle.file.buffer': 36.36651581287862, 'spark.shuffle.io.numConnectionsPerPeer': 2.4428504637009043, 'spark.shuffle.sort.bypassMergeThreshold': 321.9650845677153, 'spark.sql.autoBroadcastJoinThreshold': 8427494.416982664, 'spark.sql.inMemoryColumnarStorage.batchSize': 14025.76727204132, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7853341648890745, 'spark.sql.shuffle.partitions': 353.19884316938953, 'spark.storage.memoryMapThreshold': 2.2178204573603053}
target = -788.0
训练集长度= 23
accuracy= 1.9918625751879625e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-802.95652174 -802.95652174 -802.95652174]  max_stds [226.29962406 226.29962406 226.29962406]
所有模型的可信度所占权重  [0.11689854747708711, 0.11596168438060776, 0.1152904611763229, 0.11307916983666907, 0.11046096704451323, 0.10897649474805421, 0.1074320939343969, 0.1060401029863334, 0.10586047841601544]
三个函数的累计增益为[0.4498425860553673, 0.4498425860553673, 0.4498425860553673]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 0 1 2 2 0 2 0 1 1 1 1 0 2 1 1 0 2 2 2 2 1 2 1 1 1 2 2 0 0 1 1 1 1 2 1
 0 1 0 1 0 2 1 2 2 0 1 2 1 0 2 0 1 0 0 0 1 2 1 0 0 2 0 0 2 1 1 2 1 1 0 2 1
 1 2 1 2 2 1 0 0 2 0 0 2 0 2 0 2 0 2 2 1 0 0 2 0 0 0]
每个概率被转中的次数, count: [33 34 33]
choose which one? [1]
ys [0.23846341 0.23846341 0.23846341 ... 0.23846341 0.23846341 0.23846341]
9 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7033]
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 24 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669353189.0
1669353927.0
738.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 37.90442809802529, 'spark.broadcast.checksum': 0.4357014192259471, 'spark.broadcast.compress': 0.46308876994322035, 'spark.default.parallelism': 405.68571830008574, 'spark.executor.cores': 2.313243894505449, 'spark.executor.instances': 6.404606447298331, 'spark.executor.memory': 5.959106629052998, 'spark.executor.memoryOverhead': 562.2438623555128, 'spark.kryoserializer.buffer': 81.65427517660031, 'spark.kryoserializer.buffer.max': 40.01211452437009, 'spark.locality.wait': 7.499443577575245, 'spark.maxRemoteBlockSizeFetchToMem': 1285329605.552967, 'spark.memory.fraction': 0.6127846569234535, 'spark.memory.offHeap.enabled': 0.5614573565090062, 'spark.memory.offHeap.size': 228.74105437355126, 'spark.memory.storageFraction': 0.5366302443420853, 'spark.rdd.compress': 0.2030172361730539, 'spark.reducer.maxBlocksInFlightPerAddress': 1169882497.673296, 'spark.reducer.maxSizeInFlight': 47.30703763472442, 'spark.scheduler.revive.interval': 811.4155563315612, 'spark.shuffle.file.buffer': 16.218715538859517, 'spark.shuffle.io.numConnectionsPerPeer': 2.997738346068857, 'spark.shuffle.sort.bypassMergeThreshold': 323.60419540506155, 'spark.sql.autoBroadcastJoinThreshold': 14463299.992459293, 'spark.sql.inMemoryColumnarStorage.batchSize': 7753.649625949995, 'spark.sql.inMemoryColumnarStorage.compressed': 0.24030560448142357, 'spark.sql.shuffle.partitions': 305.3890141890272, 'spark.storage.memoryMapThreshold': 1.0600297960577674}
target = -738.0
训练集长度= 24
accuracy= 1.9784072298955588e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-800.25 -800.25 -800.25]  max_stds ================= config25 =================
2022年 12月 08日 星期四 19:10:19 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config25/tpch-times.txt'
================= config26 =================
2022年 12月 08日 星期四 19:10:27 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config26/tpch-times.txt'
================= config27 =================
2022年 12月 08日 星期四 19:10:34 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config27/tpch-times.txt'
[221.91482037 221.91482037 221.91482037]
所有模型的可信度所占权重  [0.1057766246905137, 0.10492889631166356, 0.10432153440259347, 0.10232062900929256, 0.099951526397784, 0.09860828927161878, 0.09721082532733862, 0.09595127071982935, 0.0957887359307342, 0.09514166793863174]
三个函数的累计增益为[0.4518444089557045, 0.4518444089557045, 0.4518444089557045]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 1 0 1 0 1 2 0 0 1 2 1 0 2 2 0 2 1 0 0 0 2 2 1 0 2 1 0 1 2 0 1 1 2 0 1
 0 1 1 1 1 1 1 1 2 2 1 0 2 2 2 2 2 0 2 0 1 0 2 2 1 2 0 0 0 2 1 1 1 2 2 0 1
 0 1 1 0 1 1 0 0 2 2 2 2 2 1 0 0 0 1 0 1 0 1 1 1 0 1]
每个概率被转中的次数, count: [32 38 30]
choose which one? [1]
ys [0.2378884 0.2378884 0.2378884 ... 0.2378884 0.2378884 0.2378884]
10 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9804]
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 25 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669353991.0
1669355040.0
1049.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 54.236342176681774, 'spark.broadcast.checksum': 0.8290710261770516, 'spark.broadcast.compress': 0.6850366338306391, 'spark.default.parallelism': 364.791057423961, 'spark.executor.cores': 2.190800515266175, 'spark.executor.instances': 5.87245686127646, 'spark.executor.memory': 3.379239996851836, 'spark.executor.memoryOverhead': 505.1346798551923, 'spark.kryoserializer.buffer': 61.20581668682323, 'spark.kryoserializer.buffer.max': 71.57567095815817, 'spark.locality.wait': 5.591008210339044, 'spark.maxRemoteBlockSizeFetchToMem': 1291618688.8042524, 'spark.memory.fraction': 0.76989134707799, 'spark.memory.offHeap.enabled': 0.15097959852311627, 'spark.memory.offHeap.size': 17.61318002553412, 'spark.memory.storageFraction': 0.7860535880497963, 'spark.rdd.compress': 0.8789097105314004, 'spark.reducer.maxBlocksInFlightPerAddress': 1862034652.468445, 'spark.reducer.maxSizeInFlight': 62.01871886905927, 'spark.scheduler.revive.interval': 971.8028418809854, 'spark.shuffle.file.buffer': 38.99745324325323, 'spark.shuffle.io.numConnectionsPerPeer': 2.7452875947960473, 'spark.shuffle.sort.bypassMergeThreshold': 179.2171835744741, 'spark.sql.autoBroadcastJoinThreshold': 5811664.1986705875, 'spark.sql.inMemoryColumnarStorage.batchSize': 5619.144634395725, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9697098752908814, 'spark.sql.shuffle.partitions': 359.1583093121439, 'spark.storage.memoryMapThreshold': 2.21927323649918}
target = -1049.0
训练集长度= 25
accuracy= 2.0278731872105606e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-810.2 -810.2 -810.2]  max_stds [222.82818493 222.82818493 222.82818493]
所有模型的可信度所占权重  [0.09637781335451084, 0.09560541011597691, 0.09505201551785786, 0.09322890112845643, 0.09107030578683241, 0.08984642236821157, 0.08857313047044531, 0.0874254939370664, 0.08727740122175374, 0.08668782863562714, 0.08885527746326133]
三个函数的累计增益为[0.44125452406213544, 0.44125452406213544, 0.44125452406213544]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 1 0 2 0 0 1 0 1 0 0 1 0 1 2 1 2 2 1 2 1 2 1 2 1 0 0 1 1 1 1 0 1 1 1 1
 0 0 0 0 2 1 2 2 0 1 2 2 2 2 1 1 0 0 0 1 1 2 2 2 2 0 2 0 2 0 0 1 0 0 0 0 0
 2 1 0 2 2 0 0 0 1 2 2 2 1 0 1 0 0 2 1 0 1 2 1 0 0 1]
每个概率被转中的次数, count: [38 34 28]
choose which one? [0]
ys [28.98397229 28.98397229 28.98397229 ... 28.98397229 28.98397229
 28.98397229]
11 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3269]
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 26 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669355100.0
1669355848.0
748.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 35.304823932976355, 'spark.broadcast.checksum': 0.11764733696645269, 'spark.broadcast.compress': 0.8437221133527798, 'spark.default.parallelism': 319.8296175393352, 'spark.executor.cores': 2.656762636185035, 'spark.executor.instances': 7.754335351045099, 'spark.executor.memory': 6.017443178340114, 'spark.executor.memoryOverhead': 413.4600678420759, 'spark.kryoserializer.buffer': 57.765995421446505, 'spark.kryoserializer.buffer.max': 72.56760210633303, 'spark.locality.wait': 5.305463770917223, 'spark.maxRemoteBlockSizeFetchToMem': 1534720440.9700475, 'spark.memory.fraction': 0.7729385778844133, 'spark.memory.offHeap.enabled': 0.6177558565833918, 'spark.memory.offHeap.size': 351.5884732139584, 'spark.memory.storageFraction': 0.5459950580603073, 'spark.rdd.compress': 0.9549750703976861, 'spark.reducer.maxBlocksInFlightPerAddress': 1672547052.7925432, 'spark.reducer.maxSizeInFlight': 54.02518445175163, 'spark.scheduler.revive.interval': 528.8538906362643, 'spark.shuffle.file.buffer': 32.08519405572589, 'spark.shuffle.io.numConnectionsPerPeer': 1.011407364388909, 'spark.shuffle.sort.bypassMergeThreshold': 163.37803462542843, 'spark.sql.autoBroadcastJoinThreshold': 13530525.048134714, 'spark.sql.inMemoryColumnarStorage.batchSize': 8543.602893557392, 'spark.sql.inMemoryColumnarStorage.compressed': 0.47031759496757597, 'spark.sql.shuffle.partitions': 370.2911073966682, 'spark.storage.memoryMapThreshold': 1.7793563146408993}
target = -748.0
训练集长度= 26
accuracy= 2.015979941706346e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-807.80769231 -807.80769231 -807.80769231]  max_stds [218.82817623 218.82817623 218.82817623]
所有模型的可信度所占权重  [0.088555351527913, 0.08784564005045842, 0.08733716147572856, 0.08566201934488168, 0.0836786254222483, 0.08255407795024362, 0.08138413221605711, 0.08032964308518406, 0.08019357024843067, 0.0796518500558007, 0.08164337887523852, 0.08116454974781538]
三个函数的累计增益为[0.44113340663399364, 0.44113340663399364, 0.44113340663399364]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 2 2 2 1 2 2 2 0 0 1 1 1 2 0 2 2 2 0 2 1 0 0 0 0 2 0 2 1 1 2 1 2 2 1
 0 2 1 1 2 0 1 0 0 0 0 0 2 1 2 1 1 0 0 1 0 1 2 0 1 1 1 1 1 1 1 2 1 2 1 1 2
 0 1 0 1 2 1 1 2 1 0 1 0 1 0 2 0 0 0 0 0 2 2 1 2 0 2]
每个概率被转中的次数, count: [31 36 33]
choose which one? [1]
ys [0.22431313 0.22431313 0.22431313 ... 0.22431313 0.22431313 0.22431313]
12 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7323]
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 27 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669355912.0
1669357693.0
1781.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config28 =================
2022年 12月 08日 星期四 19:10:42 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config28/tpch-times.txt'
================= config29 =================
2022年 12月 08日 星期四 19:10:50 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config29/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 33.086209099022184, 'spark.broadcast.checksum': 0.9428799380866189, 'spark.broadcast.compress': 0.3927423762337483, 'spark.default.parallelism': 495.2346319686302, 'spark.executor.cores': 2.430917482924915, 'spark.executor.instances': 7.031272764319242, 'spark.executor.memory': 3.4178927013091287, 'spark.executor.memoryOverhead': 834.0158585934662, 'spark.kryoserializer.buffer': 125.55303239303183, 'spark.kryoserializer.buffer.max': 115.49825551634021, 'spark.locality.wait': 6.432987138717456, 'spark.maxRemoteBlockSizeFetchToMem': 1556893353.8638961, 'spark.memory.fraction': 0.6871390816579462, 'spark.memory.offHeap.enabled': 0.33087193454384967, 'spark.memory.offHeap.size': 332.92273360591105, 'spark.memory.storageFraction': 0.7356909868764762, 'spark.rdd.compress': 0.1408681231198321, 'spark.reducer.maxBlocksInFlightPerAddress': 1845835896.2149482, 'spark.reducer.maxSizeInFlight': 58.07182042210493, 'spark.scheduler.revive.interval': 770.8561128453346, 'spark.shuffle.file.buffer': 21.43218771977965, 'spark.shuffle.io.numConnectionsPerPeer': 2.8523882554320785, 'spark.shuffle.sort.bypassMergeThreshold': 232.961738488154, 'spark.sql.autoBroadcastJoinThreshold': 13585990.940310284, 'spark.sql.inMemoryColumnarStorage.batchSize': 8674.396137197647, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8996714029838728, 'spark.sql.shuffle.partitions': 269.7470777882875, 'spark.storage.memoryMapThreshold': 3.8581323997430936}
target = -1781.0
训练集长度= 27
accuracy= 2.195171784972856e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-843.85185185 -843.85185185 -843.85185185]  max_stds [282.64985586 282.64985586 282.64985586]
所有模型的可信度所占权重  [0.08136444938294288, 0.08071236814123899, 0.08024517921880693, 0.07870606255603173, 0.07688372486959984, 0.0758504932886061, 0.07477554989074715, 0.07380668774934693, 0.07368166434593437, 0.07318393310290423, 0.07501374511344935, 0.07457379803369531, 0.08120234430669626]
三个函数的累计增益为[0.45499870751032206, 0.45499870751032206, 0.45499870751032206]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 0 2 1 1 1 1 1 0 2 0 0 2 1 2 1 0 1 1 0 2 1 0 0 0 1 1 0 2 1 2 1 2 1 2 1
 2 0 1 2 2 0 0 2 0 0 0 1 0 0 2 1 1 0 1 1 2 2 0 0 1 0 1 2 1 1 1 0 0 0 2 0 1
 0 0 2 2 1 2 1 2 0 0 1 1 0 1 1 0 1 0 0 0 1 0 1 0 2 0]
每个概率被转中的次数, count: [38 37 25]
choose which one? [0]
ys [39.42651322 39.42651322 39.42651322 ... 39.42651322 39.42651322
 39.42651322]
13 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3199]
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 28 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669357753.0
1669358490.0
737.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 53.34667078970624, 'spark.broadcast.checksum': 0.8967628387096702, 'spark.broadcast.compress': 0.29168862997450284, 'spark.default.parallelism': 422.97619927461807, 'spark.executor.cores': 2.5435620873200566, 'spark.executor.instances': 7.043536194891918, 'spark.executor.memory': 3.7721973319472704, 'spark.executor.memoryOverhead': 565.2744258666198, 'spark.kryoserializer.buffer': 45.68243745513908, 'spark.kryoserializer.buffer.max': 93.63286794103531, 'spark.locality.wait': 6.842074171607591, 'spark.maxRemoteBlockSizeFetchToMem': 1749876568.1439648, 'spark.memory.fraction': 0.5908798212343205, 'spark.memory.offHeap.enabled': 0.8711758974873663, 'spark.memory.offHeap.size': 948.9141056770678, 'spark.memory.storageFraction': 0.7016073900775381, 'spark.rdd.compress': 0.009883611715431395, 'spark.reducer.maxBlocksInFlightPerAddress': 1936019473.469111, 'spark.reducer.maxSizeInFlight': 59.39593818750908, 'spark.scheduler.revive.interval': 764.6273946194515, 'spark.shuffle.file.buffer': 44.467081584641434, 'spark.shuffle.io.numConnectionsPerPeer': 1.30075904960453, 'spark.shuffle.sort.bypassMergeThreshold': 254.50658720891792, 'spark.sql.autoBroadcastJoinThreshold': 5734278.144845981, 'spark.sql.inMemoryColumnarStorage.batchSize': 13727.087056295786, 'spark.sql.inMemoryColumnarStorage.compressed': 0.002814805133277698, 'spark.sql.shuffle.partitions': 350.57549514068455, 'spark.storage.memoryMapThreshold': 2.8153068119043336}
target = -737.0
训练集长度= 28
accuracy= 2.17620003694935e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-840.03571429 -840.03571429 -840.03571429]  max_stds [278.26406807 278.26406807 278.26406807]
所有模型的可信度所占权重  [0.07530255221652546, 0.07469905299634738, 0.07426667105935615, 0.07284222323546106, 0.07115565520938348, 0.07019940250111094, 0.06920454563228227, 0.06830786664598411, 0.06819215786364538, 0.06773150910116593, 0.06942499459164092, 0.06901782489778895, 0.0751525244579503, 0.0745030195913577]
三个函数的累计增益为[0.4572599490385445, 0.4572599490385445, 0.4572599490385445]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 1 1 1 2 2 1 1 1 1 0 0 0 2 0 0 1 0 0 1 1 0 1 2 2 1 0 0 1 0 1 1 1 2 1
 2 1 2 0 0 0 1 2 2 1 2 0 1 1 2 1 2 1 2 1 1 0 1 2 0 1 1 1 0 2 0 1 0 2 2 0 1
 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 2 0 0 2 1 2 1 2 1 1 1]
每个概率被转中的次数, count: [31 46 23]
choose which one? [1]
ys [0.23833065 0.23833065 0.23833065 ... 0.23833065 0.23833065 0.23833065]
14 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8440]
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 29 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669358551.0
1669359248.0
697.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config30 =================
2022年 12月 08日 星期四 19:10:58 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config30/tpch-times.txt'
================= config31 =================
2022年 12月 08日 星期四 19:11:05 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config31/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 60.18562408431971, 'spark.broadcast.checksum': 0.07822264137284607, 'spark.broadcast.compress': 0.13278530416999357, 'spark.default.parallelism': 302.444259536868, 'spark.executor.cores': 2.5682677679851116, 'spark.executor.instances': 5.669354852731797, 'spark.executor.memory': 4.493106731445774, 'spark.executor.memoryOverhead': 387.1519883399778, 'spark.kryoserializer.buffer': 72.78233451884373, 'spark.kryoserializer.buffer.max': 76.77937714128697, 'spark.locality.wait': 8.770162152646563, 'spark.maxRemoteBlockSizeFetchToMem': 1686987625.5049202, 'spark.memory.fraction': 0.5927661478247024, 'spark.memory.offHeap.enabled': 0.7154107987961206, 'spark.memory.offHeap.size': 85.3989104357671, 'spark.memory.storageFraction': 0.5862377206796263, 'spark.rdd.compress': 0.7230489759625716, 'spark.reducer.maxBlocksInFlightPerAddress': 1578941577.2442727, 'spark.reducer.maxSizeInFlight': 59.48769400249141, 'spark.scheduler.revive.interval': 937.174523396267, 'spark.shuffle.file.buffer': 22.788147873859238, 'spark.shuffle.io.numConnectionsPerPeer': 2.12476197881265, 'spark.shuffle.sort.bypassMergeThreshold': 175.37239470036496, 'spark.sql.autoBroadcastJoinThreshold': 9741503.741975278, 'spark.sql.inMemoryColumnarStorage.batchSize': 9896.320053955162, 'spark.sql.inMemoryColumnarStorage.compressed': 0.43938861578682165, 'spark.sql.shuffle.partitions': 285.0462617886699, 'spark.storage.memoryMapThreshold': 2.424293690996126}
target = -697.0
训练集长度= 29
accuracy= 2.1516795084915957e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-835.10344828 -835.10344828 -835.10344828]  max_stds [274.66711449 274.66711449 274.66711449]
所有模型的可信度所占权重  [0.07013607959909787, 0.06957398617598659, 0.0691712697599104, 0.06784455262986945, 0.0662736992411803, 0.06538305458053974, 0.06445645437260464, 0.06362129610895091, 0.06351352605163482, 0.06308448218364499, 0.06466177843275944, 0.06428254445970327, 0.06999634517433037, 0.06939140253052258, 0.06860952869926468]
三个函数的累计增益为[0.46127414728636906, 0.46127414728636906, 0.46127414728636906]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 2 0 0 2 2 2 1 0 0 0 1 1 0 2 1 0 1 0 1 2 1 1 1 0 0 0 0 1 2 2 0 2 0
 1 2 0 0 0 1 0 2 1 0 1 2 1 2 0 1 2 2 2 0 1 2 2 0 0 1 1 2 0 0 2 0 0 2 1 1 2
 0 1 0 0 2 0 2 1 1 2 2 0 0 2 1 1 2 0 2 2 0 1 1 1 2 2]
每个概率被转中的次数, count: [35 31 34]
choose which one? [0]
ys [39.04226869 39.04226869 39.04226869 ... 39.04226869 39.04226869
 39.04226869]
15 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2677]
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 30 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669359309.0
1669360228.0
919.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 43.03827606264822, 'spark.broadcast.checksum': 0.07351015448906273, 'spark.broadcast.compress': 0.6722179391372437, 'spark.default.parallelism': 322.4167774458931, 'spark.executor.cores': 2.3307993765713135, 'spark.executor.instances': 6.620241278554289, 'spark.executor.memory': 5.027816833157569, 'spark.executor.memoryOverhead': 602.4992391719716, 'spark.kryoserializer.buffer': 111.26815621021505, 'spark.kryoserializer.buffer.max': 80.77010910402669, 'spark.locality.wait': 9.954131861874664, 'spark.maxRemoteBlockSizeFetchToMem': 1449520248.6954098, 'spark.memory.fraction': 0.7662481956130112, 'spark.memory.offHeap.enabled': 0.35425170409875095, 'spark.memory.offHeap.size': 633.6841453470743, 'spark.memory.storageFraction': 0.7771976517107138, 'spark.rdd.compress': 0.135808130317301, 'spark.reducer.maxBlocksInFlightPerAddress': 1920975177.9758945, 'spark.reducer.maxSizeInFlight': 68.35833639744632, 'spark.scheduler.revive.interval': 906.2048702273314, 'spark.shuffle.file.buffer': 19.03606872412754, 'spark.shuffle.io.numConnectionsPerPeer': 2.754806937355262, 'spark.shuffle.sort.bypassMergeThreshold': 202.21031879492745, 'spark.sql.autoBroadcastJoinThreshold': 12176997.122120172, 'spark.sql.inMemoryColumnarStorage.batchSize': 8751.126950714792, 'spark.sql.inMemoryColumnarStorage.compressed': 0.295504506228054, 'spark.sql.shuffle.partitions': 299.1980147895592, 'spark.storage.memoryMapThreshold': 3.3578346166358264}
target = -919.0
训练集长度= 30
accuracy= 2.165582433586063e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-837.9 -837.9 -837.9]  max_stds [270.47012774 270.47012774 270.47012774]
所有模型的可信度所占权重  [0.06560581169742727, 0.0650800253192352, 0.0647033213815247, 0.06346230028786298, 0.061992912317909606, 0.06115979666289579, 0.060293047920906374, 0.05951183465526612, 0.05941102574026381, 0.059009694907771165, 0.06048510957739567, 0.06013037129193966, 0.06547510307482751, 0.06490923521616966, 0.06417786460580964, 0.06459254534279493]
三个函数的累计增益为[0.45604343074367876, 0.45604343074367876, 0.45604343074367876]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 0 0 2 2 2 0 0 1 0 2 2 0 0 0 2 0 0 1 0 1 2 0 0 0 1 2 1 1 2 2 1 2 0 0 2
 1 1 2 1 1 1 0 2 2 0 0 2 1 1 2 2 1 2 2 2 2 1 2 0 1 1 0 0 0 1 2 0 2 0 2 0 1
 1 0 1 1 1 2 1 0 0 2 0 1 1 1 1 2 1 0 1 1 1 0 2 2 2 1]
每个概率被转中的次数, count: [32 36 32]
choose which one? [1]
ys [0.23444251 0.23444251 0.23444251 ... 0.23444251 0.23444251 0.23444251]
16 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1978]
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 31 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669360287.0
1669360980.0
693.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config32 =================
2022年 12月 08日 星期四 19:11:13 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config32/tpch-times.txt'
================= config33 =================
2022年 12月 08日 星期四 19:11:21 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config33/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 49.6869882453782, 'spark.broadcast.checksum': 0.9284824014438525, 'spark.broadcast.compress': 0.978746514094568, 'spark.default.parallelism': 238.35384551262194, 'spark.executor.cores': 2.5282493802277775, 'spark.executor.instances': 4.787566730212221, 'spark.executor.memory': 6.266830899092403, 'spark.executor.memoryOverhead': 660.49257166953, 'spark.kryoserializer.buffer': 44.54047437301851, 'spark.kryoserializer.buffer.max': 47.66526442618064, 'spark.locality.wait': 5.559169411006687, 'spark.maxRemoteBlockSizeFetchToMem': 1960641028.237883, 'spark.memory.fraction': 0.8051114690208272, 'spark.memory.offHeap.enabled': 0.27341487553572785, 'spark.memory.offHeap.size': 955.5583599164081, 'spark.memory.storageFraction': 0.5207784266947375, 'spark.rdd.compress': 0.9542932956860378, 'spark.reducer.maxBlocksInFlightPerAddress': 1228485934.3247263, 'spark.reducer.maxSizeInFlight': 59.533071052893305, 'spark.scheduler.revive.interval': 744.7265763812868, 'spark.shuffle.file.buffer': 40.22991688651723, 'spark.shuffle.io.numConnectionsPerPeer': 2.3015077063520977, 'spark.shuffle.sort.bypassMergeThreshold': 302.51098279245434, 'spark.sql.autoBroadcastJoinThreshold': 9042853.733525362, 'spark.sql.inMemoryColumnarStorage.batchSize': 5756.99172427228, 'spark.sql.inMemoryColumnarStorage.compressed': 0.08759452462718054, 'spark.sql.shuffle.partitions': 342.3931035134177, 'spark.storage.memoryMapThreshold': 1.0700390816309668}
target = -693.0
训练集长度= 31
accuracy= 2.1423449003233502e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-833.22580645 -833.22580645 -833.22580645]  max_stds [267.30081033 267.30081033 267.30081033]
所有模型的可信度所占权重  [0.06166542539541041, 0.061171218558554855, 0.060817140040722036, 0.05965065658925171, 0.05826952232852544, 0.0574864448855248, 0.05667175441065929, 0.05593746201942388, 0.05584270784343811, 0.0554654815601312, 0.05685228054764516, 0.05651884839109217, 0.06154256733441063, 0.06101068637266507, 0.06032324300991005, 0.06071301738184245, 0.06006154333079282]
三个函数的累计增益为[0.4595545451326969, 0.4595545451326969, 0.4595545451326969]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 2 2 1 1 0 2 0 0 0 2 2 2 1 1 1 2 1 0 2 0 1 1 2 0 2 0 0 0 2 2 1 2 1 0
 2 0 2 1 1 1 0 0 0 0 1 1 0 1 1 1 0 2 0 1 1 2 1 2 1 0 2 1 2 0 2 2 2 0 1 0 2
 1 2 2 2 1 2 1 1 1 2 2 0 1 1 1 2 2 2 1 2 0 1 0 1 2 1]
每个概率被转中的次数, count: [28 36 36]
choose which one? [2]
ys [-144.65891903 -144.65891903 -144.65891903 ... -144.65891903 -144.65891903
 -144.65891903]
17 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1994]
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 32 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669361041.0
1669361759.0
718.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 35.078757221194124, 'spark.broadcast.checksum': 0.5283263885915418, 'spark.broadcast.compress': 0.8407405928124265, 'spark.default.parallelism': 471.21977918854105, 'spark.executor.cores': 1.2179224561390596, 'spark.executor.instances': 4.825166613788046, 'spark.executor.memory': 6.113392572979449, 'spark.executor.memoryOverhead': 457.4978831830685, 'spark.kryoserializer.buffer': 105.8636932058289, 'spark.kryoserializer.buffer.max': 69.6731604528578, 'spark.locality.wait': 6.3656496189628395, 'spark.maxRemoteBlockSizeFetchToMem': 1102195145.4549167, 'spark.memory.fraction': 0.7962458814966961, 'spark.memory.offHeap.enabled': 0.6712717241167853, 'spark.memory.offHeap.size': 633.0994436284883, 'spark.memory.storageFraction': 0.8203125681704089, 'spark.rdd.compress': 0.9462411696437546, 'spark.reducer.maxBlocksInFlightPerAddress': 1951326925.5904927, 'spark.reducer.maxSizeInFlight': 58.89982812838136, 'spark.scheduler.revive.interval': 616.164623470421, 'spark.shuffle.file.buffer': 37.696062802322444, 'spark.shuffle.io.numConnectionsPerPeer': 1.3563467195922956, 'spark.shuffle.sort.bypassMergeThreshold': 260.5578999439897, 'spark.sql.autoBroadcastJoinThreshold': 6350311.108978247, 'spark.sql.inMemoryColumnarStorage.batchSize': 13868.313855229662, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9021877946034973, 'spark.sql.shuffle.partitions': 347.89008415111294, 'spark.storage.memoryMapThreshold': 3.1093830078927445}
target = -718.0
训练集长度= 32
accuracy= 2.1244436608670716e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-829.625 -829.625 -829.625]  max_stds [263.85385988 263.85385988 263.85385988]
所有模型的可信度所占权重  [0.058199105607574936, 0.057732678988351736, 0.05739850383395055, 0.05629759042670009, 0.05499409210194467, 0.05425503279096332, 0.053486137471095596, 0.052793120920081434, 0.05270369303955367, 0.0523476712954506, 0.05365651592294279, 0.05334182656228796, 0.05808315360982224, 0.05758117059316745, 0.05693236960603953, 0.05730023408909081, 0.0566853805166957, 0.056211722624287024]
三个函数的累计增益为[0.46171758523585593, 0.46171758523585593, 0.46171758523585593]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 2 0 2 0 1 0 2 1 1 1 1 0 1 0 1 2 1 2 2 2 1 1 2 1 2 0 2 0 1 0 1 1 1 1 1
 0 2 1 0 2 2 2 0 1 0 1 0 0 2 0 0 1 0 0 0 0 1 1 2 0 2 0 0 1 1 2 2 0 0 1 1 1
 0 0 0 0 1 2 0 1 2 1 0 1 1 0 0 2 2 2 1 0 0 2 1 0 2 2]
每个概率被转中的次数, count: [36 37 27]
choose which one? [1]
ys [0.23851287 0.23851287 0.23851287 ... 0.23851287 0.23851287 0.23851287]
18 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [332]
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 33 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669361821.0
1669362519.0
698.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config34 =================
2022年 12月 08日 星期四 19:11:29 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config34/tpch-times.txt'
================= config35 =================
2022年 12月 08日 星期四 19:11:36 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config35/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 34.12540637896787, 'spark.broadcast.checksum': 0.34664751070707733, 'spark.broadcast.compress': 0.43974450292442613, 'spark.default.parallelism': 223.84986197317357, 'spark.executor.cores': 1.1671506612524063, 'spark.executor.instances': 7.7845798893735605, 'spark.executor.memory': 6.717213771549094, 'spark.executor.memoryOverhead': 867.4455769578108, 'spark.kryoserializer.buffer': 126.61183369265594, 'spark.kryoserializer.buffer.max': 117.0583874723881, 'spark.locality.wait': 5.750979529843592, 'spark.maxRemoteBlockSizeFetchToMem': 1262054745.0213604, 'spark.memory.fraction': 0.7831204147492254, 'spark.memory.offHeap.enabled': 0.19025490861756655, 'spark.memory.offHeap.size': 142.9955693482093, 'spark.memory.storageFraction': 0.5199557116402224, 'spark.rdd.compress': 0.9294279945333782, 'spark.reducer.maxBlocksInFlightPerAddress': 1318038391.464664, 'spark.reducer.maxSizeInFlight': 42.51126989107377, 'spark.scheduler.revive.interval': 758.0106356459623, 'spark.shuffle.file.buffer': 23.815761496252296, 'spark.shuffle.io.numConnectionsPerPeer': 2.6456991971547144, 'spark.shuffle.sort.bypassMergeThreshold': 223.9214675243119, 'spark.sql.autoBroadcastJoinThreshold': 7831897.636378469, 'spark.sql.inMemoryColumnarStorage.batchSize': 10721.589355983648, 'spark.sql.inMemoryColumnarStorage.compressed': 0.4852753059116227, 'spark.sql.shuffle.partitions': 396.88317515620236, 'spark.storage.memoryMapThreshold': 3.0979733009335693}
target = -698.0
训练集长度= 33
accuracy= 2.1046143421226702e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-825.63636364 -825.63636364 -825.63636364]  max_stds [260.80316718 260.80316718 260.80316718]
所有模型的可信度所占权重  [0.0551291272148618, 0.05468730440402796, 0.0543707568487571, 0.05332791616164939, 0.05209317682640353, 0.05139310258386884, 0.05066476616939339, 0.05000830595056329, 0.04992359535319753, 0.04958635360666182, 0.0508261572294191, 0.0505280676004533, 0.05501929163632167, 0.054543788013096575, 0.05392921100571645, 0.05427767079169165, 0.05369525048716604, 0.053246577849772055, 0.052749580266978645]
三个函数的累计增益为[0.4646916673666465, 0.4646916673666465, 0.4646916673666465]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 1 1 0 0 1 0 1 1 0 0 2 1 0 0 0 2 0 0 1 0 2 2 2 1 2 0 1 2 1 0 2 1 2 2 0
 0 2 0 0 0 2 0 2 2 0 1 1 1 2 0 2 2 1 1 0 0 0 0 1 2 2 0 0 0 2 1 1 2 2 0 2 0
 2 0 1 0 0 2 2 0 1 0 2 1 0 1 2 2 0 2 2 1 1 0 0 0 0 2]
每个概率被转中的次数, count: [41 27 32]
choose which one? [0]
ys [37.0041796 37.0041796 37.0041796 ... 37.0041796 37.0041796 37.0041796]
19 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8035]
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 34 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669362579.0
1669363327.0
748.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 51.844043947736694, 'spark.broadcast.checksum': 0.6620062268558846, 'spark.broadcast.compress': 0.3155415496063033, 'spark.default.parallelism': 298.5455009271027, 'spark.executor.cores': 2.911709421447595, 'spark.executor.instances': 7.954604803861506, 'spark.executor.memory': 3.1405316202723035, 'spark.executor.memoryOverhead': 465.77932177476055, 'spark.kryoserializer.buffer': 43.874853158975, 'spark.kryoserializer.buffer.max': 125.88935954145863, 'spark.locality.wait': 5.4449561608790615, 'spark.maxRemoteBlockSizeFetchToMem': 1894118089.999244, 'spark.memory.fraction': 0.8195525494425218, 'spark.memory.offHeap.enabled': 0.49958885293580646, 'spark.memory.offHeap.size': 936.9808864631702, 'spark.memory.storageFraction': 0.591921336481065, 'spark.rdd.compress': 0.5805458091927486, 'spark.reducer.maxBlocksInFlightPerAddress': 1559144526.462627, 'spark.reducer.maxSizeInFlight': 63.8523137931748, 'spark.scheduler.revive.interval': 549.9306055100059, 'spark.shuffle.file.buffer': 25.266212013619143, 'spark.shuffle.io.numConnectionsPerPeer': 2.1191449024659996, 'spark.shuffle.sort.bypassMergeThreshold': 243.78261120873862, 'spark.sql.autoBroadcastJoinThreshold': 12468549.231548667, 'spark.sql.inMemoryColumnarStorage.batchSize': 9072.158945519204, 'spark.sql.inMemoryColumnarStorage.compressed': 0.28213308840689133, 'spark.sql.shuffle.partitions': 377.82307612886717, 'spark.storage.memoryMapThreshold': 2.746903788353202}
target = -748.0
训练集长度= 34
accuracy= 2.093262414938958e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-823.35294118 -823.35294118 -823.35294118]  max_stds [257.27381641 257.27381641 257.27381641]
所有模型的可信度所占权重  [0.05238095724851155, 0.051961159168351395, 0.05166039141095265, 0.05066953601004089, 0.049496348049337356, 0.04883117229159186, 0.048139143222448756, 0.04751540734279532, 0.0474349195425474, 0.04711448919292746, 0.04829248898797395, 0.04800925903495425, 0.05227659693964156, 0.05182479702518633, 0.05124085649182671, 0.05157194566508451, 0.051018558832872936, 0.050592252387891244, 0.05012002998111429, 0.049849691173949634]
三个函数的累计增益为[0.46527854417505643, 0.46527854417505643, 0.46527854417505643]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 2 2 2 2 2 0 0 2 2 0 0 1 0 1 0 2 2 2 2 1 0 1 0 2 0 1 1 2 1 1 0 0 1 2 1
 1 1 2 1 2 1 0 1 1 1 0 0 1 2 1 0 2 1 2 2 2 2 2 1 1 1 0 1 2 1 1 2 1 2 0 0 1
 1 0 0 2 1 0 0 2 2 0 1 2 0 1 0 0 2 1 0 2 0 0 2 0 1 1]
每个概率被转中的次数, count: [30 35 35]
choose which one? [1]
ys [0.24043548 0.24043548 0.24043548 ... 0.24043548 0.24043548 0.24043548]
20 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9541]
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 35 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669363388.0
1669364080.0
692.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config36 =================
2022年 12月 08日 星期四 19:11:44 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config36/tpch-times.txt'
================= config37 =================
2022年 12月 08日 星期四 19:11:52 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config37/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 41.93095497333162, 'spark.broadcast.checksum': 0.8951017211985993, 'spark.broadcast.compress': 0.6383488932781427, 'spark.default.parallelism': 449.62965759796856, 'spark.executor.cores': 2.489773859258705, 'spark.executor.instances': 5.435624971687524, 'spark.executor.memory': 3.951021987408382, 'spark.executor.memoryOverhead': 426.9105027037538, 'spark.kryoserializer.buffer': 78.16619034154095, 'spark.kryoserializer.buffer.max': 55.400834003813486, 'spark.locality.wait': 6.780931283019155, 'spark.maxRemoteBlockSizeFetchToMem': 1985929953.829052, 'spark.memory.fraction': 0.7067502613504869, 'spark.memory.offHeap.enabled': 0.9525928405433881, 'spark.memory.offHeap.size': 909.266399541784, 'spark.memory.storageFraction': 0.8605346922335447, 'spark.rdd.compress': 0.5364082974025781, 'spark.reducer.maxBlocksInFlightPerAddress': 1915900913.7390127, 'spark.reducer.maxSizeInFlight': 68.11269101604773, 'spark.scheduler.revive.interval': 779.7304840810666, 'spark.shuffle.file.buffer': 28.621496793825475, 'spark.shuffle.io.numConnectionsPerPeer': 1.0358642084691612, 'spark.shuffle.sort.bypassMergeThreshold': 202.33717798952287, 'spark.sql.autoBroadcastJoinThreshold': 11066356.07526708, 'spark.sql.inMemoryColumnarStorage.batchSize': 13802.099298360949, 'spark.sql.inMemoryColumnarStorage.compressed': 0.274004438604198, 'spark.sql.shuffle.partitions': 365.3852289787248, 'spark.storage.memoryMapThreshold': 1.9882312686885362}
target = -692.0
训练集长度= 35
accuracy= 2.0746048447593631e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-819.6 -819.6 -819.6]  max_stds [254.51434986 254.51434986 254.51434986]
所有模型的可信度所占权重  [0.04991489331591381, 0.04951485907663852, 0.049228251284188305, 0.04828404475903144, 0.047166089781228986, 0.0465322300977055, 0.045872781340518635, 0.045278410570574495, 0.045201712087506556, 0.044896367405839535, 0.04601890767972094, 0.04574901202237781, 0.049815446227557875, 0.04938491678108021, 0.04882846781648418, 0.04914396951078906, 0.04861663579748513, 0.04821039960328591, 0.047760409143130164, 0.047502797724256016, 0.047079397974686986]
三个函数的累计增益为[0.4682284286021201, 0.4682284286021201, 0.4682284286021201]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 1 2 1 2 1 1 0 1 2 1 0 2 1 0 2 0 2 1 0 2 0 1 0 0 2 1 0 2 1 1 1 2 2 0 2
 0 0 0 1 1 2 1 1 2 2 2 1 0 1 1 1 2 0 2 0 0 0 1 2 0 1 0 0 0 0 0 0 2 0 1 0 0
 1 0 0 2 0 0 2 1 0 0 2 0 2 2 0 0 0 2 2 0 1 0 0 1 0 0]
每个概率被转中的次数, count: [43 29 28]
choose which one? [0]
ys [36.50055471 36.50055471 36.50055471 ... 36.50055471 36.50055471
 36.50055471]
21 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5140]
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 36 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669364141.0
1669364824.0
683.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 63.4969730123658, 'spark.broadcast.checksum': 0.7786337832734636, 'spark.broadcast.compress': 0.06356024828135576, 'spark.default.parallelism': 334.4746859389078, 'spark.executor.cores': 1.2251387401860403, 'spark.executor.instances': 7.71529438141627, 'spark.executor.memory': 3.3854119511400262, 'spark.executor.memoryOverhead': 550.8230063212161, 'spark.kryoserializer.buffer': 67.11917107891722, 'spark.kryoserializer.buffer.max': 61.8186652700077, 'spark.locality.wait': 4.487449838722812, 'spark.maxRemoteBlockSizeFetchToMem': 1637804996.0086834, 'spark.memory.fraction': 0.6968323998531917, 'spark.memory.offHeap.enabled': 0.17943759106786317, 'spark.memory.offHeap.size': 262.5258889527231, 'spark.memory.storageFraction': 0.6769686969985251, 'spark.rdd.compress': 0.5989695152724752, 'spark.reducer.maxBlocksInFlightPerAddress': 1452518521.7269645, 'spark.reducer.maxSizeInFlight': 40.57380001696069, 'spark.scheduler.revive.interval': 963.4461656166693, 'spark.shuffle.file.buffer': 37.033365506000166, 'spark.shuffle.io.numConnectionsPerPeer': 1.726583115214672, 'spark.shuffle.sort.bypassMergeThreshold': 326.45189409130955, 'spark.sql.autoBroadcastJoinThreshold': 7301357.033221986, 'spark.sql.inMemoryColumnarStorage.batchSize': 12012.177297752925, 'spark.sql.inMemoryColumnarStorage.compressed': 0.1651583494022446, 'spark.sql.shuffle.partitions': 288.59166984863776, 'spark.storage.memoryMapThreshold': 1.8380014819110235}
target = -683.0
训练集长度= 36
accuracy= 2.0557409421476304e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-815.80555556 -815.80555556 -815.80555556]  max_stds [251.95654602 251.95654602 251.95654602]
所有模型的可信度所占权重  [0.04769008795802787, 0.04730788403471148, 0.04703405091751138, 0.04613192954162699, 0.04506380402471807, 0.04445819671891931, 0.04382814089499898, 0.04326026240392586, 0.04318698252369839, 0.04289524765743206, 0.04396775409471948, 0.04370988821976468, 0.04759507342276986, 0.04718373352385246, 0.046652086588382054, 0.046953525749176765, 0.04644969634075689, 0.04606156689589401, 0.04563163339910621, 0.04538550422985516, 0.04498097624317676, 0.044571974616975325]
三个函数的累计增益为[0.4714907602765276, 0.4714907602765276, 0.4714907602765276]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 0 1 1 0 2 2 1 1 1 2 0 2 2 2 2 0 0 1 0 1 0 2 2 1 0 2 0 2 2 2 0 2 1 1 0
 2 0 1 2 0 0 0 0 2 0 0 0 2 1 0 2 0 2 1 1 0 0 2 1 0 0 1 1 1 1 0 2 0 1 0 0 2
 2 1 0 1 2 0 0 1 1 2 0 0 2 1 2 1 2 1 2 2 0 0 1 2 0 0]
每个概率被转中的次数, count: [38 29 33]
choose which one? [0]
ys [36.62387897 36.62387897 36.62387897 ... 36.62387897 36.62387897
 36.62387897]
22 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3319]
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 37 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669364884.0
1669365697.0
813.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config38 =================
2022年 12月 08日 星期四 19:12:00 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config38/tpch-times.txt'
================= config39 =================
2022年 12月 08日 星期四 19:12:07 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config39/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 53.2189815666579, 'spark.broadcast.checksum': 0.08145764578550219, 'spark.broadcast.compress': 0.4396559264050873, 'spark.default.parallelism': 333.9805632491326, 'spark.executor.cores': 1.1081623282053485, 'spark.executor.instances': 6.712650330761528, 'spark.executor.memory': 4.983310851123778, 'spark.executor.memoryOverhead': 412.3228078482501, 'spark.kryoserializer.buffer': 100.31604889182815, 'spark.kryoserializer.buffer.max': 32.31275820839712, 'spark.locality.wait': 8.764060138726052, 'spark.maxRemoteBlockSizeFetchToMem': 1278474496.347536, 'spark.memory.fraction': 0.5162756448406169, 'spark.memory.offHeap.enabled': 0.8379542599385553, 'spark.memory.offHeap.size': 470.1972495825603, 'spark.memory.storageFraction': 0.5720832860336414, 'spark.rdd.compress': 0.6014866693529483, 'spark.reducer.maxBlocksInFlightPerAddress': 1347627712.4205108, 'spark.reducer.maxSizeInFlight': 47.374334913071394, 'spark.scheduler.revive.interval': 927.2716910154419, 'spark.shuffle.file.buffer': 45.20359955871113, 'spark.shuffle.io.numConnectionsPerPeer': 1.8386158369381225, 'spark.shuffle.sort.bypassMergeThreshold': 337.5983276247267, 'spark.sql.autoBroadcastJoinThreshold': 5701037.456577739, 'spark.sql.inMemoryColumnarStorage.batchSize': 8955.186716065484, 'spark.sql.inMemoryColumnarStorage.compressed': 0.421820135107318, 'spark.sql.shuffle.partitions': 387.8669222818268, 'spark.storage.memoryMapThreshold': 1.3518255985329413}
target = -813.0
训练集长度= 37
accuracy= 2.0553639781776934e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-815.72972973 -815.72972973 -815.72972973]  max_stds [248.52882248 248.52882248 248.52882248]
所有模型的可信度所占权重  [0.0456555050963577, 0.045289606983857325, 0.045027456297767506, 0.044163821759905644, 0.04314126524829459, 0.042561494721122986, 0.041958318713032974, 0.04141466739148123, 0.04134451382103426, 0.041065225120931, 0.042091975651492974, 0.041845111003674815, 0.04556454412764408, 0.045170753055841346, 0.04466178755774466, 0.044950366541998514, 0.04446803180308897, 0.04409646096716224, 0.04368486954860656, 0.043449240888181494, 0.04306197111477135, 0.04267041855890498, 0.04266259402710282]
三个函数的累计增益为[0.4694067018777517, 0.4694067018777517, 0.4694067018777517]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 0 1 2 0 1 1 2 2 1 0 0 0 0 1 2 1 2 1 1 2 1 1 0 0 2 1 1 2 0 1 2 2 2 0
 1 1 2 1 0 0 0 1 1 0 1 1 0 1 2 1 2 2 2 0 2 1 0 0 1 0 2 1 0 1 0 2 2 0 0 1 1
 0 0 2 1 1 2 2 0 1 2 2 0 1 1 1 1 2 1 2 1 1 0 1 0 1 2]
每个概率被转中的次数, count: [30 41 29]
choose which one? [1]
ys [0.24226585 0.24226585 0.24226585 ... 0.24226585 0.24226585 0.24226585]
23 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6597]
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 38 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669365757.0
1669366741.0
984.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 33.75328006691472, 'spark.broadcast.checksum': 0.36344369041530233, 'spark.broadcast.compress': 0.5939737165498313, 'spark.default.parallelism': 382.08152979330487, 'spark.executor.cores': 1.9387435460740983, 'spark.executor.instances': 4.092950334153131, 'spark.executor.memory': 4.845825956465074, 'spark.executor.memoryOverhead': 619.0199034602362, 'spark.kryoserializer.buffer': 89.78215128226576, 'spark.kryoserializer.buffer.max': 109.62642974489451, 'spark.locality.wait': 6.958136453707483, 'spark.maxRemoteBlockSizeFetchToMem': 1492791825.0230808, 'spark.memory.fraction': 0.6212537340952479, 'spark.memory.offHeap.enabled': 0.5249745486925963, 'spark.memory.offHeap.size': 674.8495159673458, 'spark.memory.storageFraction': 0.7140466286791514, 'spark.rdd.compress': 0.5933444755625966, 'spark.reducer.maxBlocksInFlightPerAddress': 2097962941.9511828, 'spark.reducer.maxSizeInFlight': 65.79435595010051, 'spark.scheduler.revive.interval': 757.4659992704615, 'spark.shuffle.file.buffer': 21.618746989600744, 'spark.shuffle.io.numConnectionsPerPeer': 2.1589373953321456, 'spark.shuffle.sort.bypassMergeThreshold': 206.06932861116132, 'spark.sql.autoBroadcastJoinThreshold': 13578543.510369794, 'spark.sql.inMemoryColumnarStorage.batchSize': 12183.15575132463, 'spark.sql.inMemoryColumnarStorage.compressed': 0.0643298989966461, 'spark.sql.shuffle.partitions': 291.37870727616234, 'spark.storage.memoryMapThreshold': 3.74131263802137}
target = -984.0
训练集长度= 38
accuracy= 2.0773783916336876e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-820.15789474 -820.15789474 -820.15789474]  max_stds [246.71169263 246.71169263 246.71169263]
所有模型的可信度所占权重  [0.043768238739292496, 0.04341746579507967, 0.04316615165913413, 0.04233821727188206, 0.041357930285019204, 0.040802125792358424, 0.04022388333357544, 0.039702704983179606, 0.03963545135816206, 0.039367707644068724, 0.040352015281285444, 0.04011535530305954, 0.04368103783359202, 0.04330352494423317, 0.0428155986058049, 0.04309224857060779, 0.04262985215290763, 0.042273640979226035, 0.04187906355789713, 0.04165317510388621, 0.041281913941330836, 0.04090654703414253, 0.040899045945824324, 0.04133710388445053]
三个函数的累计增益为[0.4628733750380268, 0.4628733750380268, 0.4628733750380268]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 2 0 0 1 1 0 1 2 0 1 1 1 2 2 2 2 1 0 0 0 1 0 0 0 2 0 2 1 1 0 2 2 0 1
 2 0 2 0 1 2 0 1 1 1 0 1 2 0 1 1 2 2 1 1 2 2 2 2 1 1 0 2 0 2 2 0 1 1 2 2 2
 2 1 2 0 0 2 2 2 0 2 0 0 0 2 1 1 2 2 0 1 1 2 0 2 2 0]
每个概率被转中的次数, count: [31 29 40]
choose which one? [2]
ys [-184.62857452 -184.62857452 -184.62857452 ... -184.62857452 -184.62857452
 -184.62857452]
24 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6755]
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 39 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669366801.0
1669367509.0
708.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config40 =================
2022年 12月 08日 星期四 19:12:15 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config40/tpch-times.txt'
================= config41 =================
2022年 12月 08日 星期四 19:12:23 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config41/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 44.83005871911616, 'spark.broadcast.checksum': 0.5905773171688139, 'spark.broadcast.compress': 0.9405037771046105, 'spark.default.parallelism': 370.9575396225604, 'spark.executor.cores': 2.971946475282265, 'spark.executor.instances': 4.993008541993476, 'spark.executor.memory': 4.533090126940303, 'spark.executor.memoryOverhead': 500.2110790672011, 'spark.kryoserializer.buffer': 92.36586678306556, 'spark.kryoserializer.buffer.max': 55.77451927084898, 'spark.locality.wait': 8.15757528807613, 'spark.maxRemoteBlockSizeFetchToMem': 1459064375.8152092, 'spark.memory.fraction': 0.5927741827282365, 'spark.memory.offHeap.enabled': 0.7622321318921036, 'spark.memory.offHeap.size': 1018.5072256062203, 'spark.memory.storageFraction': 0.5890277500653215, 'spark.rdd.compress': 0.48170133580880103, 'spark.reducer.maxBlocksInFlightPerAddress': 2073619581.1502018, 'spark.reducer.maxSizeInFlight': 59.34252622940602, 'spark.scheduler.revive.interval': 746.6451717031483, 'spark.shuffle.file.buffer': 17.376933626548997, 'spark.shuffle.io.numConnectionsPerPeer': 2.2048659057560447, 'spark.shuffle.sort.bypassMergeThreshold': 270.0949123449354, 'spark.sql.autoBroadcastJoinThreshold': 12358909.197834577, 'spark.sql.inMemoryColumnarStorage.batchSize': 9946.739119325848, 'spark.sql.inMemoryColumnarStorage.compressed': 0.31150911202172826, 'spark.sql.shuffle.partitions': 313.5485425733249, 'spark.storage.memoryMapThreshold': 3.7937799299062553}
target = -708.0
训练集长度= 39
accuracy= 2.0630812715037213e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-817.28205128 -817.28205128 -817.28205128]  max_stds [244.17259015 244.17259015 244.17259015]
所有模型的可信度所占权重  [0.04204229288772776, 0.04170535223664218, 0.04146394835989072, 0.04066866253155274, 0.03972703193816271, 0.039193144901767486, 0.03863770471243107, 0.038137078379610105, 0.03807247681733132, 0.03781529124233457, 0.0387607839367514, 0.038533456349305106, 0.0419585306408763, 0.04159590450099763, 0.04112721892856627, 0.04139295954739499, 0.040948797155141034, 0.040606632724376354, 0.04022761497104141, 0.040010634146200555, 0.03965401320408394, 0.03929344842224811, 0.03928624312998289, 0.03970702680069942, 0.03943375153488377]
三个函数的累计增益为[0.46447697298879803, 0.46447697298879803, 0.46447697298879803]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 0 2 0 2 1 0 0 0 1 1 1 2 0 1 0 0 1 2 2 1 0 2 2 2 1 2 2 2 2 0 2 0 0 2 1
 2 0 1 0 2 1 1 2 2 1 2 0 0 2 2 2 1 0 1 2 1 2 1 0 1 0 0 2 1 2 2 1 1 1 1 1 1
 0 1 1 1 2 2 0 1 2 2 1 2 0 0 1 0 0 2 0 1 0 1 1 0 2 1]
每个概率被转中的次数, count: [29 37 34]
choose which one? [1]
ys [0.23642141 0.23642141 0.23642141 ... 0.23642141 0.23642141 0.23642141]
25  ys.argmax() 0
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 40 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669367572.0
1669368245.0
673.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 57.18935388266643, 'spark.broadcast.checksum': 0.5210038985603134, 'spark.broadcast.compress': 0.07670865362830259, 'spark.default.parallelism': 344.722890722794, 'spark.executor.cores': 2.2286616024750954, 'spark.executor.instances': 5.9049022619926586, 'spark.executor.memory': 3.4276711004226867, 'spark.executor.memoryOverhead': 692.8974990794452, 'spark.kryoserializer.buffer': 75.38799244553917, 'spark.kryoserializer.buffer.max': 122.0543952010706, 'spark.locality.wait': 9.883987473044446, 'spark.maxRemoteBlockSizeFetchToMem': 1406523887.089346, 'spark.memory.fraction': 0.7539270829393898, 'spark.memory.offHeap.enabled': 0.6359152537179613, 'spark.memory.offHeap.size': 682.784410183411, 'spark.memory.storageFraction': 0.7972304754464392, 'spark.rdd.compress': 0.651940330524797, 'spark.reducer.maxBlocksInFlightPerAddress': 1660749229.730738, 'spark.reducer.maxSizeInFlight': 66.98777435053954, 'spark.scheduler.revive.interval': 680.1315716546137, 'spark.shuffle.file.buffer': 24.063390021060183, 'spark.shuffle.io.numConnectionsPerPeer': 1.3273590379944424, 'spark.shuffle.sort.bypassMergeThreshold': 181.09504147807786, 'spark.sql.autoBroadcastJoinThreshold': 11358637.770567685, 'spark.sql.inMemoryColumnarStorage.batchSize': 8281.789903657416, 'spark.sql.inMemoryColumnarStorage.compressed': 0.33537683528261486, 'spark.sql.shuffle.partitions': 335.7652694998934, 'spark.storage.memoryMapThreshold': 2.058227770056539}
target = -673.0
训练集长度= 40
accuracy= 2.0451489854938772e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-813.675 -813.675 -813.675]  max_stds [242.1511292 242.1511292 242.1511292]
所有模型的可信度所占权重  [0.040460646029497845, 0.040136381212330804, 0.03990405904014403, 0.03913869216354222, 0.03823248606694701, 0.03771868406149954, 0.03718413974082434, 0.036702347158783045, 0.03664017593155492, 0.03639266577454172, 0.037302588678471686, 0.03708381324029646, 0.04038003494985138, 0.040031050941632444, 0.03957999749657134, 0.03983574085345249, 0.03940828801731453, 0.03907899594102305, 0.03871423697800614, 0.03850541905333874, 0.03816221432508525, 0.037815214125844904, 0.0378082798993825, 0.03821323353027317, 0.037950238982656294, 0.037620375807133934]
三个函数的累计增益为[0.46754553613990935, 0.46754553613990935, 0.46754553613990935]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 1 2 0 2 1 1 0 0 2 1 0 0 0 1 2 0 1 2 0 0 1 2 1 2 0 0 2 0 0 1 2 2 2 0 1
 1 0 1 1 1 1 0 0 1 1 0 1 1 0 0 2 0 0 0 0 2 1 2 2 0 1 1 2 0 0 1 1 0 1 0 2 1
 2 0 2 0 0 0 1 1 2 1 0 0 1 0 0 0 2 0 0 0 1 2 2 2 1 2]
每个概率被转中的次数, count: [42 32 26]
choose which one? [0]
ys [34.07656007 34.07656007 34.07656007 ... 34.07656007 34.07656007
 34.07656007]
26 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8218]
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 41 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669368305.0
1669368993.0
688.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config42 =================
2022年 12月 08日 星期四 19:12:31 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config42/tpch-times.txt'
================= config43 =================
2022年 12月 08日 星期四 19:12:39 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config43/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 42.86264792887455, 'spark.broadcast.checksum': 0.6768144570430945, 'spark.broadcast.compress': 0.8303802701297608, 'spark.default.parallelism': 302.8793431084573, 'spark.executor.cores': 1.9097761102517417, 'spark.executor.instances': 4.997539145500351, 'spark.executor.memory': 3.010223330518702, 'spark.executor.memoryOverhead': 385.8758458057461, 'spark.kryoserializer.buffer': 113.71558524958354, 'spark.kryoserializer.buffer.max': 71.58978335649473, 'spark.locality.wait': 7.805472433042235, 'spark.maxRemoteBlockSizeFetchToMem': 1455200298.6000752, 'spark.memory.fraction': 0.5816905588369221, 'spark.memory.offHeap.enabled': 0.04331422116904993, 'spark.memory.offHeap.size': 666.1857470396965, 'spark.memory.storageFraction': 0.7295390061157828, 'spark.rdd.compress': 0.49621742961752213, 'spark.reducer.maxBlocksInFlightPerAddress': 1983689822.650148, 'spark.reducer.maxSizeInFlight': 56.788863079012565, 'spark.scheduler.revive.interval': 606.2612478151534, 'spark.shuffle.file.buffer': 46.28726815185197, 'spark.shuffle.io.numConnectionsPerPeer': 1.4532341920296414, 'spark.shuffle.sort.bypassMergeThreshold': 256.12197942587284, 'spark.sql.autoBroadcastJoinThreshold': 13539954.159097625, 'spark.sql.inMemoryColumnarStorage.batchSize': 7941.540364716298, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8695482761553102, 'spark.sql.shuffle.partitions': 334.2883449171424, 'spark.storage.memoryMapThreshold': 2.0147584318265084}
target = -688.0
训练集长度= 41
accuracy= 2.0299102701121007e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-810.6097561 -810.6097561 -810.6097561]  max_stds [239.96421258 239.96421258 239.96421258]
所有模型的可信度所占权重  [0.03900422586881062, 0.03869163327795404, 0.038467673767478124, 0.03772985701324935, 0.036856270683225764, 0.03636096347884473, 0.03584566059897215, 0.03538121060778427, 0.035321277294124896, 0.03508267650505372, 0.035959845852330426, 0.03574894544804836, 0.038926516463089145, 0.03859009447241577, 0.03815527713318588, 0.0384018147601177, 0.03798974850302349, 0.03767230961410612, 0.03732068050341886, 0.037119379182296956, 0.03678852844080648, 0.036454018849985184, 0.036447334227723636, 0.036837711160265435, 0.03658418335623493, 0.036266193925356904, 0.03599596901209692]
三个函数的累计增益为[0.469897599069863, 0.469897599069863, 0.469897599069863]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 2 1 1 0 2 0 0 1 1 2 0 1 1 1 0 1 1 0 2 2 0 2 0 2 1 0 2 2 2 2 0 0 0 2 0
 0 2 1 1 0 2 2 2 2 1 0 2 1 1 1 2 1 1 2 1 0 0 2 2 2 2 0 2 1 1 1 2 0 2 2 1 1
 2 1 1 0 2 2 0 2 0 2 1 0 2 0 2 2 2 0 1 2 1 0 2 2 0 1]
每个概率被转中的次数, count: [29 30 41]
choose which one? [2]
ys [-192.46194449 -192.46194449 -192.46194449 ... -192.46194449 -192.46194449
 -192.46194449]
27 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8277]
configNum = 42	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 42 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669369054.0
1669369752.0
698.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 41.48900922219269, 'spark.broadcast.checksum': 0.2344839116242876, 'spark.broadcast.compress': 0.9122361592491782, 'spark.default.parallelism': 309.97827699038055, 'spark.executor.cores': 1.5684950720200752, 'spark.executor.instances': 7.3537217735762415, 'spark.executor.memory': 6.989221557493494, 'spark.executor.memoryOverhead': 533.2918099936526, 'spark.kryoserializer.buffer': 105.23191326359071, 'spark.kryoserializer.buffer.max': 64.20626473171096, 'spark.locality.wait': 7.283624151808862, 'spark.maxRemoteBlockSizeFetchToMem': 1711906901.4002042, 'spark.memory.fraction': 0.6434231241009147, 'spark.memory.offHeap.enabled': 0.38481871113696864, 'spark.memory.offHeap.size': 615.1294467343137, 'spark.memory.storageFraction': 0.6291017889307257, 'spark.rdd.compress': 0.5785145916630211, 'spark.reducer.maxBlocksInFlightPerAddress': 1729292286.452851, 'spark.reducer.maxSizeInFlight': 55.001662909676696, 'spark.scheduler.revive.interval': 784.8899850242481, 'spark.shuffle.file.buffer': 40.33862128391716, 'spark.shuffle.io.numConnectionsPerPeer': 2.7564812403270262, 'spark.shuffle.sort.bypassMergeThreshold': 324.9741479562617, 'spark.sql.autoBroadcastJoinThreshold': 9233635.216026384, 'spark.sql.inMemoryColumnarStorage.batchSize': 14306.821466896758, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2793253742963818, 'spark.sql.shuffle.partitions': 300.90423264677815, 'spark.storage.memoryMapThreshold': 2.9489732481169315}
target = -698.0
训练集长度= 42
accuracy= 2.016580886085261e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-807.92857143 -807.92857143 -807.92857143]  max_stds [237.71104837 237.71104837 237.71104837]
所有模型的可信度所占权重  [0.03765760490994812, 0.037355804578777664, 0.03713957727074971, 0.036427233641109696, 0.03558380788049061, 0.03510560115811219, 0.03460808911096969, 0.034159674256450875, 0.034101810140538924, 0.03387144704408201, 0.034718332118277954, 0.034514713050782166, 0.03758257842158019, 0.03725777140065873, 0.0368379661307429, 0.03707599204572096, 0.03667815237679465, 0.03637167306601151, 0.03603218395091832, 0.035837832558221636, 0.03551840443909636, 0.0351954437924191, 0.03518898995675155, 0.0355658891250894, 0.03532111436888787, 0.035014103523606115, 0.03475320812589726, 0.034525001557313716]
三个函数的累计增益为[0.4717669789150696, 0.4717669789150696, 0.4717669789150696]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 2 2 0 0 2 1 0 1 2 1 2 0 1 0 1 1 2 1 1 1 2 2 2 2 1 0 1 1 0 1 0 2 0 2 2
 2 0 2 1 2 2 1 1 1 1 1 1 1 2 1 2 2 2 1 2 2 0 2 0 2 1 0 1 2 1 1 1 1 1 1 0 1
 1 2 0 1 0 1 0 0 0 2 1 2 0 2 1 0 0 2 2 0 1 0 2 2 1 1]
每个概率被转中的次数, count: [24 42 34]
choose which one? [1]
ys [0.24258036 0.24258036 0.24258036 ... 0.24258036 0.24258036 0.24258036]
28 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5354]
configNum = 43	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 43 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669369813.0
1669370551.0
738.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config44 =================
2022年 12月 08日 星期四 19:12:46 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config44/tpch-times.txt'
================= config45 =================
2022年 12月 08日 星期四 19:12:54 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config45/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 57.33562766462043, 'spark.broadcast.checksum': 0.7787806893350264, 'spark.broadcast.compress': 0.5675417121073338, 'spark.default.parallelism': 291.08403419957665, 'spark.executor.cores': 2.550409466789441, 'spark.executor.instances': 6.820387965061034, 'spark.executor.memory': 6.528638234621613, 'spark.executor.memoryOverhead': 661.371048844987, 'spark.kryoserializer.buffer': 39.34461337187858, 'spark.kryoserializer.buffer.max': 66.65816146050295, 'spark.locality.wait': 7.15107553995491, 'spark.maxRemoteBlockSizeFetchToMem': 1789315297.8276806, 'spark.memory.fraction': 0.8766944122403422, 'spark.memory.offHeap.enabled': 0.031900939564791675, 'spark.memory.offHeap.size': 107.1215663046388, 'spark.memory.storageFraction': 0.6834077765635769, 'spark.rdd.compress': 0.32494352615047895, 'spark.reducer.maxBlocksInFlightPerAddress': 1821981869.9709592, 'spark.reducer.maxSizeInFlight': 57.58338164691304, 'spark.scheduler.revive.interval': 587.7310166719856, 'spark.shuffle.file.buffer': 19.95109769815914, 'spark.shuffle.io.numConnectionsPerPeer': 2.3077526384720217, 'spark.shuffle.sort.bypassMergeThreshold': 288.6327101521731, 'spark.sql.autoBroadcastJoinThreshold': 14736163.560626745, 'spark.sql.inMemoryColumnarStorage.batchSize': 11057.087108892141, 'spark.sql.inMemoryColumnarStorage.compressed': 0.48017671262654193, 'spark.sql.shuffle.partitions': 384.8196505639698, 'spark.storage.memoryMapThreshold': 3.258973967961875}
target = -738.0
训练集长度= 43
accuracy= 2.0084960817155208e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-806.30232558 -806.30232558 -806.30232558]  max_stds [235.16699014 235.16699014 235.16699014]
所有模型的可信度所占权重  [0.03640573597010252, 0.03611396852502588, 0.03590492936004404, 0.03521626649466334, 0.03440087912138487, 0.033938569643241774, 0.03345759661605305, 0.03302408862111491, 0.03296814810840648, 0.03274544307745932, 0.03356417476477525, 0.03336732469883354, 0.03633320362151534, 0.036019194308571, 0.035613344816762885, 0.035843457927659216, 0.03545884382434596, 0.0351625529451105, 0.034834349621549125, 0.03464645914086516, 0.03433764991643067, 0.0340254255978692, 0.03401918631000505, 0.0343835560473442, 0.03414691845003208, 0.03385011370634184, 0.03359789137336244, 0.03337727117984873, 0.03324345621128147]
三个函数的累计增益为[0.47201339975325574, 0.47201339975325574, 0.47201339975325574]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 0 2 2 0 1 1 2 0 1 1 1 1 0 1 1 2 0 1 2 1 2 0 0 1 2 1 1 0 2 0 2 0 1 2
 1 0 2 2 0 2 2 0 2 1 0 0 2 2 1 0 1 1 2 2 0 2 2 2 0 1 2 0 1 0 0 0 0 0 2 2 1
 2 0 0 0 0 1 0 2 1 0 1 1 2 2 2 1 2 0 1 1 2 0 0 1 2 1]
每个概率被转中的次数, count: [34 32 34]
choose which one? [2]
ys [-200.51215899 -200.51215899 -200.51215899 ... -200.51215899 -200.51215899
 -200.51215899]
29 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1274]
configNum = 44	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 44 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669370613.0
1669371361.0
748.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 59.459261881199765, 'spark.broadcast.checksum': 0.9167114683030403, 'spark.broadcast.compress': 0.8958436030103947, 'spark.default.parallelism': 233.77479344749779, 'spark.executor.cores': 2.9942733872321137, 'spark.executor.instances': 7.395906821488487, 'spark.executor.memory': 4.534427575442214, 'spark.executor.memoryOverhead': 836.6834208623197, 'spark.kryoserializer.buffer': 100.82191588112545, 'spark.kryoserializer.buffer.max': 63.81628106273893, 'spark.locality.wait': 4.340027327965827, 'spark.maxRemoteBlockSizeFetchToMem': 1997005525.9376073, 'spark.memory.fraction': 0.675658869365661, 'spark.memory.offHeap.enabled': 0.6022938684915475, 'spark.memory.offHeap.size': 470.2657481477952, 'spark.memory.storageFraction': 0.5649239814678919, 'spark.rdd.compress': 0.2337177939191346, 'spark.reducer.maxBlocksInFlightPerAddress': 1539712147.2609944, 'spark.reducer.maxSizeInFlight': 68.64302422243915, 'spark.scheduler.revive.interval': 927.0091373218606, 'spark.shuffle.file.buffer': 30.15364540402017, 'spark.shuffle.io.numConnectionsPerPeer': 1.3936844017439503, 'spark.shuffle.sort.bypassMergeThreshold': 225.38468390350027, 'spark.sql.autoBroadcastJoinThreshold': 8281350.595024522, 'spark.sql.inMemoryColumnarStorage.batchSize': 11767.065204627754, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5159243201490313, 'spark.sql.shuffle.partitions': 351.37860879862507, 'spark.storage.memoryMapThreshold': 1.8193894154381}
target = -748.0
训练集长度= 44
accuracy= 2.0019086437265009e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-804.97727273 -804.97727273 -804.97727273]  max_stds [232.641598 232.641598 232.641598]
所有模型的可信度所占权重  [0.03523814045584816, 0.03495573050213928, 0.03475339558814515, 0.034086819343211096, 0.033297582866599056, 0.03285010046057779, 0.032384553078113956, 0.03196494844144603, 0.031910802038648114, 0.03169523954686977, 0.03248771307952916, 0.0322971763388877, 0.03516793434631623, 0.0348639958602748, 0.03447116267025184, 0.034693895651921436, 0.03432161679440891, 0.03403482848097226, 0.033717151211015955, 0.03353528670609026, 0.033236381532641204, 0.032934170793096317, 0.0329281316100873, 0.03328081537378766, 0.033051767157372895, 0.032764481460011693, 0.03252034833761228, 0.03230680381889092, 0.03217728052999654, 0.03207174592523614]
三个函数的累计增益为[0.4718324498004007, 0.4718324498004007, 0.4718324498004007]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 1 0 0 2 2 1 1 0 0 0 1 1 1 2 1 1 2 0 1 0 2 1 0 0 2 2 2 0 1 0 1 0 0 1
 2 2 1 2 1 1 2 1 0 1 1 0 2 0 2 2 2 2 0 1 0 1 0 2 0 2 1 1 0 0 1 1 2 0 0 1 0
 0 0 1 0 2 0 0 1 1 0 2 0 2 0 0 0 0 2 2 1 0 1 2 2 2 1]
每个概率被转中的次数, count: [39 33 28]
choose which one? [0]
ys [33.20868892 33.20868892 33.20868892 ... 33.20868892 33.20868892
 33.20868892]
30 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8661]
configNum = 45	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 45 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669371421.0
1669372114.0
693.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
================= config46 =================
2022年 12月 08日 星期四 19:13:02 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config46/tpch-times.txt'
================= config47 =================
2022年 12月 08日 星期四 19:13:10 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config47/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 52.385680037430355, 'spark.broadcast.checksum': 0.9501462125492888, 'spark.broadcast.compress': 0.524992566531631, 'spark.default.parallelism': 389.7405719555493, 'spark.executor.cores': 2.404893732417837, 'spark.executor.instances': 4.024955548204023, 'spark.executor.memory': 6.798644249522271, 'spark.executor.memoryOverhead': 488.4143376978701, 'spark.kryoserializer.buffer': 97.62842766465054, 'spark.kryoserializer.buffer.max': 96.36940222822346, 'spark.locality.wait': 8.76548671621208, 'spark.maxRemoteBlockSizeFetchToMem': 1800934308.4227657, 'spark.memory.fraction': 0.6839408720909184, 'spark.memory.offHeap.enabled': 0.9865250855261207, 'spark.memory.offHeap.size': 281.7841079047108, 'spark.memory.storageFraction': 0.8251710412432569, 'spark.rdd.compress': 0.4148943709078686, 'spark.reducer.maxBlocksInFlightPerAddress': 1713013366.3167717, 'spark.reducer.maxSizeInFlight': 65.63716776144116, 'spark.scheduler.revive.interval': 830.7663594969935, 'spark.shuffle.file.buffer': 44.87342171844369, 'spark.shuffle.io.numConnectionsPerPeer': 1.5633069826675272, 'spark.shuffle.sort.bypassMergeThreshold': 215.24104599889537, 'spark.sql.autoBroadcastJoinThreshold': 5316718.901113152, 'spark.sql.inMemoryColumnarStorage.batchSize': 9466.140268868323, 'spark.sql.inMemoryColumnarStorage.compressed': 0.567794017471408, 'spark.sql.shuffle.partitions': 253.65617016968594, 'spark.storage.memoryMapThreshold': 1.1207765207521254}
target = -693.0
训练集长度= 45
accuracy= 1.9895377604361275e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-802.48888889 -802.48888889 -802.48888889]  max_stds [230.63358358 230.63358358 230.63358358]
所有模型的可信度所占权重  [0.034149669028475584, 0.033875982439888735, 0.03367989745196317, 0.033033911090246275, 0.03226905335051193, 0.03183539323496642, 0.0313842261522955, 0.030977582689284803, 0.0309251088155017, 0.030716204836632344, 0.03148419964294324, 0.03129954839442394, 0.03408163151647076, 0.03378708139069623, 0.033406382430730026, 0.033622235410125254, 0.03326145587959694, 0.03298352617449892, 0.03267566164230346, 0.03249941475268618, 0.032209742465438965, 0.031916866717774585, 0.0319110140791764, 0.03225280378902715, 0.032030830646263636, 0.031752418920940266, 0.03151582683007003, 0.03130887849105887, 0.031183356048898093, 0.03108108130406205, 0.0308890143830484]
三个函数的累计增益为[0.47366172653632344, 0.47366172653632344, 0.47366172653632344]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 1 0 1 2 2 0 1 1 0 1 1 0 1 2 0 1 1 1 2 2 0 1 2 1 0 1 0 0 0 2 2 0 1 2
 2 2 1 2 1 0 2 1 2 0 1 1 1 1 1 0 0 0 1 1 0 2 1 2 1 0 0 2 1 0 1 0 1 1 0 0 0
 1 1 2 2 0 2 1 0 0 1 1 0 1 1 1 0 0 1 0 2 2 2 2 0 1 2]
每个概率被转中的次数, count: [33 41 26]
choose which one? [1]
ys [0.24325798 0.24325798 0.24325798 ... 0.24325798 0.24325798 0.24325798]
31 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9300]
configNum = 46	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 46 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669372175.0
1669372863.0
688.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 52.622553120301006, 'spark.broadcast.checksum': 0.9517198999440802, 'spark.broadcast.compress': 0.6626178761056715, 'spark.default.parallelism': 404.4340081272663, 'spark.executor.cores': 1.9525235960367062, 'spark.executor.instances': 4.32374895256816, 'spark.executor.memory': 6.046445904610265, 'spark.executor.memoryOverhead': 403.3405842821354, 'spark.kryoserializer.buffer': 110.11173734671854, 'spark.kryoserializer.buffer.max': 85.30628891997428, 'spark.locality.wait': 6.430312935005258, 'spark.maxRemoteBlockSizeFetchToMem': 1489033409.4366446, 'spark.memory.fraction': 0.6363807648334707, 'spark.memory.offHeap.enabled': 0.874957110131069, 'spark.memory.offHeap.size': 668.9979422619077, 'spark.memory.storageFraction': 0.8114527042004249, 'spark.rdd.compress': 0.6175511658193966, 'spark.reducer.maxBlocksInFlightPerAddress': 1608681992.199682, 'spark.reducer.maxSizeInFlight': 43.71238572252268, 'spark.scheduler.revive.interval': 746.0760337435456, 'spark.shuffle.file.buffer': 16.058531527354297, 'spark.shuffle.io.numConnectionsPerPeer': 2.892420584854926, 'spark.shuffle.sort.bypassMergeThreshold': 180.1174973941127, 'spark.sql.autoBroadcastJoinThreshold': 9741663.713563252, 'spark.sql.inMemoryColumnarStorage.batchSize': 13570.40497663086, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5452352846973032, 'spark.sql.shuffle.partitions': 334.4244673405508, 'spark.storage.memoryMapThreshold': 2.6588089048241907}
target = -688.0
训练集长度= 46
accuracy= 1.9771643661760758e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-800. -800. -800.]  max_stds [228.72310961 228.72310961 228.72310961]
所有模型的可信度所占权重  [0.03313260061963597, 0.03286706514908609, 0.03267682009613912, 0.032050072934676134, 0.031307994702517446, 0.03088725014417184, 0.03044952002296928, 0.030054987489043856, 0.030004076427458722, 0.029801394167377083, 0.030546516035885842, 0.030367364195028897, 0.03306658944656926, 0.03278081181072707, 0.03241145108320865, 0.032620875384009256, 0.03227084083208528, 0.032001188616373695, 0.03170249311271661, 0.03153149532649288, 0.03125045025411061, 0.030966297128923667, 0.030960618797544144, 0.031292229096400725, 0.031076866907053104, 0.03080674702696668, 0.030577201280856177, 0.030376416416451307, 0.030254632368077464, 0.03015540363847244, 0.02996905698366644, 0.029782672505304204]
三个函数的累计增益为[0.4756348427667992, 0.4756348427667992, 0.4756348427667992]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 2 1 2 2 0 2 2 0 1 2 1 1 0 2 0 0 1 2 1 1 2 1 2 2 0 1 2 1 0 1 1 1 0 2 2
 0 0 2 1 2 1 2 2 2 0 1 0 1 1 1 0 1 1 2 2 2 0 2 0 0 0 1 0 2 1 2 1 2 2 0 1 0
 0 1 1 0 1 1 2 0 1 2 0 2 0 0 0 1 0 1 2 2 1 2 0 1 1 0]
每个概率被转中的次数, count: [30 37 33]
choose which one? [1]
ys [0.24484826 0.24484826 0.24484826 ... 0.24484826 0.24484826 0.24484826]
32 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9554]
configNum = 47	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 47 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669372924.0
================= config48 =================
2022年 12月 08日 星期四 19:13:17 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config48/tpch-times.txt'
1669373646.0
722.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 51.25719304563046, 'spark.broadcast.checksum': 0.9221181456971487, 'spark.broadcast.compress': 0.44411085878232903, 'spark.default.parallelism': 417.86552916969845, 'spark.executor.cores': 1.52789618853351, 'spark.executor.instances': 7.286897137171609, 'spark.executor.memory': 4.12699993643192, 'spark.executor.memoryOverhead': 406.94990641487004, 'spark.kryoserializer.buffer': 83.17306277960702, 'spark.kryoserializer.buffer.max': 119.2177012887709, 'spark.locality.wait': 9.77354470521848, 'spark.maxRemoteBlockSizeFetchToMem': 1756523125.9535975, 'spark.memory.fraction': 0.7386035423299775, 'spark.memory.offHeap.enabled': 0.9536917908105585, 'spark.memory.offHeap.size': 511.5105678041266, 'spark.memory.storageFraction': 0.8527366670885383, 'spark.rdd.compress': 0.36607635570013985, 'spark.reducer.maxBlocksInFlightPerAddress': 2018060686.5753307, 'spark.reducer.maxSizeInFlight': 61.68607386043139, 'spark.scheduler.revive.interval': 530.025821879742, 'spark.shuffle.file.buffer': 21.091190518580177, 'spark.shuffle.io.numConnectionsPerPeer': 1.5713654547562315, 'spark.shuffle.sort.bypassMergeThreshold': 150.81244901173946, 'spark.sql.autoBroadcastJoinThreshold': 12314689.222003596, 'spark.sql.inMemoryColumnarStorage.batchSize': 10334.183588160802, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2937745141173508, 'spark.sql.shuffle.partitions': 259.63623517069294, 'spark.storage.memoryMapThreshold': 3.242655192158048}
target = -722.0
训练集长度= 47
accuracy= 1.9689138699166283e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-798.34042553 -798.34042553 -798.34042553]  max_stds [226.55658037 226.55658037 226.55658037]
所有模型的可信度所占权重  [0.03217824557951365, 0.03192035862160423, 0.03173559340790147, 0.031126899140000667, 0.030406195810137027, 0.029997570423916507, 0.02957244872884321, 0.02918928035303403, 0.02913983573921675, 0.028942991561049444, 0.029666650858029928, 0.029492659326326852, 0.03211413579947201, 0.03183658973380601, 0.03147786811294804, 0.03168126013335847, 0.03134130801482633, 0.031079422890931616, 0.030789331045123478, 0.030623258697775064, 0.030350308878295172, 0.030074340530702418, 0.03006882575859896, 0.030390884318257545, 0.030181725444889108, 0.02991938612727519, 0.029696452241859055, 0.029501450806576603, 0.02938317463920813, 0.02928680410474784, 0.029105824999301026, 0.02892480915977181, 0.028804109012702358]
三个函数的累计增益为[0.47626596931009446, 0.47626596931009446, 0.47626596931009446]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 1 0 0 1 1 2 0 0 0 0 2 1 1 0 1 0 2 1 1 1 0 1 2 0 1 0 0 2 1 1 2 2 1 0 2
 0 1 2 1 0 2 0 0 0 2 1 2 0 1 1 2 2 2 0 2 1 1 0 0 1 0 0 2 0 1 1 0 0 1 1 1 2
 1 2 2 0 2 0 1 0 1 0 2 1 1 0 0 0 2 1 1 0 0 1 2 0 0 0]
每个概率被转中的次数, count: [41 35 24]
choose which one? [0]
ys [32.91797724 32.91797724 32.91797724 ... 32.91797724 32.91797724
 32.91797724]
33 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9346]
configNum = 48	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 48 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669373707.0
1669374410.0
703.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3210
x_probe = {'spark.broadcast.blockSize': 43.397406179048645, 'spark.broadcast.checksum': 0.6015971326368169, 'spark.broadcast.compress': 0.9250432256472738, 'spark.default.parallelism': 227.1875703965012, 'spark.executor.cores': 1.4032900396303172, 'spark.executor.instances': 4.352788522005462, 'spark.executor.memory': 3.995416279320364, 'spark.executor.memoryOverhead': 652.8267268599056, 'spark.kryoserializer.buffer': 42.31432702290956, 'spark.kryoserializer.buffer.max': 74.46665866466074, 'spark.locality.wait': 5.275024596440297, 'spark.maxRemoteBlockSizeFetchToMem': 1480998653.166612, 'spark.memory.fraction': 0.6355030864755055, 'spark.memory.offHeap.enabled': 0.7711319118136436, 'spark.memory.offHeap.size': 327.70330527987926, 'spark.memory.storageFraction': 0.6326258960568472, 'spark.rdd.compress': 0.5394370080426181, 'spark.reducer.maxBlocksInFlightPerAddress': 1320958380.9836369, 'spark.reducer.maxSizeInFlight': 67.03478623752333, 'spark.scheduler.revive.interval': 998.6803650920027, 'spark.shuffle.file.buffer': 23.90276895336684, 'spark.shuffle.io.numConnectionsPerPeer': 2.129337879737247, 'spark.shuffle.sort.bypassMergeThreshold': 277.3809376799969, 'spark.sql.autoBroadcastJoinThreshold': 9769146.265966784, 'spark.sql.inMemoryColumnarStorage.batchSize': 8608.845843567124, 'spark.sql.inMemoryColumnarStorage.compressed': 0.22218854850572256, 'spark.sql.shuffle.partitions': 319.1535604186407, 'spark.storage.memoryMapThreshold': 1.1507383462730134}
target = -703.0
训练集长度= 48
accuracy= 1.9590392778207672e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-796.35416667 -796.35416667 -796.35416667]  max_stds [224.59737027 224.59737027 224.59737027]
所有模型的可信度所占权重  [0.03128172238788932, 0.031031020459319426, 0.030851403018470863, 0.030259667677881165, 0.02955904397752707, 0.029161803367848446, 0.028748526055588194, 0.028376033194525807, 0.02832796616491766, 0.028136606293544742, 0.028840103604348126, 0.028670959678240345, 0.031219398780573452, 0.03094958546975882, 0.030600858248739763, 0.030798583531887015, 0.030468102873119598, 0.03021351417209955, 0.029931504621108433, 0.029770059241706965, 0.029504714120336197, 0.029236434570541935, 0.029231073446376647, 0.029544159081545562, 0.029340827616643056, 0.029085797376266882, 0.028869074687106942, 0.02867950621766779, 0.028564525361313098, 0.02847083982156202, 0.028294903003608218, 0.02811893047502609, 0.028001593173852413, 0.027861158229058332]
三个函数的累计增益为[0.4775415326278818, 0.4775415326278818, 0.4775415326278818]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 1 0 0 1 2 1 1 1 1 0 0 1 1 0 2 1 0 1 0 0 1 1 0 1 1 1 2 1 1 2 1 2 1 2 0
 0 2 1 0 2 2 1 2 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 2 0 0 2 0 1 1 0 0 1 0 2 1 1
 1 0 2 2 0 1 0 2 0 2 1 0 2 2 2 1 0 1 2 1 1 0 2 0 2 2]
================= config49 =================
2022年 12月 08日 星期四 19:13:25 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config49/tpch-times.txt'
================= config50 =================
2022年 12月 08日 星期四 19:13:33 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config50/tpch-times.txt'
每个概率被转中的次数, count: [33 43 24]
choose which one? [1]
ys [0.24596313 0.24596313 0.24596313 ... 0.24596313 0.24596313 0.24596313]
34 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4613]
configNum = 49	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 49 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669374471.0
1669375104.0
633.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3165
x_probe = {'spark.broadcast.blockSize': 51.41455229542385, 'spark.broadcast.checksum': 0.6491952332195835, 'spark.broadcast.compress': 0.9604290404593894, 'spark.default.parallelism': 279.5499689618409, 'spark.executor.cores': 1.1366806115742443, 'spark.executor.instances': 6.724351487529361, 'spark.executor.memory': 3.097291622332237, 'spark.executor.memoryOverhead': 711.6684431139905, 'spark.kryoserializer.buffer': 71.17591593301562, 'spark.kryoserializer.buffer.max': 43.05468116721837, 'spark.locality.wait': 8.79349337430955, 'spark.maxRemoteBlockSizeFetchToMem': 1670089629.4716377, 'spark.memory.fraction': 0.7833114631670155, 'spark.memory.offHeap.enabled': 0.47796748246142107, 'spark.memory.offHeap.size': 948.8736778973168, 'spark.memory.storageFraction': 0.6245042447138895, 'spark.rdd.compress': 0.7218536778729221, 'spark.reducer.maxBlocksInFlightPerAddress': 1783630483.5390615, 'spark.reducer.maxSizeInFlight': 62.2861069944101, 'spark.scheduler.revive.interval': 872.0286715887128, 'spark.shuffle.file.buffer': 47.94815032537359, 'spark.shuffle.io.numConnectionsPerPeer': 2.406960430229945, 'spark.shuffle.sort.bypassMergeThreshold': 338.34203296873034, 'spark.sql.autoBroadcastJoinThreshold': 15214694.783578644, 'spark.sql.inMemoryColumnarStorage.batchSize': 6056.664926872451, 'spark.sql.inMemoryColumnarStorage.compressed': 0.689197091920397, 'spark.sql.shuffle.partitions': 325.6459779061547, 'spark.storage.memoryMapThreshold': 1.5656913987003371}
target = -633.0
训练集长度= 49
accuracy= 1.9424656539002878e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-793.02040816 -793.02040816 -793.02040816]  max_stds [223.49044538 223.49044538 223.49044538]
所有模型的可信度所占权重  [0.03044078206448939, 0.030196819706019708, 0.03002203088512124, 0.02944620304804149, 0.028764414075323288, 0.028377852405973732, 0.027975685145529568, 0.02761320593599064, 0.02756643108278258, 0.027380215500784864, 0.02806480083325399, 0.027900203969681913, 0.030380133890317573, 0.030117573917092237, 0.029778221460620532, 0.029970631334293448, 0.029649034921368226, 0.029401290277779386, 0.029126861933477327, 0.02896975665811111, 0.028711544756881202, 0.028450477312883676, 0.028445260310753406, 0.028749929327040975, 0.02855206398148229, 0.028303889668352046, 0.028092993092155148, 0.027908520754189186, 0.027796630905334935, 0.027705463895322066, 0.02753425675186487, 0.027363014857781073, 0.02724883191194539, 0.027112172251850388, 0.02688280117611102]
三个函数的累计增益为[0.4689590549684547, 0.4689590549684547, 0.4689590549684547]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 0 2 0 0 1 2 2 0 2 2 0 2 0 1 2 2 0 0 1 2 0 0 1 0 0 0 0 2 0 1 0 0 0 0
 1 1 0 1 1 2 2 0 0 1 2 2 2 1 2 2 0 1 1 0 1 1 0 2 0 2 0 2 0 1 1 2 1 1 2 1 0
 0 2 0 0 0 2 0 2 2 1 2 2 0 2 0 2 2 1 1 0 0 1 0 1 1 1]
每个概率被转中的次数, count: [40 28 32]
choose which one? [0]
ys [31.07555359 31.07555359 31.07555359 ... 31.07555359 31.07555359
 31.07555359]
35 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [107]
configNum = 50	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 50 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669375165.0
1669375777.0
612.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 45.58297415922232, 'spark.broadcast.checksum': 0.3915553636198582, 'spark.broadcast.compress': 0.38895373739369177, 'spark.default.parallelism': 439.2897464954312, 'spark.executor.cores': 1.170855070360673, 'spark.executor.instances': 6.508972925646377, 'spark.executor.memory': 3.4788326278851356, 'spark.executor.memoryOverhead': 815.4658576364144, 'spark.kryoserializer.buffer': 104.8992081114736, 'spark.kryoserializer.buffer.max': 61.37346545066728, 'spark.locality.wait': 6.268061772665202, 'spark.maxRemoteBlockSizeFetchToMem': 1119356755.2027166, 'spark.memory.fraction': 0.6056196126451947, 'spark.memory.offHeap.enabled': 0.12786854764752253, 'spark.memory.offHeap.size': 261.54796463955176, 'spark.memory.storageFraction': 0.8296270962011548, 'spark.rdd.compress': 0.8225150528059328, 'spark.reducer.maxBlocksInFlightPerAddress': 1739266159.4334917, 'spark.reducer.maxSizeInFlight': 40.043900763449415, 'spark.scheduler.revive.interval': 786.1401083608326, 'spark.shuffle.file.buffer': 30.13587002637467, 'spark.shuffle.io.numConnectionsPerPeer': 1.5485507889511996, 'spark.shuffle.sort.bypassMergeThreshold': 219.8547635865807, 'spark.sql.autoBroadcastJoinThreshold': 12581084.905630682, 'spark.sql.inMemoryColumnarStorage.batchSize': 10748.902124221862, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8673339636284759, 'spark.sql.shuffle.partitions': 330.7722300225213, 'spark.storage.memoryMapThreshold': 1.4761075277757767}
target = -612.0
训练集长度= 50
accuracy= 1.9244669652718916e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-789.4 -789.4 -789.4]  max_stds [222.69099667 222.69099667 222.69099667]
所有模型的可信度所占权重  ================= config51 =================
2022年 12月 08日 星期四 19:13:41 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config51/tpch-times.txt'
================= config52 =================
2022年 12月 08日 星期四 19:13:49 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config52/tpch-times.txt'
[0.029651064280054852, 0.029413430977547263, 0.029243176660397465, 0.028682287384447686, 0.028018185896756843, 0.02764165270251083, 0.02724991876921369, 0.026896843269397275, 0.026851281884797358, 0.026669897248224467, 0.027336722550387257, 0.027176395783100802, 0.02959198948667317, 0.029336241042793483, 0.029005692324330198, 0.029193110555580184, 0.02887985723995645, 0.02863853977523003, 0.028371230858529703, 0.028218201327003523, 0.027966688154148, 0.0277123935191744, 0.027707311860457943, 0.028004076922766317, 0.027811344749607076, 0.02756960876215137, 0.027364183424391977, 0.027184496807296107, 0.02707550968950017, 0.026986707802991956, 0.026819942244699163, 0.026653142837306798, 0.026541922111785115, 0.026408807779919958, 0.0261853872220537, 0.025942756094817346]
三个函数的累计增益为[0.44493158025023327, 0.44493158025023327, 0.44493158025023327]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 1 2 2 2 1 2 1 0 1 2 0 2 0 2 2 1 0 1 0 2 0 2 2 0 1 2 1 1 0 1 1 2 1 1
 2 0 1 2 2 0 0 0 0 2 2 1 0 2 0 2 0 1 1 2 1 2 2 1 0 2 2 0 2 1 1 0 1 0 2 0 0
 0 1 1 2 2 0 0 0 2 1 1 1 0 2 2 1 2 1 1 2 1 2 0 2 1 1]
每个概率被转中的次数, count: [30 33 37]
choose which one? [2]
ys [-215.74799257 -215.74799257 -215.74799257 ... -215.74799257 -215.74799257
 -215.74799257]
36 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8307]
configNum = 51	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 51 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669375838.0
1669376501.0
663.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 61.102192058678476, 'spark.broadcast.checksum': 0.29482348739231246, 'spark.broadcast.compress': 0.21664418646006622, 'spark.default.parallelism': 367.6874440287536, 'spark.executor.cores': 1.254814090589531, 'spark.executor.instances': 4.168775367799435, 'spark.executor.memory': 6.5348586616188715, 'spark.executor.memoryOverhead': 539.0952233068949, 'spark.kryoserializer.buffer': 57.72297900687865, 'spark.kryoserializer.buffer.max': 104.33632256373288, 'spark.locality.wait': 9.976866650847828, 'spark.maxRemoteBlockSizeFetchToMem': 1076893377.989014, 'spark.memory.fraction': 0.7209593921426604, 'spark.memory.offHeap.enabled': 0.23130486621143787, 'spark.memory.offHeap.size': 649.019783668368, 'spark.memory.storageFraction': 0.8523156459275318, 'spark.rdd.compress': 0.7894904752250153, 'spark.reducer.maxBlocksInFlightPerAddress': 1528462621.9462075, 'spark.reducer.maxSizeInFlight': 58.05552610072101, 'spark.scheduler.revive.interval': 801.428148506287, 'spark.shuffle.file.buffer': 45.95486666037729, 'spark.shuffle.io.numConnectionsPerPeer': 1.2207021051743416, 'spark.shuffle.sort.bypassMergeThreshold': 305.5661111852718, 'spark.sql.autoBroadcastJoinThreshold': 5640377.707573189, 'spark.sql.inMemoryColumnarStorage.batchSize': 6606.763879567742, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8659886635914665, 'spark.sql.shuffle.partitions': 281.97570774998195, 'spark.storage.memoryMapThreshold': 1.806293210099731}
target = -663.0
训练集长度= 51
accuracy= 1.9121455598583744e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-786.92156863 -786.92156863 -786.92156863]  max_stds [221.19229884 221.19229884 221.19229884]
所有模型的可信度所占权重  [0.028905965116879487, 0.02867430328214684, 0.02850832727177339, 0.02796153253645112, 0.027314119200594168, 0.02694704787811406, 0.026565157794708114, 0.0262209547001776, 0.026176538223875674, 0.02599971158696333, 0.026649780290781695, 0.02649348236168504, 0.028848374809137097, 0.02859905304693461, 0.028276810660115597, 0.028459519273999093, 0.02815413767525974, 0.02791888425731859, 0.027658292524469122, 0.027509108459493628, 0.027263915540536997, 0.027016011054595796, 0.027011057092464572, 0.02730036476985424, 0.027112475747672032, 0.02687681432402494, 0.026676551102735094, 0.026501379815907555, 0.026395131426458756, 0.02630856103527566, 0.02614598611502394, 0.025983378196263902, 0.025874952327234763, 0.02574518301450088, 0.025527376773514784, 0.025290842703981204, 0.025128918009076805]
三个函数的累计增益为[0.4461383910867319, 0.4461383910867319, 0.4461383910867319]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 1 1 0 1 0 2 2 1 1 1 1 1 0 0 2 0 2 1 0 2 1 1 0 0 1 1 1 0 1 0 2 1 1 0
 1 0 0 2 0 2 2 1 1 0 0 0 2 1 1 2 0 0 1 1 1 0 0 2 0 2 1 2 2 1 2 2 2 0 1 0 2
 0 2 2 0 2 2 1 2 1 1 2 0 2 0 2 0 0 1 0 0 2 0 0 1 1 0]
每个概率被转中的次数, count: [35 35 30]
choose which one? [1]
ys [0.21452679 0.21452679 0.21452679 ... 0.21452679 0.21452679 0.21452679]
37 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4547]
configNum = 52	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 52 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669376561.0
1669377189.0
628.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 46.78513061404375, 'spark.broadcast.checksum': 0.7432591124790681, 'spark.broadcast.compress': 0.25012179771076026, 'spark.default.parallelism': 249.87313149546205, 'spark.executor.cores': 1.4708809372954859, 'spark.executor.instances': 4.8052287711806825, 'spark.executor.memory': 4.990777047817492, 'spark.executor.memoryOverhead': 807.5337932132762, 'spark.kryoserializer.buffer': 80.01605974411801, 'spark.kryoserializer.buffer.max': 70.33952985549023, 'spark.locality.wait': 4.4974444842071835, 'spark.maxRemoteBlockSizeFetchToMem': 1328074340.416945, 'spark.memory.fraction': 0.5346298929925094, 'spark.memory.offHeap.enabled': 0.15430872055189693, 'spark.memory.offHeap.size': 364.4540924737345, 'spark.memory.storageFraction': 0.8842905224019628, 'spark.rdd.compress': 0.6380428093189223, 'spark.reducer.maxBlocksInFlightPerAddress': 1089946884.3449264, 'spark.reducer.maxSizeInFlight': 64.52241260235937, 'spark.scheduler.revive.interval': 683.8513624746234, 'spark.shuffle.file.buffer': 23.536023313184227, 'spark.shuffle.io.numConnectionsPerPeer': 1.3848222904363403, 'spark.shuffle.sort.bypassMergeThreshold': 245.1098351260328, 'spark.sql.autoBroadcastJoinThreshold': 5842491.099800408, 'spark.sql.inMemoryColumnarStorage.batchSize': 5585.735146033688, 'spark.sql.inMemoryColumnarStorage.compressed': 0.26192325516948345, 'spark.sql.shuffle.partitions': 366.1580134846294, 'spark.storage.memoryMapThreshold': 3.430200736265562}
target = -628.0
训练集长度= 52
accuracy= 1.896951884800529e-07
所有模型的可信度  ================= config53 =================
2022年 12月 08日 星期四 19:13:56 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config53/tpch-times.txt'
================= config54 =================
2022年 12月 08日 星期四 19:14:04 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config54/tpch-times.txt'
[2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-783.86538462 -783.86538462 -783.86538462]  max_stds [220.13973087 220.13973087 220.13973087]
所有模型的可信度所占权重  [0.028202888355525643, 0.027976861207330343, 0.027814922214069587, 0.02728142710981244, 0.026649760740700624, 0.02629161765554287, 0.02591901624462887, 0.02558318516590796, 0.025539849026906064, 0.02536732332575901, 0.02600158047659549, 0.025849084165654505, 0.02814669881080532, 0.02790344127570598, 0.027589036756703506, 0.02776730136811204, 0.0274693475340071, 0.027239816160305425, 0.026985562772874505, 0.026840007296282914, 0.026600778179007696, 0.02635890344790761, 0.02635406998047833, 0.026636340857538673, 0.02645302184035978, 0.026223092384832204, 0.02602770014489425, 0.025856789530925302, 0.025753125409922504, 0.025668660661295053, 0.0255100400337973, 0.02535138721041048, 0.025245598572435062, 0.025118985625100194, 0.024906477062496258, 0.024675696186356674, 0.02451770996884323, 0.02432289524016918]
三个函数的累计增益为[0.44868245617501473, 0.44868245617501473, 0.44868245617501473]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 1 1 0 2 2 0 0 0 2 1 0 1 1 2 1 2 2 2 1 2 1 1 0 2 2 0 1 0 2 1 2 1 2 0 0
 0 1 2 2 0 1 1 1 0 1 0 1 2 1 0 0 2 0 2 2 0 0 1 0 0 0 0 0 1 2 1 2 1 0 0 0 0
 1 1 1 2 2 2 0 0 0 2 1 1 1 0 2 0 1 2 2 2 0 1 0 2 0 2]
每个概率被转中的次数, count: [38 31 31]
choose which one? [0]
ys [27.37393629 27.37393629 27.37393629 ... 27.37393629 27.37393629
 27.37393629]
38 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9658]
configNum = 53	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 53 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669377250.0
1669378218.0
968.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 34.286792343523366, 'spark.broadcast.checksum': 0.37538641812635654, 'spark.broadcast.compress': 0.8487997281633176, 'spark.default.parallelism': 486.6731771505397, 'spark.executor.cores': 2.0565460246673086, 'spark.executor.instances': 7.70616372526502, 'spark.executor.memory': 6.120834233352161, 'spark.executor.memoryOverhead': 875.0047581978392, 'spark.kryoserializer.buffer': 63.66761567026023, 'spark.kryoserializer.buffer.max': 60.27600722356864, 'spark.locality.wait': 6.42096777614926, 'spark.maxRemoteBlockSizeFetchToMem': 1216855815.592342, 'spark.memory.fraction': 0.8718243307063576, 'spark.memory.offHeap.enabled': 0.8442876061494473, 'spark.memory.offHeap.size': 501.17471922948243, 'spark.memory.storageFraction': 0.6672812032844067, 'spark.rdd.compress': 0.016657042581252668, 'spark.reducer.maxBlocksInFlightPerAddress': 1299862145.975981, 'spark.reducer.maxSizeInFlight': 40.693545352009664, 'spark.scheduler.revive.interval': 853.5704542042349, 'spark.shuffle.file.buffer': 32.04728512607615, 'spark.shuffle.io.numConnectionsPerPeer': 2.813734983218769, 'spark.shuffle.sort.bypassMergeThreshold': 248.8778255199074, 'spark.sql.autoBroadcastJoinThreshold': 11675498.103187602, 'spark.sql.inMemoryColumnarStorage.batchSize': 10259.916944393115, 'spark.sql.inMemoryColumnarStorage.compressed': 0.0864260127829296, 'spark.sql.shuffle.partitions': 327.8665081413395, 'spark.storage.memoryMapThreshold': 3.248886937379459}
target = -968.0
训练集长度= 53
accuracy= 1.9142238958692367e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-787.33962264 -787.33962264 -787.33962264]  max_stds [219.48756301 219.48756301 219.48756301]
所有模型的可信度所占权重  [0.027527249668704963, 0.027306637309366298, 0.027148577785731935, 0.026627863284905247, 0.0260113293458749, 0.025661766067178796, 0.025298090831655202, 0.024970305044826394, 0.02492800708218708, 0.02475961446970443, 0.02537867712474687, 0.025229834071088277, 0.027472406221225792, 0.027234976252420436, 0.026928103722825274, 0.02710209776214061, 0.026811281818831467, 0.026587249182491616, 0.026339086782006364, 0.02619701828553625, 0.025963520228307346, 0.02572743993654395, 0.025722722261424507, 0.025998230954331913, 0.025819303594435586, 0.02559488241286335, 0.025404171060738816, 0.02523735484381637, 0.025136174138331226, 0.025053732858049495, 0.02489891220419679, 0.02474406012575149, 0.02464080579899772, 0.024517226037639884, 0.024309808407722202, 0.024084556202480883, 0.02393035476045536, 0.023740207084524116, 0.02395636497594076]
三个函数的累计增益为[0.4430536892008072, 0.4430536892008072, 0.4430536892008072]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 2 2 0 2 2 0 1 0 1 1 2 0 1 2 1 0 0 1 2 1 1 0 0 2 0 1 1 0 1 0 1 1 1 2
 0 1 0 0 2 1 1 0 2 0 2 1 1 1 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 2 0 2 2 0 0 1 2
 0 0 0 1 0 1 2 0 1 2 1 1 2 2 1 0 1 1 1 2 2 2 1 2 0 1]
每个概率被转中的次数, count: [28 42 30]
choose which one? [1]
ys [0.21218608 0.21218608 0.21218608 ... 0.21218608 0.21218608 0.21218608]
39 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1109]
configNum = 54	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 54 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669378279.0
1669379132.0
853.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
================= config55 =================
2022年 12月 08日 星期四 19:14:12 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config55/tpch-times.txt'
x_probe = {'spark.broadcast.blockSize': 61.86836289861495, 'spark.broadcast.checksum': 0.13570790577925285, 'spark.broadcast.compress': 0.5990615811873077, 'spark.default.parallelism': 283.0106247235532, 'spark.executor.cores': 1.334855189718098, 'spark.executor.instances': 7.673106566380273, 'spark.executor.memory': 6.671873933883234, 'spark.executor.memoryOverhead': 425.3507831672644, 'spark.kryoserializer.buffer': 46.556830042311695, 'spark.kryoserializer.buffer.max': 95.96503860122164, 'spark.locality.wait': 7.079631895019229, 'spark.maxRemoteBlockSizeFetchToMem': 2147254927.2954664, 'spark.memory.fraction': 0.7540984190800929, 'spark.memory.offHeap.enabled': 0.7092944760630131, 'spark.memory.offHeap.size': 831.2302557571718, 'spark.memory.storageFraction': 0.8098385161384496, 'spark.rdd.compress': 0.8501386432335762, 'spark.reducer.maxBlocksInFlightPerAddress': 2039293610.899716, 'spark.reducer.maxSizeInFlight': 52.58855355663131, 'spark.scheduler.revive.interval': 579.7076535805322, 'spark.shuffle.file.buffer': 18.458258323132764, 'spark.shuffle.io.numConnectionsPerPeer': 2.5913654585079033, 'spark.shuffle.sort.bypassMergeThreshold': 322.473882372322, 'spark.sql.autoBroadcastJoinThreshold': 11315701.558124818, 'spark.sql.inMemoryColumnarStorage.batchSize': 8156.220791672753, 'spark.sql.inMemoryColumnarStorage.compressed': 0.4731208868854412, 'spark.sql.shuffle.partitions': 394.48068192832267, 'spark.storage.memoryMapThreshold': 1.608528545715307}
target = -853.0
训练集长度= 54
accuracy= 1.920268849313193e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07, 1.920268849313193e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-788.55555556 -788.55555556 -788.55555556]  max_stds [217.6258824 217.6258824 217.6258824]
所有模型的可信度所占权重  [0.02688123926687154, 0.02666580424564769, 0.02651145406811966, 0.026002959712348072, 0.0254008946121044, 0.025059534895945576, 0.02470439440282687, 0.02438430110363897, 0.02434299579097995, 0.02417855502187305, 0.02478308949413816, 0.02463773949416496, 0.026827682887224077, 0.026595824932746388, 0.02629615409778259, 0.02646606483925279, 0.02618207377407923, 0.025963298743027507, 0.025720960225930057, 0.025582225797614117, 0.025354207480482508, 0.025123667528781507, 0.025119060568217142, 0.025388103614045535, 0.025213375327324216, 0.024994220869432416, 0.024807985137600606, 0.02464508376915098, 0.02454627757579454, 0.02446577103019366, 0.024314583712544576, 0.024163365707776274, 0.024062534556963437, 0.023941854969515237, 0.02373930502336775, 0.023519339044297705, 0.02336875640679225, 0.02318307112278226, 0.023394156213683993, 0.023468032934937724]
三个函数的累计增益为[0.4390316000783545, 0.4390316000783545, 0.4390316000783545]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 1 2 2 2 1 0 1 1 1 1 2 1 0 1 1 1 1 2 1 1 1 2 0 0 1 0 0 1 2 2 2 2 2 2
 0 2 2 0 1 0 1 0 2 2 2 2 2 2 0 2 1 0 1 2 1 2 0 2 0 1 0 0 1 0 1 0 2 2 2 2 0
 0 0 0 1 0 1 0 0 2 1 1 2 1 1 0 0 1 2 0 2 1 1 0 2 2 2]
每个概率被转中的次数, count: [31 33 36]
choose which one? [2]
ys [-227.95128249 -227.95128249 -227.95128249 ... -227.95128249 -227.95128249
 -227.95128249]
40 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8219]
configNum = 55	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 55 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669379202.0
1669379835.0
633.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 51.816345795720835, 'spark.broadcast.checksum': 0.034623388756763185, 'spark.broadcast.compress': 0.3933552778929289, 'spark.default.parallelism': 471.6765297478975, 'spark.executor.cores': 1.679036242329445, 'spark.executor.instances': 4.523639217961866, 'spark.executor.memory': 3.8132960891378573, 'spark.executor.memoryOverhead': 546.8379512871257, 'spark.kryoserializer.buffer': 110.40177971859015, 'spark.kryoserializer.buffer.max': 62.340766090178526, 'spark.locality.wait': 7.14351956987325, 'spark.maxRemoteBlockSizeFetchToMem': 1945666174.5611546, 'spark.memory.fraction': 0.7849788434928532, 'spark.memory.offHeap.enabled': 0.98020517300153, 'spark.memory.offHeap.size': 204.62623691123076, 'spark.memory.storageFraction': 0.5993708813753789, 'spark.rdd.compress': 0.5848081650896344, 'spark.reducer.maxBlocksInFlightPerAddress': 1726042402.4906592, 'spark.reducer.maxSizeInFlight': 57.52424094200063, 'spark.scheduler.revive.interval': 754.5930021507539, 'spark.shuffle.file.buffer': 45.862513980133734, 'spark.shuffle.io.numConnectionsPerPeer': 1.6230811877218856, 'spark.shuffle.sort.bypassMergeThreshold': 346.1439310654814, 'spark.sql.autoBroadcastJoinThreshold': 5934582.484308546, 'spark.sql.inMemoryColumnarStorage.batchSize': 14869.31373901956, 'spark.sql.inMemoryColumnarStorage.compressed': 0.06773309873539746, 'spark.sql.shuffle.partitions': 291.0815795663087, 'spark.storage.memoryMapThreshold': 1.3463256596547095}
target = -633.0
训练集长度= 55
accuracy= 1.906208174265191e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07, 1.920268849313193e-07, 1.906208174265191e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-785.72727273 -785.72727273 -785.72727273]  max_stds [216.63764925 216.63764925 216.63764925]
所有模型的可信度所占权重  ================= config56 =================
2022年 12月 08日 星期四 19:14:20 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config56/tpch-times.txt'
================= config57 =================
2022年 12月 08日 星期四 19:14:28 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q3 查询中
进程1 Q6 查询中
进程2 Q7 查询中
进程3 Q8 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config57/tpch-times.txt'
[0.02626926535709474, 0.026058734894434294, 0.025907898627878845, 0.025410980571693435, 0.024822621987346534, 0.02448903361082217, 0.02414197818825904, 0.02382917208092463, 0.02378880711827818, 0.023628109980906333, 0.0242188817199539, 0.024076840734378685, 0.02621692823325319, 0.025990348719159367, 0.025697500141558714, 0.025863542722794994, 0.025586016951902348, 0.02537222251753313, 0.025135401039599138, 0.024999825016655597, 0.024776997727350137, 0.024551706210596706, 0.024547204131345316, 0.02481012218706372, 0.02463937173602594, 0.024425206512786218, 0.024243210593256872, 0.02408401781079796, 0.0239874610231277, 0.02390878727641622, 0.023761041864587468, 0.023613266464257453, 0.023514730818982046, 0.023396798603343153, 0.023198859876240978, 0.02298390160678182, 0.02283674710904715, 0.022655289105934277, 0.022861568668077002, 0.02293376352394133, 0.022765836935613244]
三个函数的累计增益为[0.4412302916213071, 0.4412302916213071, 0.4412302916213071]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 0 1 2 0 2 0 0 1 2 0 2 2 2 2 1 0 1 2 1 0 1 2 2 2 2 1 2 0 1 0 2 2 1 2
 0 0 1 2 0 0 0 2 2 2 2 2 1 2 1 1 1 2 0 0 2 0 1 2 0 0 2 1 1 2 0 0 0 2 2 2 1
 0 0 1 0 1 0 0 1 2 2 0 0 1 1 1 0 0 2 0 1 2 2 2 0 2 2]
每个概率被转中的次数, count: [35 25 40]
choose which one? [2]
ys [-227.66868825 -227.66868825 -227.66868825 ... -227.66868825 -227.66868825
 -227.66868825]
41 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [584]
configNum = 56	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 56 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669379897.0
1669380564.0
667.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 51.99564965052953, 'spark.broadcast.checksum': 0.29834613391913267, 'spark.broadcast.compress': 0.11109315259524732, 'spark.default.parallelism': 300.3198745076016, 'spark.executor.cores': 1.6994008202342599, 'spark.executor.instances': 5.338454363139025, 'spark.executor.memory': 5.457054820600247, 'spark.executor.memoryOverhead': 826.3031087186341, 'spark.kryoserializer.buffer': 101.63755610556184, 'spark.kryoserializer.buffer.max': 67.61642650909711, 'spark.locality.wait': 4.272589845844598, 'spark.maxRemoteBlockSizeFetchToMem': 1395982894.8827364, 'spark.memory.fraction': 0.770593515384042, 'spark.memory.offHeap.enabled': 0.5919381374872056, 'spark.memory.offHeap.size': 466.67201669996905, 'spark.memory.storageFraction': 0.5433831788797095, 'spark.rdd.compress': 0.20252850633211883, 'spark.reducer.maxBlocksInFlightPerAddress': 1498846198.510706, 'spark.reducer.maxSizeInFlight': 65.40238437719083, 'spark.scheduler.revive.interval': 887.8160740314331, 'spark.shuffle.file.buffer': 19.073217319703822, 'spark.shuffle.io.numConnectionsPerPeer': 1.486660992401968, 'spark.shuffle.sort.bypassMergeThreshold': 340.4603359619276, 'spark.sql.autoBroadcastJoinThreshold': 6973949.956746101, 'spark.sql.inMemoryColumnarStorage.batchSize': 12740.99988238149, 'spark.sql.inMemoryColumnarStorage.compressed': 0.43440199665018453, 'spark.sql.shuffle.partitions': 296.08166041512, 'spark.storage.memoryMapThreshold': 1.7037948067801967}
target = -667.0
训练集长度= 56
accuracy= 1.8956680484780591e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07, 1.920268849313193e-07, 1.906208174265191e-07, 1.8956680484780591e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-783.60714286 -783.60714286 -783.60714286]  max_stds [215.2696547 215.2696547 215.2696547]
所有模型的可信度所占权重  [0.02568769702029831, 0.025481827436019882, 0.025334330493784196, 0.02484841357537449, 0.024273080506537335, 0.023946877355091507, 0.02360750530098701, 0.0233016243255552, 0.02326215299216987, 0.023105013486335823, 0.023682706285678232, 0.023543809908017056, 0.025636518574236725, 0.025414955244241408, 0.0251285899640567, 0.02529095657238341, 0.02501957487133064, 0.024810513575552175, 0.024578935025852663, 0.024446360484720694, 0.024228466309998864, 0.024008162462710547, 0.02400376005380421, 0.024260857436035958, 0.024093887184195507, 0.02388446330834354, 0.023706496548472285, 0.023550828093034555, 0.02345640895061811, 0.023379476941233598, 0.023235002426107078, 0.02309049858638681, 0.022994144395771788, 0.022878823050348388, 0.022685266436515982, 0.02247506707148566, 0.022331170388361955, 0.022153729636117506, 0.02235544242944353, 0.02242603898243644, 0.022261830076553992, 0.02213873623380039]
三个函数的累计增益为[0.44219504890394423, 0.44219504890394423, 0.44219504890394423]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 0 1 1 0 2 2 0 0 0 1 2 0 1 1 1 0 0 2 1 1 0 2 1 1 2 0 1 1 0 0 2 1 0 2
 2 0 2 1 1 1 1 0 0 2 0 0 2 0 1 1 0 1 2 2 0 2 2 2 0 1 0 0 0 1 0 1 1 2 0 1 1
 1 2 0 0 2 0 1 0 2 1 1 2 1 0 0 0 2 1 0 2 2 0 2 1 2 2]
每个概率被转中的次数, count: [38 33 29]
choose which one? [0]
ys [26.00615028 26.00615028 26.00615028 ... 26.00615028 26.00615028
 26.00615028]
42 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4861]
configNum = 57	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 57 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669380626.0
1669381298.0
672.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 59.3273436100186, 'spark.broadcast.checksum': 0.025893303952605362, 'spark.broadcast.compress': 0.07865475825237878, 'spark.default.parallelism': 330.51205837186365, 'spark.executor.cores': 2.4148012520956894, 'spark.executor.instances': 4.475686113068091, 'spark.executor.memory': 5.769090531978894, 'spark.executor.memoryOverhead': 722.5641844789945, 'spark.kryoserializer.buffer': 49.54468820320834, 'spark.kryoserializer.buffer.max': 94.01598307468359, 'spark.locality.wait': 6.633459574135761, 'spark.maxRemoteBlockSizeFetchToMem': 1705597042.3954976, 'spark.memory.fraction': 0.6264483930207296, 'spark.memory.offHeap.enabled': 0.49312144671574976, 'spark.memory.offHeap.size': 838.7421906092316, 'spark.memory.storageFraction': 0.7147063666642911, 'spark.rdd.compress': 0.8914699198991028, 'spark.reducer.maxBlocksInFlightPerAddress': 1976296013.3537831, 'spark.reducer.maxSizeInFlight': 42.800236587250545, 'spark.scheduler.revive.interval': 612.7821453843842, 'spark.shuffle.file.buffer': 44.98193724148473, 'spark.shuffle.io.numConnectionsPerPeer': 1.3709417851794878, 'spark.shuffle.sort.bypassMergeThreshold': 216.1425277144586, 'spark.sql.autoBroadcastJoinThreshold': 10947536.61725372, 'spark.sql.inMemoryColumnarStorage.batchSize': 13644.260501635554, 'spark.sql.inMemoryColumnarStorage.compressed': 0.616086366132937, 'spark.sql.shuffle.partitions': 284.89535613436914, 'spark.storage.memoryMapThreshold': 2.1493381876448527}
target = -672.0
训练集长度= 57
accuracy= 1.885933843885795e-07
所有模型的可信度  ================= config58 =================
2022年 12月 08日 星期四 19:14:36 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q2 查询中
进程1 Q3 查询中
进程2 Q5 查询中
进程3 Q18 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config58/tpch-times.txt'
================= config59 =================
2022年 12月 08日 星期四 19:14:44 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q2 查询中
进程1 Q3 查询中
进程2 Q5 查询中
进程3 Q18 查询中
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 199, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config59/tpch-times.txt'
[2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07, 1.920268849313193e-07, 1.906208174265191e-07, 1.8956680484780591e-07, 1.885933843885795e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-781.64912281 -781.64912281 -781.64912281]  max_stds [213.87547543 213.87547543 213.87547543]
所有模型的可信度所占权重  [0.02513411673156388, 0.02493268372031948, 0.02478836539700809, 0.024312920185259417, 0.023749985777388783, 0.023430812436152127, 0.023098753987449903, 0.02279946487109227, 0.022760844160949454, 0.0226070910751959, 0.02317233436042239, 0.023036431256030866, 0.02508404120177094, 0.024867252651394632, 0.024587058659136702, 0.02474592620120429, 0.02448039288587124, 0.024275836945804066, 0.024049249007769974, 0.023919531501766563, 0.023706333034879526, 0.023490776824847084, 0.023486469289638125, 0.023738026119013923, 0.023574654143817375, 0.02336974343742433, 0.02319561193340481, 0.02304329819631493, 0.022950913824710352, 0.022875639731328758, 0.022734278700596546, 0.02259288897722748, 0.022498611258497784, 0.022385775134838186, 0.022196389744533022, 0.02199072026106792, 0.02184992460982452, 0.02167630777775412, 0.021873673578576978, 0.02194274874722163, 0.0217820786098578, 0.02166163748933769, 0.02155040556173625]
三个函数的累计增益为[0.4429831815425662, 0.4429831815425662, 0.4429831815425662]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 2 0 1 1 0 2 1 2 0 1 0 1 2 0 1 1 2 2 0 2 0 0 0 0 1 0 0 2 0 0 1 0 0 2
 0 1 0 1 0 1 0 1 2 1 1 1 1 2 1 0 2 1 0 0 0 0 0 1 2 0 2 2 2 0 0 2 1 1 0 2 0
 0 1 0 2 0 1 1 2 1 2 2 1 1 1 2 2 2 2 1 2 0 0 0 1 0 1]
每个概率被转中的次数, count: [39 32 29]
choose which one? [0]
ys [26.018265 26.018265 26.018265 ... 26.018265 26.018265 26.018265]
43 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6965]
configNum = 58	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 58 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
1669381363.0
1669382040.0
677.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3060
x_probe = {'spark.broadcast.blockSize': 34.409244180243846, 'spark.broadcast.checksum': 0.2540109161607689, 'spark.broadcast.compress': 0.13578370680197704, 'spark.default.parallelism': 487.88523199124313, 'spark.executor.cores': 2.8721392935062235, 'spark.executor.instances': 5.779610440168367, 'spark.executor.memory': 6.368141192247657, 'spark.executor.memoryOverhead': 862.0123293365411, 'spark.kryoserializer.buffer': 88.32571954021253, 'spark.kryoserializer.buffer.max': 109.97596713237377, 'spark.locality.wait': 9.13756391284957, 'spark.maxRemoteBlockSizeFetchToMem': 1534606001.0139942, 'spark.memory.fraction': 0.8826418840303608, 'spark.memory.offHeap.enabled': 0.4211248736430283, 'spark.memory.offHeap.size': 93.02959544543558, 'spark.memory.storageFraction': 0.5654071212828296, 'spark.rdd.compress': 0.9864957784383959, 'spark.reducer.maxBlocksInFlightPerAddress': 1344877225.9375877, 'spark.reducer.maxSizeInFlight': 65.83417392461942, 'spark.scheduler.revive.interval': 515.738130844542, 'spark.shuffle.file.buffer': 30.071029500481774, 'spark.shuffle.io.numConnectionsPerPeer': 1.1020245313435775, 'spark.shuffle.sort.bypassMergeThreshold': 347.3224877417932, 'spark.sql.autoBroadcastJoinThreshold': 5558903.708362254, 'spark.sql.inMemoryColumnarStorage.batchSize': 11099.726870477767, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7795112663306252, 'spark.sql.shuffle.partitions': 395.8015824837428, 'spark.storage.memoryMapThreshold': 1.696440874656147}
target = -677.0
训练集长度= 58
accuracy= 1.8769638747421806e-07
所有模型的可信度  [2.1995540290153855e-07, 2.1819260854440518e-07, 2.1692964015410694e-07, 2.1276889147036837e-07, 2.078425013444393e-07, 2.0504932975154322e-07, 2.0214339712414218e-07, 1.995242377211854e-07, 1.9918625751879625e-07, 1.9784072298955588e-07, 2.0278731872105606e-07, 2.015979941706346e-07, 2.195171784972856e-07, 2.17620003694935e-07, 2.1516795084915957e-07, 2.165582433586063e-07, 2.1423449003233502e-07, 2.1244436608670716e-07, 2.1046143421226702e-07, 2.093262414938958e-07, 2.0746048447593631e-07, 2.0557409421476304e-07, 2.0553639781776934e-07, 2.0773783916336876e-07, 2.0630812715037213e-07, 2.0451489854938772e-07, 2.0299102701121007e-07, 2.016580886085261e-07, 2.0084960817155208e-07, 2.0019086437265009e-07, 1.9895377604361275e-07, 1.9771643661760758e-07, 1.9689138699166283e-07, 1.9590392778207672e-07, 1.9424656539002878e-07, 1.9244669652718916e-07, 1.9121455598583744e-07, 1.896951884800529e-07, 1.9142238958692367e-07, 1.920268849313193e-07, 1.906208174265191e-07, 1.8956680484780591e-07, 1.885933843885795e-07, 1.8769638747421806e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-779.84482759 -779.84482759 -779.84482759]  max_stds [212.46085252 212.46085252 212.46085252]
所有模型的可信度所占权重  [0.024606361784999684, 0.024409158374071892, 0.024267870382393832, 0.0238024083566469, 0.02325129419380488, 0.022938822711696522, 0.022613736677848682, 0.02232073190055486, 0.022282922130817683, 0.022132397483621277, 0.022685772043044644, 0.022552722571281714, 0.02455733771879436, 0.024345101197480436, 0.024070790593407224, 0.024226322305850475, 0.02396636454036233, 0.02376610377447504, 0.02354427362866442, 0.02341727987286001, 0.02320855805206725, 0.022997527994965596, 0.02299331090745521, 0.02323958565898984, 0.0230796440954907, 0.022879036012502244, 0.02270856084395615, 0.022559445322623658, 0.02246900079675228, 0.022395307275131157, 0.0222569144801248, 0.022118493594956747, 0.022026195477616736, 0.021915728636436746, 0.021730319875889772, 0.021528968948290993, 0.0213911296611877, 0.021221158357739234, 0.02141437995971161, 0.0214820047188461, 0.02132470826119676, 0.02120679610948041, 0.021097899780166927, 0.020997552935744623]
三个函数的累计增益为[0.4435976924475912, 0.4435976924475912, 0.4435976924475912]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 1 0 0 2 0 2 0 2 2 1 0 0 2 2 2 1 0 2 2 0 0 1 1 1 0 2 0 2 0 1 0 1 0 1
 1 0 2 0 2 1 1 2 2 0 1 0 2 0 1 2 0 1 1 1 2 1 1 1 0 1 0 0 1 2 0 2 0 1 1 0 0
 2 0 0 2 2 0 1 0 1 0 1 0 2 1 2 1 1 1 1 1 2 2 2 2 2 2]
每个概率被转中的次数, count: [35 33 32]
choose which one? [0]
ys [25.99236483 25.99236483 25.99236483 ... 25.99236483 25.99236483
 25.99236483]
44 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7440]
configNum = 59	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 59 /usr/local/home/auto_tool/CCAGNBO/config/tpch-50G 50G
run_cmd命令执行失败
Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 194, in probe
    target = self._cache[_hashable(x)]
KeyError: (44.244115062663184, 0.6237069087109955, 0.9546237158014335, 215.6057692506691, 1.9353763021102242, 6.277383989787603, 6.847457880294796, 747.5894825420132, 47.819980163463626, 112.87031352276888, 8.750697838665065, 2130684644.4193728, 0.7471843672517045, 0.42913929549166907, 373.36285025806967, 0.5796651043547628, 0.8976204403638105, 2027518418.50569, 46.25098014912348, 811.5738322055095, 43.32300785261354, 1.0106185068175564, 157.2414000586847, 12071763.991783006, 12013.784579730782, 0.09033201740429231, 398.5292177318362, 3.1801360412072315)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 372, in <module>
    optimizer.maximize(init_points=init_points, n_iter=n_iter, acq='combine')
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 327, in maximize
    success, target = self.probe(x_probe, lazy=False)
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/bayesian_optimization.py", line 133, in probe
    success, target = self._space.probe(params)
  File "/usr/local/home/auto_tool/CCAGNBO/bayes_scode/target_space.py", line 198, in probe
    target = self.target_func(**params)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 46, in black_box_function
    return -schafferRun(i)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 281, in schafferRun
    runtime = run(configNum)
  File "/usr/local/home/auto_tool/CCAGNBO/VSGNet_Bayesian_Optimization.py", line 109, in run
    time.sleep(3)
KeyboardInterrupt
nohup: 忽略输入
/usr/local/home/auto_tool/CCAGNBO
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/generationConf.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/target.png" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
================= config1 =================
2022年 12月 12日 星期一 22:56:53 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  4388 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config2 =================
2022年 12月 12日 星期一 23:31:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 31999 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config3 =================
2022年 12月 13日 星期二 00:05:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 58453 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config4 =================
2022年 12月 13日 星期二 00:39:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  3857 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
benchmark = tpch-100G	 初始样本数：initpoints = 5	 bo迭代搜索次数：--niters = 50
基准为：tpch  默认配置执行结果为 8825.0 s
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 17650
重要参数列表（将贝叶斯的x_probe按照重要参数列表顺序转成配置文件实际运行:
                                    vital_params
0                   spark.memory.offHeap.enabled
1                      spark.memory.offHeap.size
2                          spark.executor.memory
3                           spark.executor.cores
4                  spark.executor.memoryOverhead
5                       spark.executor.instances
6                      spark.broadcast.blockSize
7                       spark.broadcast.checksum
8                       spark.broadcast.compress
9                      spark.default.parallelism
10                   spark.kryoserializer.buffer
11               spark.kryoserializer.buffer.max
12                           spark.locality.wait
13            spark.maxRemoteBlockSizeFetchToMem
14                         spark.memory.fraction
15                  spark.memory.storageFraction
16                            spark.rdd.compress
17     spark.reducer.maxBlocksInFlightPerAddress
18                 spark.reducer.maxSizeInFlight
19               spark.scheduler.revive.interval
20                     spark.shuffle.file.buffer
21        spark.shuffle.io.numConnectionsPerPeer
22       spark.shuffle.sort.bypassMergeThreshold
23              spark.storage.memoryMapThreshold
24                  spark.sql.shuffle.partitions
25          spark.sql.autoBroadcastJoinThreshold
26   spark.sql.inMemoryColumnarStorage.batchSize
27  spark.sql.inMemoryColumnarStorage.compressed
------------使用lhs生成初始样本点------------
configNum = 1	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 1 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669244930.0
1669245963.0
1033.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 5165
生成测试集 - 配置成功 target -1033.0  conf {'spark.broadcast.blockSize': 45.34470415048237, 'spark.broadcast.checksum': 0.7203244934421581, 'spark.broadcast.compress': 0.00011437481734488664, 'spark.default.parallelism': 290.69977178955196, 'spark.executor.cores': 1.293511781634226, 'spark.executor.instances': 4.369354379075191, 'spark.executor.memory': 3.7450408455106836, 'spark.executor.memoryOverhead': 554.3614384322225, 'spark.kryoserializer.buffer': 70.08967752614431, 'spark.kryoserializer.buffer.max': 83.72640646432227, 'spark.locality.wait': 6.515167086419769, 'spark.maxRemoteBlockSizeFetchToMem': 1809490227.7801933, 'spark.memory.fraction': 0.581780899892607, 'spark.memory.offHeap.enabled': 0.8781174363909454, 'spark.memory.offHeap.size': 28.04489543467639, 'spark.memory.storageFraction': 0.768187004071361, 'spark.rdd.compress': 0.41730480236712697, 'spark.reducer.maxBlocksInFlightPerAddress': 1673630458.4455886, 'spark.reducer.maxSizeInFlight': 44.492382035047484, 'spark.scheduler.revive.interval': 599.0507445424394, 'spark.shuffle.file.buffer': 41.62382619761718, 'spark.shuffle.io.numConnectionsPerPeer': 2.936523151438795, 'spark.shuffle.sort.bypassMergeThreshold': 212.68483563184856, 'spark.sql.autoBroadcastJoinThreshold': 12502408.790480666, 'spark.sql.inMemoryColumnarStorage.batchSize': 13763.891522960383, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8946066635038473, 'spark.sql.shuffle.partitions': 262.7566317054667, 'spark.storage.memoryMapThreshold': 1.1171643496986472}
configNum = 2	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 2 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669245967.0
1669246884.0
917.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 4585
生成测试集 - 配置成功 target -917.0  conf {'spark.broadcast.blockSize': 37.43457342606621, 'spark.broadcast.checksum': 0.8781425034294131, 'spark.broadcast.compress': 0.0983468338330501, 'spark.default.parallelism': 326.3322875015157, 'spark.executor.cores': 2.915779060301004, 'spark.executor.instances': 6.132661139892068, 'spark.executor.memory': 5.767508455801893, 'spark.executor.memoryOverhead': 539.549206085989, 'spark.kryoserializer.buffer': 97.90408905743203, 'spark.kryoserializer.buffer.max': 112.1240645021478, 'spark.locality.wait': 4.109729664065151, 'spark.maxRemoteBlockSizeFetchToMem': 1879202699.955295, 'spark.memory.fraction': 0.8955444355625979, 'spark.memory.offHeap.enabled': 0.7481656543798394, 'spark.memory.offHeap.size': 287.1746478739509, 'spark.memory.storageFraction': 0.8157117313805955, 'spark.rdd.compress': 0.10322600657764203, 'spark.reducer.maxBlocksInFlightPerAddress': 1554663834.7539082, 'spark.reducer.maxSizeInFlight': 69.07505609897906, 'spark.scheduler.revive.interval': 646.8070741868397, 'spark.shuffle.file.buffer': 25.20881083476316, 'spark.shuffle.io.numConnectionsPerPeer': 1.2600571442365553, 'spark.shuffle.sort.bypassMergeThreshold': 153.8733915740594, 'spark.sql.autoBroadcastJoinThreshold': 12360986.47787979, 'spark.sql.inMemoryColumnarStorage.batchSize': 7116.28116000059, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2655466593722262, 'spark.sql.shuffle.partitions': 323.73597389205077, 'spark.storage.memoryMapThreshold': 1.1600876353512413}
configNum = 3	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 3 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669246888.0
1669248253.0
1365.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 4585
生成测试集 - 配置成功 target -1365.0  conf {'spark.broadcast.blockSize': 50.37176337574442, 'spark.broadcast.checksum': 0.14672857490581015, 'spark.broadcast.compress': 0.5893055369032842, 'spark.default.parallelism': 409.92750800627937, 'spark.executor.cores': 1.2046688576556517, 'spark.executor.instances': 5.656223951278273, 'spark.executor.memory': 5.77760063091098, 'spark.executor.memoryOverhead': 588.190379876763, 'spark.kryoserializer.buffer': 36.795532058824364, 'spark.kryoserializer.buffer.max': 83.44605496788911, 'spark.locality.wait': 7.982767871318733, 'spark.maxRemoteBlockSizeFetchToMem': 1626599409.527616, 'spark.memory.fraction': 0.8778379023963254, 'spark.memory.offHeap.enabled': 0.5865550405019929, 'spark.memory.offHeap.size': 925.0835612547927, 'spark.memory.storageFraction': 0.554989881658495, 'spark.rdd.compress': 0.13927634725075855, 'spark.reducer.maxBlocksInFlightPerAddress': 1940671618.0206747, 'spark.reducer.maxSizeInFlight': 52.72565878353707, 'spark.scheduler.revive.interval': 582.6770985584664, 'spark.shuffle.file.buffer': 45.680274572673085, 'spark.shuffle.io.numConnectionsPerPeer': 1.6955317194910131, 'spark.shuffle.sort.bypassMergeThreshold': 300.1624206272311, 'spark.sql.autoBroadcastJoinThreshold': 12855520.63486835, 'spark.sql.inMemoryColumnarStorage.batchSize': 13833.060912058098, 'spark.sql.inMemoryColumnarStorage.compressed': 0.6236722070556089, 'spark.sql.shuffle.partitions': 362.6413651041006, 'spark.storage.memoryMapThreshold': 2.0466950259335275}
configNum = 4	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 4 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669248257.0
1669249355.0
1098.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 4585
生成测试集 - 配置成功 target -1098.0  conf ================= config5 =================
2022年 12月 13日 星期二 01:13:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 31285 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config6 =================
2022年 12月 13日 星期二 01:47:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 57926 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config7 =================
2022年 12月 13日 星期二 02:21:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  3585 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
{'spark.broadcast.blockSize': 40.637692536480834, 'spark.broadcast.checksum': 0.8958862181960668, 'spark.broadcast.compress': 0.4280911898712949, 'spark.default.parallelism': 489.45201414451566, 'spark.executor.cores': 2.326882995636896, 'spark.executor.instances': 6.486782880836487, 'spark.executor.memory': 3.4589838918135007, 'spark.executor.memoryOverhead': 852.0982045425861, 'spark.kryoserializer.buffer': 75.1915648140743, 'spark.kryoserializer.buffer.max': 87.52540298116465, 'spark.locality.wait': 6.448820816567687, 'spark.maxRemoteBlockSizeFetchToMem': 1328247288.4244535, 'spark.memory.fraction': 0.8613518082249015, 'spark.memory.offHeap.enabled': 0.5736794866722859, 'spark.memory.offHeap.size': 2.9392148799067854, 'spark.memory.storageFraction': 0.7468579654482895, 'spark.rdd.compress': 0.32664490177209615, 'spark.reducer.maxBlocksInFlightPerAddress': 1639666151.072064, 'spark.reducer.maxSizeInFlight': 68.35014717794479, 'spark.scheduler.revive.interval': 678.6348800012499, 'spark.shuffle.file.buffer': 45.073124829433574, 'spark.shuffle.io.numConnectionsPerPeer': 2.2467202315836055, 'spark.shuffle.sort.bypassMergeThreshold': 153.16424856931127, 'spark.sql.autoBroadcastJoinThreshold': 14988735.768100983, 'spark.sql.inMemoryColumnarStorage.batchSize': 11908.96917516924, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9973228504514805, 'spark.sql.shuffle.partitions': 275.85107625179927, 'spark.storage.memoryMapThreshold': 1.4114072488866332}
configNum = 5	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 5 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1668964493.0
1668965994.0
1501.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 4585
生成测试集 - 配置成功 target -1501.0  conf {'spark.broadcast.blockSize': 61.843054817189234, 'spark.broadcast.checksum': 0.6968181614899002, 'spark.broadcast.compress': 0.06600017272206249, 'spark.default.parallelism': 426.6389157807399, 'spark.executor.cores': 2.5077523769224928, 'spark.executor.instances': 7.692098142185934, 'spark.executor.memory': 5.8460990345138875, 'spark.executor.memoryOverhead': 445.2655842522772, 'spark.kryoserializer.buffer': 33.90849284862038, 'spark.kryoserializer.buffer.max': 34.51625474026105, 'spark.locality.wait': 4.169838928124768, 'spark.maxRemoteBlockSizeFetchToMem': 1338108624.7870486, 'spark.memory.fraction': 0.8440111794731553, 'spark.memory.offHeap.enabled': 0.5388310643416528, 'spark.memory.offHeap.size': 566.0897061742243, 'spark.memory.storageFraction': 0.8368123569438424, 'spark.rdd.compress': 0.12417331511991114, 'spark.reducer.maxBlocksInFlightPerAddress': 1373513015.7324514, 'spark.reducer.maxSizeInFlight': 58.74429668666521, 'spark.scheduler.revive.interval': 984.7978741598372, 'spark.shuffle.file.buffer': 33.95296701618272, 'spark.shuffle.io.numConnectionsPerPeer': 1.037294578745886, 'spark.shuffle.sort.bypassMergeThreshold': 310.12653453612324, 'spark.sql.autoBroadcastJoinThreshold': 7685792.321671219, 'spark.sql.inMemoryColumnarStorage.batchSize': 13071.051956187792, 'spark.sql.inMemoryColumnarStorage.compressed': 0.38786064406417176, 'spark.sql.shuffle.partitions': 379.5312781839143, 'spark.storage.memoryMapThreshold': 3.2413649282115538}
X_test [array([4.53447042e+01, 7.20324493e-01, 1.14374817e-04, 2.90699772e+02,
       1.29351178e+00, 4.36935438e+00, 3.74504085e+00, 5.54361438e+02,
       7.00896775e+01, 8.37264065e+01, 6.51516709e+00, 1.80949023e+09,
       5.81780900e-01, 8.78117436e-01, 2.80448954e+01, 7.68187004e-01,
       4.17304802e-01, 1.67363046e+09, 4.44923820e+01, 5.99050745e+02,
       4.16238262e+01, 2.93652315e+00, 2.12684836e+02, 1.25024088e+07,
       1.37638915e+04, 8.94606664e-01, 2.62756632e+02, 1.11716435e+00]), array([3.74345734e+01, 8.78142503e-01, 9.83468338e-02, 3.26332288e+02,
       2.91577906e+00, 6.13266114e+00, 5.76750846e+00, 5.39549206e+02,
       9.79040891e+01, 1.12124065e+02, 4.10972966e+00, 1.87920270e+09,
       8.95544436e-01, 7.48165654e-01, 2.87174648e+02, 8.15711731e-01,
       1.03226007e-01, 1.55466383e+09, 6.90750561e+01, 6.46807074e+02,
       2.52088108e+01, 1.26005714e+00, 1.53873392e+02, 1.23609865e+07,
       7.11628116e+03, 2.65546659e-01, 3.23735974e+02, 1.16008764e+00]), array([5.03717634e+01, 1.46728575e-01, 5.89305537e-01, 4.09927508e+02,
       1.20466886e+00, 5.65622395e+00, 5.77760063e+00, 5.88190380e+02,
       3.67955321e+01, 8.34460550e+01, 7.98276787e+00, 1.62659941e+09,
       8.77837902e-01, 5.86555041e-01, 9.25083561e+02, 5.54989882e-01,
       1.39276347e-01, 1.94067162e+09, 5.27256588e+01, 5.82677099e+02,
       4.56802746e+01, 1.69553172e+00, 3.00162421e+02, 1.28555206e+07,
       1.38330609e+04, 6.23672207e-01, 3.62641365e+02, 2.04669503e+00]), array([4.06376925e+01, 8.95886218e-01, 4.28091190e-01, 4.89452014e+02,
       2.32688300e+00, 6.48678288e+00, 3.45898389e+00, 8.52098205e+02,
       7.51915648e+01, 8.75254030e+01, 6.44882082e+00, 1.32824729e+09,
       8.61351808e-01, 5.73679487e-01, 2.93921488e+00, 7.46857965e-01,
       3.26644902e-01, 1.63966615e+09, 6.83501472e+01, 6.78634880e+02,
       4.50731248e+01, 2.24672023e+00, 1.53164249e+02, 1.49887358e+07,
       1.19089692e+04, 9.97322850e-01, 2.75851076e+02, 1.41140725e+00]), array([6.18430548e+01, 6.96818161e-01, 6.60001727e-02, 4.26638916e+02,
       2.50775238e+00, 7.69209814e+00, 5.84609903e+00, 4.45265584e+02,
       3.39084928e+01, 3.45162547e+01, 4.16983893e+00, 1.33810862e+09,
       8.44011179e-01, 5.38831064e-01, 5.66089706e+02, 8.36812357e-01,
       1.24173315e-01, 1.37351302e+09, 5.87442967e+01, 9.84797874e+02,
       3.39529670e+01, 1.03729458e+00, 3.10126535e+02, 7.68579232e+06,
       1.30710520e+04, 3.87860644e-01, 3.79531278e+02, 3.24136493e+00])]  y_test [-1033.0, -917.0, -1365.0, -1098.0, -1501.0]
configNum = 6	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 6 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669251426.0
1669252364.0
938.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 4585
初始采样：config
[33.24225425823534, 0.41903819100179707, 0.28519808834567306, 307.86807274108975, 1.2257250887235753, 4.026951401870516, 4.292159533315546, 400.93033135659044, 53.916764966151476, 120.32072326054723, 7.507326214341642, 1541941999.4080212, 0.7051641348771944, 0.9237997575782454, 910.3247840624018, 0.6872356519924971, 0.5121174105832655, 1305157659.261668, 54.90311738671296, 818.5079763519418, 35.24224626676643, 2.3444568502977488, 285.4663260019945, 6303774.504408784, 5701.59054413058, 0.6400075631233778, 291.14032705643734, 3.848024743693834, -938.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 7	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 7 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669252368.0
1669253120.0
752.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config8 =================
2022年 12月 13日 星期二 02:55:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 31136 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config9 =================
2022年 12月 13日 星期二 03:29:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 57284 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config10 =================
2022年 12月 13日 星期二 04:03:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  2778 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
初始采样：config
[46.27022262388078, 0.9376992949517655, 0.7916470908732195, 358.069004848904, 2.3984205299383268, 5.242742886757952, 5.716871362146106, 507.0225236747619, 72.58312954273204, 69.85555110479, 5.81366747952884, 1080195465.757693, 0.5600015293866624, 0.08130587704362534, 204.07694739396865, 0.5043266369464668, 0.017519331302773656, 1272729658.4054675, 65.5810121187429, 789.2001795181611, 41.84733536319841, 2.8806353414193397, 216.36754983737654, 9602466.486409344, 13013.23494896455, 0.8971296521850889, 254.7339051653591, 2.467958235905055, -752.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 8	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 8 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669253123.0
1669253991.0
868.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
初始采样：config
[43.640193635638546, 0.7853850199610138, 0.49412070590026064, 251.55543892716983, 1.722608649507464, 6.782919785416837, 3.4502208158965284, 831.4251061323284, 112.3026513784818, 42.09415463601427, 8.75710093396912, 1317375618.9840856, 0.5848688436373561, 0.6551727915179163, 572.6508556332012, 0.6285800444793338, 0.6313581209053892, 1997872224.989364, 67.47706491877788, 946.8438959742559, 19.851229131661558, 2.1206725234611072, 345.59343872501324, 14489061.342155391, 9586.278710406408, 0.5332376780704398, 342.8888786632468, 3.271783643299217, -868.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 9	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 9 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669253994.0
1669254927.0
933.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
初始采样：config
[52.59162646976023, 0.27437579669901346, 0.11423407104965527, 443.17964561973326, 2.8426257601402884, 7.295487044477007, 4.750566378244245, 735.4059829677913, 98.62343123544255, 74.55770698022597, 9.729013771704572, 1896009346.7896056, 0.8160751496683897, 0.36894877091976164, 211.7229518378616, 0.8093296866908739, 0.8436143451569427, 1630724102.7477403, 52.003614326017065, 628.2244423415015, 29.165615167005374, 1.6006921580676328, 179.10770063828397, 8673071.628907215, 11996.092635445577, 0.18739221148696505, 391.22914777987927, 1.6326037080740121, -933.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
configNum = 10	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 10 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669254930.0
1669255843.0
913.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
初始采样：config
[63.24682308356239, 0.10121535496109127, 0.9081342285767234, 413.0931562394497, 2.0768883562900773, 5.875505608744015, 6.866082810574577, 662.0200960414005, 39.14878830109501, 95.2673777314843, 4.271467497211094, 2077582014.0287976, 0.8600284033362233, 0.48663789195613044, 818.3331149347048, 0.894525617121799, 0.3795647992228015, 1921015024.6505008, 44.42118941079596, 596.0200628133334, 22.794559585040925, 1.1098588084208054, 264.3201947719243, 13432816.687413283, 8348.750578747708, 0.22103290318716592, 329.91592547343663, 1.1344347086157722, -913.0]
['spark.broadcast.blockSize', 'spark.broadcast.checksum', 'spark.broadcast.compress', 'spark.default.parallelism', 'spark.executor.cores', 'spark.executor.instances', 'spark.executor.memory', 'spark.executor.memoryOverhead', 'spark.kryoserializer.buffer', 'spark.kryoserializer.buffer.max', 'spark.locality.wait', 'spark.maxRemoteBlockSizeFetchToMem', 'spark.memory.fraction', 'spark.memory.offHeap.enabled', 'spark.memory.offHeap.size', 'spark.memory.storageFraction', 'spark.rdd.compress', 'spark.reducer.maxBlocksInFlightPerAddress', 'spark.reducer.maxSizeInFlight', 'spark.scheduler.revive.interval', 'spark.shuffle.file.buffer', 'spark.shuffle.io.numConnectionsPerPeer', 'spark.shuffle.sort.bypassMergeThreshold', 'spark.sql.autoBroadcastJoinThreshold', 'spark.sql.inMemoryColumnarStorage.batchSize', 'spark.sql.inMemoryColumnarStorage.compressed', 'spark.sql.shuffle.partitions', 'spark.storage.memoryMapThreshold', 'runtime']
bestconfig
   spark.broadcast.blockSize  spark.broadcast.checksum  spark.broadcast.compress  spark.default.parallelism  spark.executor.cores  spark.executor.instances  spark.executor.memory  spark.executor.memoryOverhead  spark.kryoserializer.buffer  spark.kryoserializer.buffer.max  spark.locality.wait  spark.maxRemoteBlockSizeFetchToMem  spark.memory.fraction  spark.memory.offHeap.enabled  spark.memory.offHeap.size  spark.memory.storageFraction  spark.rdd.compress  spark.reducer.maxBlocksInFlightPerAddress  spark.reducer.maxSizeInFlight  spark.scheduler.revive.interval  spark.shuffle.file.buffer  spark.shuffle.io.numConnectionsPerPeer  spark.shuffle.sort.bypassMergeThreshold  spark.sql.autoBroadcastJoinThreshold  spark.sql.inMemoryColumnarStorage.batchSize  spark.sql.inMemoryColumnarStorage.compressed  spark.sql.shuffle.partitions  spark.storage.memoryMapThreshold
0                  46.270223                  0.937699                  0.791647                 358.069005              2.398421                  5.242743               5.716871                     507.022524                     72.58313                        69.855551             5.813667                        1.080195e+09               0.560002                      0.081306                 204.076947                      0.504327            0.017519                               1.272730e+09                      65.581012                        789.20018                  41.847335                                2.880635                                216.36755                          9.602466e+06                                 13013.234949                                       0.89713                    254.733905                          2.467958
     spark.broadcast.blockSize  spark.broadcast.checksum  spark.broadcast.compress  spark.default.parallelism  spark.executor.cores  spark.executor.instances  spark.executor.memory  spark.executor.memoryOverhead  spark.kryoserializer.buffer  spark.kryoserializer.buffer.max  spark.locality.wait  spark.maxRemoteBlockSizeFetchToMem  spark.memory.fraction  spark.memory.offHeap.enabled  spark.memory.offHeap.size  spark.memory.storageFraction  spark.rdd.compress  spark.reducer.maxBlocksInFlightPerAddress  spark.reducer.maxSizeInFlight  spark.scheduler.revive.interval  spark.shuffle.file.buffer  spark.shuffle.io.numConnectionsPerPeer  spark.shuffle.sort.bypassMergeThreshold  spark.sql.autoBroadcastJoinThreshold  spark.sql.inMemoryColumnarStorage.batchSize  spark.sql.inMemoryColumnarStorage.compressed  spark.sql.shuffle.partitions  spark.storage.memoryMapThreshold
0                         48.0                       1.0                       1.0                      349.0                   2.0                       6.0                    5.0                          606.0                         80.0                             72.0                  6.0                        1.527625e+09                   0.66                           0.0                      381.0                          0.65                 0.0                               1.458638e+09                           59.0                            712.0                       38.0                                     2.0                                    228.0                            10120135.0                                      12029.0                                           1.0                         310.0                               3.0
1                         46.0                       1.0                       1.0                      349.0                   2.0                       6.0                    5.0                          604.0                         74.0                             76.0                  6.0                        1.447918e+09                   0.63                           0.0                      361.0                          0.65                 0.0                               1.465848e+09                           62.0                            732.0                       39.0                                     2.0                                    226.0                             9919576.0                                      12091.0                                           1.0                         313.0                               3.0
2                         47.0                       1.0                       1.0                      360.0                   2.0                       5.0                    6.0                          565.0                         77.0                             67.0                  6.0                        1.531641e+09                   0.64                           0.0                      330.0                          0.63                 0.0                               1.418927e+09                           62.0                            748.0                       40.0                                     2.0                                    216.0                            10026666.0                                      12488.0                                           1.0                         307.0                               3.0
3                         46.0                       1.0                       1.0                      344.0                   2.0                       5.0                    5.0                          600.0                         75.0                             75.0                  6.0                        1.459920e+09                   0.65                           0.0                      378.0                          0.65                 0.0                               1.449936e+09                           61.0                            736.0                       38.0                                     2.0                                    219.0                             9654710.0                                      12562.0                                           1.0                         316.0                               3.0
4                         47.0                       1.0                       1.0                      361.0                   2.0                       6.0                    5.0                          567.0                         72.0                             76.0                  6.0                        1.517871e+09                   0.61                           0.0                      334.0                          0.63                 0.0                               1.438622e+09                           62.0                            775.0                       39.0                                     2.0                                    220.0                             9946276.0                                      12366.0                                           1.0                         307.0                               3.0

134                       46.0                       1.0                       1.0                      363.0                   2.0                       5.0                    6.0                          470.0                         69.0                             70.0                  5.0                        1.381579e+09                   0.55                           0.0                      132.0                          0.52                 0.0                               1.284296e+09                           70.0                            839.0                       47.0                                     3.0                                    212.0                             9145149.0                                      13925.0                                           1.0                         279.0                               2.0
135                       45.0                       1.0                       1.0                      362.0                   2.0                       5.0                    6.0                          456.0                         68.0                             71.0                  6.0                        1.377934e+09                   0.53                           0.0                      136.0                          0.54                 0.0                               1.235088e+09                           70.0                            832.0                       44.0                                     3.0                                    211.0                             9117654.0                                      13507.0                                           1.0                         275.0                               2.0
136                       45.0                       1.0                       1.0                      354.0                   2.0                       5.0                    6.0                          466.0                         69.0                             68.0                  6.0                        1.348792e+09                   0.52                           0.0                      117.0                          0.53                 0.0                               1.196781e+09                           70.0                            812.0                       46.0                                     3.0                                    208.0                             9211102.0                                      13625.0                                           1.0                         279.0                               2.0
137                       46.0                       1.0                       1.0                      347.0                   2.0                       5.0                    6.0                          479.0                         70.0                             68.0                  6.0                        1.295703e+09                   0.53                           0.0                      194.0                          0.56                 0.0                               1.257985e+09                           68.0                            791.0                       44.0                                     3.0                                    207.0                             9258010.0                                      13830.0                                           1.0                         287.0                               2.0
138                       46.0                       1.0                       1.0                      368.0                   2.0                       5.0                    6.0                          472.0                         71.0                             66.0                  6.0                        1.364066e+09                   0.53                           0.0                      143.0                          0.54                 0.0                               1.241503e+09                           68.0                            801.0                       46.0                                     3.0                                    209.0                             9361260.0                                      13636.0                                           1.0                         277.0                               3.0

[139 rows x 28 columns]================= config11 =================
2022年 12月 13日 星期二 04:37:06 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 30733 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config12 =================
2022年 12月 13日 星期二 05:11:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 56844 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config13 =================
2022年 12月 13日 星期二 05:45:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  2245 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config14 =================
2022年 12月 13日 星期二 06:19:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 30119 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config15 =================
2022年 12月 13日 星期二 06:53:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 56306 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config16 =================
2022年 12月 13日 星期二 07:27:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1770 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config17 =================
2022年 12月 13日 星期二 08:01:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29875 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False

5
configNum = 11	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 11 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669255909.0
1669256881.0
972.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
GAN采样：config
[48.0, 1.0, 1.0, 349.0, 2.0, 6.0, 5.0, 606.0, 80.0, 72.0, 6.0, 1527625088.0, 0.6600000262260437, 0.0, 381.0, 0.6499999761581421, 0.0, 1458638464.0, 59.0, 712.0, 38.0, 2.0, 228.0, 10120135.0, 12029.0, 1.0, 310.0, 3.0, -972.0]
configNum = 12	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 12 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669256936.0
1669258155.0
1219.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
GAN采样：config
[46.0, 1.0, 1.0, 349.0, 2.0, 6.0, 5.0, 604.0, 74.0, 76.0, 6.0, 1447917696.0, 0.6299999952316284, 0.0, 361.0, 0.6499999761581421, 0.0, 1465848192.0, 62.0, 732.0, 39.0, 2.0, 226.0, 9919576.0, 12091.0, 1.0, 313.0, 3.0, -1219.0]
configNum = 13	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 13 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669258213.0
1669259126.0
913.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
GAN采样：config
[47.0, 1.0, 1.0, 360.0, 2.0, 5.0, 6.0, 565.0, 77.0, 67.0, 6.0, 1531640576.0, 0.6399999856948853, 0.0, 330.0, 0.6299999952316284, 0.0, 1418927104.0, 62.0, 748.0, 40.0, 2.0, 216.0, 10026666.0, 12488.0, 1.0, 307.0, 3.0, -913.0]
configNum = 14	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 14 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669259181.0
1669260379.0
1198.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
GAN采样：config
[46.0, 1.0, 1.0, 344.0, 2.0, 5.0, 5.0, 600.0, 75.0, 75.0, 6.0, 1459920128.0, 0.6499999761581421, 0.0, 378.0, 0.6499999761581421, 0.0, 1449936384.0, 61.0, 736.0, 38.0, 2.0, 219.0, 9654710.0, 12562.0, 1.0, 316.0, 3.0, -1198.0]
configNum = 15	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 15 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669260433.0
1669261190.0
757.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
GAN采样：config
[47.0, 1.0, 1.0, 361.0, 2.0, 6.0, 5.0, 567.0, 72.0, 76.0, 6.0, 1517871232.0, 0.6100000143051147, 0.0, 334.0, 0.6299999952316284, 0.0, 1438622336.0, 62.0, 775.0, 39.0, 2.0, 220.0, 9946276.0, 12366.0, 1.0, 307.0, 3.0, -757.0]
训练集长度= 15
accuracy= 1.5158362009019256e-07
所有模型的可信度  [1.5158362009019256e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1025.13333333 -1025.13333333 -1025.13333333]  max_stds [206.83805796 206.83805796 206.83805796]
所有模型的可信度所占权重  [1.0]
三个函数的累计增益为[0.09333110169695491, 0.09333110169695491, 0.09333110169695491]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 1 1 2 0 0 1 1 2 1 2 0 1 1 2 0 2 0 1 2 0 2 1 0 0 0 0 2 1 2 0 0 1 1 1 0
 0 0 2 1 1 0 1 2 2 2 2 0 2 2 2 2 0 1 0 0 1 2 1 1 1 0 0 1 0 0 1 2 1 2 2 1 0
 0 0 1 2 2 0 2 0 2 1 2 2 2 0 1 0 2 2 2 2 0 1 2 0 1 0]
每个概率被转中的次数, count: [35 31 34]
choose which one? [0]
ys [9.01350252 9.01350252 9.01350252 ... 9.01350252 9.01350252 9.01350252]
1 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1743]
configNum = 16	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 16 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669261245.0
1669262187.0
942.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 63.642379598114815, 'spark.broadcast.checksum': 0.6833833149660121, 'spark.broadcast.compress': 0.044204903653854655, 'spark.default.parallelism': 489.3480893210861, 'spark.executor.cores': 1.636888856989743, 'spark.executor.instances': 6.508198617103338, 'spark.executor.memory': 4.846498099791049, 'spark.executor.memoryOverhead': 763.4943170501697, 'spark.kryoserializer.buffer': 81.10685711150893, 'spark.kryoserializer.buffer.max': 42.94791581474959, 'spark.locality.wait': 4.27354487333601, 'spark.maxRemoteBlockSizeFetchToMem': 1076495361.1973305, 'spark.memory.fraction': 0.6110498644689177, 'spark.memory.offHeap.enabled': 0.06385701506647523, 'spark.memory.offHeap.size': 719.162922429832, 'spark.memory.storageFraction': 0.6825996175734509, 'spark.rdd.compress': 0.15965377938787306, 'spark.reducer.maxBlocksInFlightPerAddress': 1236197853.2430248, 'spark.reducer.maxSizeInFlight': 58.76476555072354, 'spark.scheduler.revive.interval': 609.5829238166115, 'spark.shuffle.file.buffer': 22.22862659586087, 'spark.shuffle.io.numConnectionsPerPeer': 1.2247491974293292, 'spark.shuffle.sort.bypassMergeThreshold': 251.36849645523193, 'spark.sql.autoBroadcastJoinThreshold': 8823897.97576982, 'spark.sql.inMemoryColumnarStorage.batchSize': 7798.434152142514, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9924923647656788, 'spark.sql.shuffle.partitions': 304.2143281132007, 'spark.storage.memoryMapThreshold': 1.7141845324568585}
target = -942.0
训练集长度= 16
accuracy= 1.5385639140433498e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1019.9375 -1019.9375 -1019.9375]  max_stds [201.2785597 201.2785597 201.2785597]
所有模型的可信度所占权重  [0.49627951278710725, 0.5037204872128928]
三个函数的累计增益为[0.13857808626168727, 0.13857808626168727, 0.13857808626168727]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 0 1 0 0 2 2 2 2 2 0 0 0 0 2 1 2 2 0 1 2 1 2 2 2 0 0 2 2 2 2 1 0 2 2 0
 0 0 0 1 1 2 2 1 0 0 0 1 1 0 1 2 0 1 1 1 0 2 2 1 0 1 2 0 0 1 2 0 1 0 1 1 2
 1 1 2 0 0 1 1 0 1 0 0 1 2 0 0 2 2 0 2 0 1 1 2 1 2 0]
每个概率被转中的次数, count: [37 30 33]
choose which one? [0]
ys [8.5728822 8.5728822 8.5728822 ... 8.5728822 8.5728822 8.5728822]
2 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2660]
configNum = 17	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 17 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669262247.0
1669263567.0
1320.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config18 =================
2022年 12月 13日 星期二 08:35:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 56117 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config19 =================
2022年 12月 13日 星期二 09:09:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1527 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 57.918964130791736, 'spark.broadcast.checksum': 0.07299764729665581, 'spark.broadcast.compress': 0.2953526365443422, 'spark.default.parallelism': 253.87826340183733, 'spark.executor.cores': 2.7244345689861813, 'spark.executor.instances': 7.393464618651197, 'spark.executor.memory': 6.288194865726702, 'spark.executor.memoryOverhead': 560.6871805415368, 'spark.kryoserializer.buffer': 67.86406564111479, 'spark.kryoserializer.buffer.max': 32.99490320593381, 'spark.locality.wait': 4.23460625337316, 'spark.maxRemoteBlockSizeFetchToMem': 1518679848.7978897, 'spark.memory.fraction': 0.5352029301138275, 'spark.memory.offHeap.enabled': 0.20911977247225977, 'spark.memory.offHeap.size': 389.40267713537855, 'spark.memory.storageFraction': 0.6004647297610027, 'spark.rdd.compress': 0.023193820666232212, 'spark.reducer.maxBlocksInFlightPerAddress': 1103393691.693391, 'spark.reducer.maxSizeInFlight': 66.16062389415471, 'spark.scheduler.revive.interval': 623.3671493872469, 'spark.shuffle.file.buffer': 45.18632841177437, 'spark.shuffle.io.numConnectionsPerPeer': 2.4359413256577866, 'spark.shuffle.sort.bypassMergeThreshold': 191.14398513306642, 'spark.sql.autoBroadcastJoinThreshold': 11061269.213698953, 'spark.sql.inMemoryColumnarStorage.batchSize': 10049.644152320838, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9409684440519983, 'spark.sql.shuffle.partitions': 323.9574595744084, 'spark.storage.memoryMapThreshold': 3.526760659598591}
target = -1320.0
训练集长度= 17
accuracy= 1.4791223550509452e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1037.58823529 -1037.58823529 -1037.58823529]  max_stds [207.64082644 207.64082644 207.64082644]
所有模型的可信度所占权重  [0.334361682540241, 0.3393749395146667, 0.32626337794509225]
三个函数的累计增益为[0.14605308933138506, 0.14605308933138506, 0.14605308933138506]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 2 2 1 1 2 2 1 2 0 1 0 2 1 2 1 1 2 1 1 2 0 2 2 1 2 0 1 1 0 2 1 0 0 1 2
 2 2 0 2 1 2 1 1 2 0 1 2 0 1 0 2 0 2 1 2 1 2 2 1 0 2 2 0 2 2 1 2 1 1 0 1 0
 2 2 2 1 1 1 1 2 2 2 0 1 2 2 1 2 0 0 0 2 0 0 1 2 2 0]
每个概率被转中的次数, count: [24 33 43]
choose which one? [2]
ys [-502.7054664 -502.7054664 -502.7054664 ... -502.7054664 -502.7054664
 -502.7054664]
3 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1007]
configNum = 18	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 18 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669263618.0
1669264686.0
1068.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.41537009895284, 'spark.broadcast.checksum': 0.5708075440706636, 'spark.broadcast.compress': 0.39904163290009587, 'spark.default.parallelism': 237.5873738336909, 'spark.executor.cores': 1.1082518387236167, 'spark.executor.instances': 4.5823344764010185, 'spark.executor.memory': 5.490679462394041, 'spark.executor.memoryOverhead': 526.1089297666949, 'spark.kryoserializer.buffer': 91.13963010478594, 'spark.kryoserializer.buffer.max': 52.94547380907285, 'spark.locality.wait': 4.257951983711996, 'spark.maxRemoteBlockSizeFetchToMem': 1519197166.9219058, 'spark.memory.fraction': 0.502116629204427, 'spark.memory.offHeap.enabled': 0.37706386446165663, 'spark.memory.offHeap.size': 689.148521720471, 'spark.memory.storageFraction': 0.6121357676392393, 'spark.rdd.compress': 0.17666798651398974, 'spark.reducer.maxBlocksInFlightPerAddress': 1500874884.3990543, 'spark.reducer.maxSizeInFlight': 69.10147052134874, 'spark.scheduler.revive.interval': 772.8482711462913, 'spark.shuffle.file.buffer': 42.925918233073645, 'spark.shuffle.io.numConnectionsPerPeer': 2.615998365847754, 'spark.shuffle.sort.bypassMergeThreshold': 166.70611141959913, 'spark.sql.autoBroadcastJoinThreshold': 12048841.812170409, 'spark.sql.inMemoryColumnarStorage.batchSize': 13308.46357379598, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7942607846490561, 'spark.sql.shuffle.partitions': 333.32323640432435, 'spark.storage.memoryMapThreshold': 1.4069214300358877}
target = -1068.0
训练集长度= 18
accuracy= 1.4782741940491555e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1039.27777778 -1039.27777778 -1039.27777778]  max_stds [201.91081792 201.91081792 201.91081792]
所有模型的可信度所占权重  [0.2521436245453301, 0.25592414381627476, 0.24603665721049758, 0.24589557442789747]
三个函数的累计增益为[0.144591113519334, 0.144591113519334, 0.144591113519334]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 2 1 2 1 1 0 0 1 2 0 1 2 1 2 1 1 1 2 0 1 1 0 2 1 0 1 0 1 1 0 2 1 2 0
 2 0 0 2 0 1 1 0 0 0 1 2 0 0 0 1 0 1 2 1 1 0 2 0 1 0 0 1 2 2 0 2 0 0 2 0 2
 0 2 1 2 1 2 0 2 1 0 1 0 1 0 2 1 0 0 2 1 0 1 0 1 2 0]
每个概率被转中的次数, count: [38 35 27]
choose which one? [0]
ys [7.03977283 7.03977283 7.03977283 ... 7.03977283 7.03977283 7.03977283]
4 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3751]
configNum = 19	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 19 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669264730.0
1669265613.0
883.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 39.89029144322957, 'spark.broadcast.checksum': 0.07485113405171584, 'spark.broadcast.compress': 0.33737829069161285, 'spark.default.parallelism': 327.81992530382564, 'spark.executor.cores': 1.9769980577033637, 'spark.executor.instances': 4.256779362892832, 'spark.executor.memory': 4.318546935522167, 'spark.executor.memoryOverhead': 699.6091462639298, 'spark.kryoserializer.buffer': 84.5761101324483, 'spark.kryoserializer.buffer.max': 68.81559067287628, 'spark.locality.wait': 5.793598837594967, 'spark.maxRemoteBlockSizeFetchToMem': 1332313269.1671116, 'spark.memory.fraction': 0.5436587757999934, 'spark.memory.offHeap.enabled': 0.2945590584923259, 'spark.memory.offHeap.size': 415.578177005372, 'spark.memory.storageFraction': 0.591007916920754, 'spark.rdd.compress': 0.9298358837802566, 'spark.reducer.maxBlocksInFlightPerAddress': 1548734245.7323678, 'spark.reducer.maxSizeInFlight': 54.287367918248265, 'spark.scheduler.revive.interval': 602.5051492486401, 'spark.shuffle.file.buffer': 16.395611668766648, 'spark.shuffle.io.numConnectionsPerPeer': 1.3654285114499598, 'spark.shuffle.sort.bypassMergeThreshold': 306.96041584143876, 'spark.sql.autoBroadcastJoinThreshold': 7899381.983754403, 'spark.sql.inMemoryColumnarStorage.batchSize': 10849.285542460773, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8614797240592361, 'spark.sql.shuffle.partitions': 295.8658818411557, 'spark.storage.memoryMapThreshold': 2.4226342846576263}
target = -883.0
训练集长度= 19
accuracy= 1.4899438937678347e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1031.05263158 -1031.05263158 -1031.05263158]  max_stds [199.5997241 199.5997241 199.5997241]
所有模型的可信度所占权重  [0.20206459943794672, 0.2050942580839996, 0.1971705557732745, 0.19705749387847113, 0.19861309282630799]
三个函数的累计增益为[0.150267437147581, 0.150267437147581, 0.150267437147581]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config20 =================
2022年 12月 13日 星期二 09:43:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29555 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config21 =================
2022年 12月 13日 星期二 10:17:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55730 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config22 =================
2022年 12月 13日 星期二 10:51:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:   970 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[2 0 2 1 2 1 0 0 2 0 0 0 1 0 1 2 0 1 2 2 2 1 1 1 2 1 0 2 1 0 2 2 1 0 1 2 1
 1 2 2 2 0 0 0 2 0 0 2 1 1 1 0 2 1 2 2 0 2 0 1 0 2 2 0 2 0 0 2 1 0 0 2 1 0
 2 1 2 0 1 1 0 1 2 1 1 1 1 2 1 0 1 0 1 0 1 0 0 2 2 2]
每个概率被转中的次数, count: [33 33 34]
choose which one? [2]
ys [-516.88374229 -516.88374229 -516.88374229 ... -516.88374229 -516.88374229
 -516.88374229]
5 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3586]
configNum = 20	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 20 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669265666.0
1669266704.0
1038.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 56.63004827970467, 'spark.broadcast.checksum': 0.21173670279244095, 'spark.broadcast.compress': 0.23652329018492535, 'spark.default.parallelism': 432.45501673789647, 'spark.executor.cores': 2.4238814020255575, 'spark.executor.instances': 7.356865143412227, 'spark.executor.memory': 3.9429255845156868, 'spark.executor.memoryOverhead': 822.5969699643163, 'spark.kryoserializer.buffer': 123.25562944276086, 'spark.kryoserializer.buffer.max': 58.90524304135986, 'spark.locality.wait': 9.698137717143489, 'spark.maxRemoteBlockSizeFetchToMem': 1759410527.1478055, 'spark.memory.fraction': 0.5149063624568095, 'spark.memory.offHeap.enabled': 0.005260187129330296, 'spark.memory.offHeap.size': 37.30915673854395, 'spark.memory.storageFraction': 0.8437766605784103, 'spark.rdd.compress': 0.04581640958403932, 'spark.reducer.maxBlocksInFlightPerAddress': 2060754901.443162, 'spark.reducer.maxSizeInFlight': 48.50992909079969, 'spark.scheduler.revive.interval': 825.9622054909103, 'spark.shuffle.file.buffer': 43.22288210840539, 'spark.shuffle.io.numConnectionsPerPeer': 2.0163705445949125, 'spark.shuffle.sort.bypassMergeThreshold': 233.64971080817708, 'spark.sql.autoBroadcastJoinThreshold': 7214430.661805885, 'spark.sql.inMemoryColumnarStorage.batchSize': 11760.534329262518, 'spark.sql.inMemoryColumnarStorage.compressed': 0.570643997726469, 'spark.sql.shuffle.partitions': 255.33850920008408, 'spark.storage.memoryMapThreshold': 2.5519733218725547}
target = -1038.0
训练集长度= 20
accuracy= 1.4884244278301467e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1031.4 -1031.4 -1031.4]  max_stds [194.55163839 194.55163839 194.55163839]
所有模型的可信度所占权重  [0.16861049861961444, 0.17113856269604893, 0.16452671974463165, 0.16443237653701043, 0.16573042832330298, 0.16556141407939148]
三个函数的累计增益为[0.14666196236726908, 0.14666196236726908, 0.14666196236726908]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 0 1 2 0 2 2 0 1 0 1 1 0 0 0 2 1 2 2 0 2 2 2 1 0 0 2 1 0 2 0 1 2 2 2 1
 1 0 1 2 1 0 2 0 0 2 2 2 0 0 2 2 2 2 2 1 1 2 1 2 2 2 2 0 1 0 1 1 1 0 0 1 2
 1 2 2 1 1 2 0 1 0 0 2 0 2 1 0 0 2 1 2 0 1 2 1 1 1 1]
每个概率被转中的次数, count: [29 33 38]
choose which one? [2]
ys [-530.23497951 -530.23497951 -530.23497951 ... -530.23497951 -530.23497951
 -530.23497951]
6 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9475]
configNum = 21	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 21 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669266753.0
1669267706.0
953.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 34.08973030187869, 'spark.broadcast.checksum': 0.3773207922842522, 'spark.broadcast.compress': 0.6200273730594729, 'spark.default.parallelism': 319.19360725277176, 'spark.executor.cores': 1.7954651674302209, 'spark.executor.instances': 4.333325461518298, 'spark.executor.memory': 6.958488186363166, 'spark.executor.memoryOverhead': 489.59440186337457, 'spark.kryoserializer.buffer': 40.07339754387745, 'spark.kryoserializer.buffer.max': 57.64589689873663, 'spark.locality.wait': 6.195704141827575, 'spark.maxRemoteBlockSizeFetchToMem': 1402377267.5014791, 'spark.memory.fraction': 0.5592717978082399, 'spark.memory.offHeap.enabled': 0.7117291739194092, 'spark.memory.offHeap.size': 752.9701390700615, 'spark.memory.storageFraction': 0.5252541373375843, 'spark.rdd.compress': 0.18678204196070747, 'spark.reducer.maxBlocksInFlightPerAddress': 1326073291.950753, 'spark.reducer.maxSizeInFlight': 71.43352608385591, 'spark.scheduler.revive.interval': 753.4389013103157, 'spark.shuffle.file.buffer': 30.045181189088314, 'spark.shuffle.io.numConnectionsPerPeer': 1.7980120405852638, 'spark.shuffle.sort.bypassMergeThreshold': 219.25209071844893, 'spark.sql.autoBroadcastJoinThreshold': 13707922.872778244, 'spark.sql.inMemoryColumnarStorage.batchSize': 14424.617042059579, 'spark.sql.inMemoryColumnarStorage.compressed': 0.3960821661023838, 'spark.sql.shuffle.partitions': 376.8814609588257, 'spark.storage.memoryMapThreshold': 1.065887234704359}
target = -953.0
训练集长度= 21
accuracy= 1.5047548460504872e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1027.66666667 -1027.66666667 -1027.66666667]  max_stds [190.59564112 190.59564112 190.59564112]
所有模型的可信度所占权重  [0.14443523392377117, 0.14660082580116582, 0.14093698463366156, 0.14085616829438583, 0.14196810625159037, 0.14182332516111465, 0.14337935593431064]
三个函数的累计增益为[0.1458360637815253, 0.1458360637815253, 0.1458360637815253]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 1 1 0 1 1 1 1 1 1 1 1 2 2 2 0 1 0 1 0 0 2 2 0 1 1 0 1 0 0 1 1 0 1 0
 0 0 0 2 0 1 2 2 1 0 2 1 0 0 1 2 1 0 1 0 1 0 0 0 2 1 2 1 1 2 2 0 1 0 0 2 0
 0 2 1 1 2 0 1 0 2 1 1 1 0 1 2 0 1 1 0 0 2 2 1 1 2 2]
每个概率被转中的次数, count: [35 40 25]
choose which one? [1]
ys [0.07404051 0.07404051 0.07404051 ... 0.07404051 0.07404051 0.07404051]
7 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3102]
configNum = 22	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 22 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669267755.0
1669268798.0
1043.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config23 =================
2022年 12月 13日 星期二 11:25:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29547 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config24 =================
2022年 12月 13日 星期二 11:59:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55851 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 58.461553822473306, 'spark.broadcast.checksum': 0.15638854164398386, 'spark.broadcast.compress': 0.18091406024612622, 'spark.default.parallelism': 406.1174759221336, 'spark.executor.cores': 2.863301574877932, 'spark.executor.instances': 6.846786634125557, 'spark.executor.memory': 6.077582663949151, 'spark.executor.memoryOverhead': 802.6857262418944, 'spark.kryoserializer.buffer': 86.27918223229497, 'spark.kryoserializer.buffer.max': 113.40805576859015, 'spark.locality.wait': 9.14848820358033, 'spark.maxRemoteBlockSizeFetchToMem': 2123557492.4800644, 'spark.memory.fraction': 0.5541576889004994, 'spark.memory.offHeap.enabled': 0.18298111668157757, 'spark.memory.offHeap.size': 26.45113259336574, 'spark.memory.storageFraction': 0.8756395322764916, 'spark.rdd.compress': 0.13012109861287768, 'spark.reducer.maxBlocksInFlightPerAddress': 1330352822.748529, 'spark.reducer.maxSizeInFlight': 57.6457870269746, 'spark.scheduler.revive.interval': 508.30197791345336, 'spark.shuffle.file.buffer': 47.35220689226626, 'spark.shuffle.io.numConnectionsPerPeer': 2.2235621553314546, 'spark.shuffle.sort.bypassMergeThreshold': 271.310698757605, 'spark.sql.autoBroadcastJoinThreshold': 14538853.68395826, 'spark.sql.inMemoryColumnarStorage.batchSize': 12994.603069177858, 'spark.sql.inMemoryColumnarStorage.compressed': 0.6707204632044357, 'spark.sql.shuffle.partitions': 329.6897968656866, 'spark.storage.memoryMapThreshold': 3.8819882524123415}
target = -1043.0
训练集长度= 22
accuracy= 1.5017061479733565e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1028.36363636 -1028.36363636 -1028.36363636]  max_stds [186.24093522 186.24093522 186.24093522]
所有模型的可信度所占权重  [0.12635521049594117, 0.12824971926698603, 0.12329486286876618, 0.12322416290669123, 0.12419691138934444, 0.1240702536157118, 0.12543150454143198, 0.1251773749151272]
三个函数的累计增益为[0.1409937869972413, 0.1409937869972413, 0.1409937869972413]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 0 0 1 2 2 2 0 1 0 1 0 1 2 0 0 2 1 0 1 0 0 1 2 0 1 2 0 1 1 0 1 1
 1 2 2 2 2 0 0 0 0 2 1 0 1 0 0 0 1 0 2 2 0 0 1 1 2 1 1 0 2 0 1 2 2 1 0 1 0
 1 2 1 2 2 1 2 2 0 0 0 2 1 0 1 0 2 2 0 1 0 1 1 1 0 1]
每个概率被转中的次数, count: [37 35 28]
choose which one? [0]
ys [5.66154708 5.66154708 5.66154708 ... 5.66154708 5.66154708 5.66154708]
8 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [455]
configNum = 23	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 23 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669268852.0
1669269825.0
973.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 41.54740492563367, 'spark.broadcast.checksum': 0.5021664538824397, 'spark.broadcast.compress': 0.6313143000438856, 'spark.default.parallelism': 496.38594581431164, 'spark.executor.cores': 2.4515279740704425, 'spark.executor.instances': 6.524367681680037, 'spark.executor.memory': 6.413008923989196, 'spark.executor.memoryOverhead': 857.4179197404724, 'spark.kryoserializer.buffer': 44.241996374483634, 'spark.kryoserializer.buffer.max': 96.21486202999711, 'spark.locality.wait': 6.002460460632088, 'spark.maxRemoteBlockSizeFetchToMem': 1154751596.7488787, 'spark.memory.fraction': 0.5692865223242302, 'spark.memory.offHeap.enabled': 0.021618352627137072, 'spark.memory.offHeap.size': 317.45744240030217, 'spark.memory.storageFraction': 0.7470607163813584, 'spark.rdd.compress': 0.720649265114548, 'spark.reducer.maxBlocksInFlightPerAddress': 1408767629.7746034, 'spark.reducer.maxSizeInFlight': 64.76889488494761, 'spark.scheduler.revive.interval': 619.4270953858043, 'spark.shuffle.file.buffer': 36.36651581287862, 'spark.shuffle.io.numConnectionsPerPeer': 2.4428504637009043, 'spark.shuffle.sort.bypassMergeThreshold': 321.9650845677153, 'spark.sql.autoBroadcastJoinThreshold': 8427494.416982664, 'spark.sql.inMemoryColumnarStorage.batchSize': 14025.76727204132, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7853341648890745, 'spark.sql.shuffle.partitions': 353.19884316938953, 'spark.storage.memoryMapThreshold': 2.2178204573603053}
target = -973.0
训练集长度= 23
accuracy= 1.5122353943204422e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1025.95652174 -1025.95652174 -1025.95652174]  max_stds [182.49680837 182.49680837 182.49680837]
所有模型的可信度所占权重  [0.11221050826835675, 0.11389293823134299, 0.10949274806380867, 0.10942996253523533, 0.11029381770375088, 0.11018133850246054, 0.11139020561333236, 0.11116452426294104, 0.11194395681877144]
三个函数的累计增益为[0.1383802642680293, 0.1383802642680293, 0.1383802642680293]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 2 1 2 0 1 0 0 0 2 1 0 2 0 2 1 1 1 1 2 1 0 0 2 1 0 0 1 2 0 2 0 1 2 2
 2 1 0 2 0 0 1 2 0 0 0 1 2 1 2 0 2 2 0 1 0 1 0 1 1 2 1 2 1 2 0 2 0 0 2 2 0
 1 1 2 1 2 1 2 0 0 1 0 1 2 0 0 0 2 1 1 2 2 2 2 2 0 0]
每个概率被转中的次数, count: [34 30 36]
choose which one? [2]
ys [-555.84474337 -555.84474337 -555.84474337 ... -555.84474337 -555.84474337
 -555.84474337]
9 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9282]
configNum = 24	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 24 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669269879.0
1669270862.0
983.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 37.90442809802529, 'spark.broadcast.checksum': 0.4357014192259471, 'spark.broadcast.compress': 0.46308876994322035, 'spark.default.parallelism': 405.68571830008574, 'spark.executor.cores': 2.313243894505449, 'spark.executor.instances': 6.404606447298331, 'spark.executor.memory': 5.959106629052998, 'spark.executor.memoryOverhead': 562.2438623555128, 'spark.kryoserializer.buffer': 81.65427517660031, 'spark.kryoserializer.buffer.max': 40.01211452437009, 'spark.locality.wait': 7.499443577575245, 'spark.maxRemoteBlockSizeFetchToMem': 1285329605.552967, 'spark.memory.fraction': 0.6127846569234535, 'spark.memory.offHeap.enabled': 0.5614573565090062, 'spark.memory.offHeap.size': 228.74105437355126, 'spark.memory.storageFraction': 0.5366302443420853, 'spark.rdd.compress': 0.2030172361730539, 'spark.reducer.maxBlocksInFlightPerAddress': 1169882497.673296, 'spark.reducer.maxSizeInFlight': 47.30703763472442, 'spark.scheduler.revive.interval': 811.4155563315612, 'spark.shuffle.file.buffer': 16.218715538859517, 'spark.shuffle.io.numConnectionsPerPeer': 2.997738346068857, 'spark.shuffle.sort.bypassMergeThreshold': 323.60419540506155, 'spark.sql.autoBroadcastJoinThreshold': 14463299.992459293, 'spark.sql.inMemoryColumnarStorage.batchSize': 7753.649625949995, 'spark.sql.inMemoryColumnarStorage.compressed': 0.24030560448142357, 'spark.sql.shuffle.partitions': 305.3890141890272, 'spark.storage.memoryMapThreshold': 1.0600297960577674}
target = -983.0
训练集长度= 24
accuracy= 1.520064612566489e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means ================= config25 =================
2022年 12月 13日 星期二 12:33:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1193 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config26 =================
2022年 12月 13日 星期二 13:07:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 30109 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config27 =================
2022年 12月 13日 星期二 13:41:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 56403 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[-1024.16666667 -1024.16666667 -1024.16666667]  max_stds [178.86043597 178.86043597 178.86043597]
所有模型的可信度所占权重  [0.1008612459904382, 0.10237351061678329, 0.098418367112478, 0.0983619318753527, 0.09913841448822336, 0.09903731172552112, 0.10012391087671468, 0.09992105552431903, 0.1006216542468429, 0.1011425975433267]
三个函数的累计增益为[0.13525637642042, 0.13525637642042, 0.13525637642042]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 0 0 2 0 1 1 1 1 1 0 1 1 2 0 1 0 2 0 1 2 0 0 2 0 0 0 0 0 1 0 2 2 2 2
 0 1 1 1 1 1 1 1 0 2 0 2 1 0 1 0 1 1 0 0 1 2 1 1 2 0 2 0 2 2 2 1 0 2 2 1 1
 2 0 2 0 2 0 0 0 1 1 1 1 0 2 1 2 0 1 0 2 2 1 0 1 1 0]
每个概率被转中的次数, count: [37 36 27]
choose which one? [0]
ys [4.98826113 4.98826113 4.98826113 ... 4.98826113 4.98826113 4.98826113]
10 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6714]
configNum = 25	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 25 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669270911.0
1669271894.0
983.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 54.236342176681774, 'spark.broadcast.checksum': 0.8290710261770516, 'spark.broadcast.compress': 0.6850366338306391, 'spark.default.parallelism': 364.791057423961, 'spark.executor.cores': 2.190800515266175, 'spark.executor.instances': 5.87245686127646, 'spark.executor.memory': 3.379239996851836, 'spark.executor.memoryOverhead': 505.1346798551923, 'spark.kryoserializer.buffer': 61.20581668682323, 'spark.kryoserializer.buffer.max': 71.57567095815817, 'spark.locality.wait': 5.591008210339044, 'spark.maxRemoteBlockSizeFetchToMem': 1291618688.8042524, 'spark.memory.fraction': 0.76989134707799, 'spark.memory.offHeap.enabled': 0.15097959852311627, 'spark.memory.offHeap.size': 17.61318002553412, 'spark.memory.storageFraction': 0.7860535880497963, 'spark.rdd.compress': 0.8789097105314004, 'spark.reducer.maxBlocksInFlightPerAddress': 1862034652.468445, 'spark.reducer.maxSizeInFlight': 62.01871886905927, 'spark.scheduler.revive.interval': 971.8028418809854, 'spark.shuffle.file.buffer': 38.99745324325323, 'spark.shuffle.io.numConnectionsPerPeer': 2.7452875947960473, 'spark.shuffle.sort.bypassMergeThreshold': 179.2171835744741, 'spark.sql.autoBroadcastJoinThreshold': 5811664.1986705875, 'spark.sql.inMemoryColumnarStorage.batchSize': 5619.144634395725, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9697098752908814, 'spark.sql.shuffle.partitions': 359.1583093121439, 'spark.storage.memoryMapThreshold': 2.21927323649918}
target = -983.0
训练集长度= 25
accuracy= 1.5272674934089617e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1022.52 -1022.52 -1022.52]  max_stds [175.43229349 175.43229349 175.43229349]
所有模型的可信度所占权重  [0.09155704798548323, 0.09292980997747916, 0.08933951858203594, 0.08928828935456792, 0.08999314338594912, 0.08990136710056523, 0.09088773019423795, 0.09070358774139574, 0.09133955798176702, 0.09181244556039564, 0.09224750213612302]
三个函数的累计增益为[0.13208406779048412, 0.13208406779048412, 0.13208406779048412]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 0 0 1 1 1 2 1 0 1 0 1 2 2 1 1 1 2 0 0 1 1 0 1 2 2 1 0 2 0 2 2 0 1 0 1
 1 0 0 2 0 2 2 0 0 1 0 2 2 1 0 2 0 0 2 0 2 2 1 1 1 1 0 1 2 2 1 2 2 2 0 0 0
 1 0 1 1 2 1 1 2 1 1 1 0 2 2 2 2 2 1 1 2 1 2 0 0 0 1]
每个概率被转中的次数, count: [32 36 32]
choose which one? [1]
ys [0.06153444 0.06153444 0.06153444 ... 0.06153444 0.06153444 0.06153444]
11 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2549]
configNum = 26	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 26 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669271948.0
1669272956.0
1008.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 35.304823932976355, 'spark.broadcast.checksum': 0.11764733696645269, 'spark.broadcast.compress': 0.8437221133527798, 'spark.default.parallelism': 319.8296175393352, 'spark.executor.cores': 2.656762636185035, 'spark.executor.instances': 7.754335351045099, 'spark.executor.memory': 6.017443178340114, 'spark.executor.memoryOverhead': 413.4600678420759, 'spark.kryoserializer.buffer': 57.765995421446505, 'spark.kryoserializer.buffer.max': 72.56760210633303, 'spark.locality.wait': 5.305463770917223, 'spark.maxRemoteBlockSizeFetchToMem': 1534720440.9700475, 'spark.memory.fraction': 0.7729385778844133, 'spark.memory.offHeap.enabled': 0.6177558565833918, 'spark.memory.offHeap.size': 351.5884732139584, 'spark.memory.storageFraction': 0.5459950580603073, 'spark.rdd.compress': 0.9549750703976861, 'spark.reducer.maxBlocksInFlightPerAddress': 1672547052.7925432, 'spark.reducer.maxSizeInFlight': 54.02518445175163, 'spark.scheduler.revive.interval': 528.8538906362643, 'spark.shuffle.file.buffer': 32.08519405572589, 'spark.shuffle.io.numConnectionsPerPeer': 1.011407364388909, 'spark.shuffle.sort.bypassMergeThreshold': 163.37803462542843, 'spark.sql.autoBroadcastJoinThreshold': 13530525.048134714, 'spark.sql.inMemoryColumnarStorage.batchSize': 8543.602893557392, 'spark.sql.inMemoryColumnarStorage.compressed': 0.47031759496757597, 'spark.sql.shuffle.partitions': 370.2911073966682, 'spark.storage.memoryMapThreshold': 1.7793563146408993}
target = -1008.0
训练集长度= 26
accuracy= 1.529710326665553e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1021.96153846 -1021.96153846 -1021.96153846]  max_stds [172.04817768 172.04817768 172.04817768]
所有模型的可信度所占权重  [0.08381312966766737, 0.08506978310254266, 0.08178315946305285, 0.0817362632166248, 0.08238150051543218, 0.08229748669152082, 0.08320042294480086, 0.08303185530727901, 0.08361403502357423, 0.08404692565097971, 0.08444518503129517, 0.08458025338523034]
三个函数的累计增益为[0.1280989381513329, 0.1280989381513329, 0.1280989381513329]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 2 2 0 1 1 0 0 2 0 1 1 1 1 0 1 2 2 2 2 2 0 0 1 2 2 1 2 0 1 1 2 2 1 2 2
 0 0 0 0 2 1 1 0 1 0 0 0 1 2 2 0 2 0 0 1 2 0 0 2 0 1 2 2 2 2 1 1 1 2 2 1 1
 1 1 0 1 0 0 1 2 1 0 1 2 0 2 1 2 1 2 0 1 1 2 0 1 1 1]
每个概率被转中的次数, count: [30 36 34]
choose which one? [1]
ys [0.05831182 0.05831182 0.05831182 ... 0.05831182 0.05831182 0.05831182]
12 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5554]
configNum = 27	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 27 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669273010.0
1669273913.0
903.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config28 =================
2022年 12月 13日 星期二 14:15:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1998 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config29 =================
2022年 12月 13日 星期二 14:49:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29900 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 33.086209099022184, 'spark.broadcast.checksum': 0.9428799380866189, 'spark.broadcast.compress': 0.3927423762337483, 'spark.default.parallelism': 495.2346319686302, 'spark.executor.cores': 2.430917482924915, 'spark.executor.instances': 7.031272764319242, 'spark.executor.memory': 3.4178927013091287, 'spark.executor.memoryOverhead': 834.0158585934662, 'spark.kryoserializer.buffer': 125.55303239303183, 'spark.kryoserializer.buffer.max': 115.49825551634021, 'spark.locality.wait': 6.432987138717456, 'spark.maxRemoteBlockSizeFetchToMem': 1556893353.8638961, 'spark.memory.fraction': 0.6871390816579462, 'spark.memory.offHeap.enabled': 0.33087193454384967, 'spark.memory.offHeap.size': 332.92273360591105, 'spark.memory.storageFraction': 0.7356909868764762, 'spark.rdd.compress': 0.1408681231198321, 'spark.reducer.maxBlocksInFlightPerAddress': 1845835896.2149482, 'spark.reducer.maxSizeInFlight': 58.07182042210493, 'spark.scheduler.revive.interval': 770.8561128453346, 'spark.shuffle.file.buffer': 21.43218771977965, 'spark.shuffle.io.numConnectionsPerPeer': 2.8523882554320785, 'spark.shuffle.sort.bypassMergeThreshold': 232.961738488154, 'spark.sql.autoBroadcastJoinThreshold': 13585990.940310284, 'spark.sql.inMemoryColumnarStorage.batchSize': 8674.396137197647, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8996714029838728, 'spark.sql.shuffle.partitions': 269.7470777882875, 'spark.storage.memoryMapThreshold': 3.8581323997430936}
target = -903.0
训练集长度= 27
accuracy= 1.5489830609321803e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1017.55555556 -1017.55555556 -1017.55555556]  max_stds [170.32025028 170.32025028 170.32025028]
所有模型的可信度所占权重  [0.07720116806001402, 0.07835868494792506, 0.07533134084386459, 0.07528814421087604, 0.07588247917177458, 0.0758050931421052, 0.07663679735973022, 0.07648152791011768, 0.07701777985891202, 0.07741652003494948, 0.07778336099976159, 0.07790777390181029, 0.0788893295581593]
三个函数的累计增益为[0.12836177085870631, 0.12836177085870631, 0.12836177085870631]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 1 1 0 0 1 1 2 2 2 2 0 2 1 1 1 0 1 2 0 0 0 2 2 0 1 1 2 1 0 0 2 0 1 0 0
 2 2 1 2 1 2 0 2 0 0 0 0 2 1 1 0 0 2 1 2 0 2 0 1 2 2 2 1 1 2 0 0 2 1 0 2 1
 2 0 1 2 1 1 2 1 1 1 2 2 0 1 1 1 2 1 0 1 0 2 2 0 0 2]
每个概率被转中的次数, count: [31 35 34]
choose which one? [1]
ys [0.05947993 0.05947993 0.05947993 ... 0.05947993 0.05947993 0.05947993]
13 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7486]
configNum = 28	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 28 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669273940.0
1669275134.0
1194.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 53.34667078970624, 'spark.broadcast.checksum': 0.8967628387096702, 'spark.broadcast.compress': 0.29168862997450284, 'spark.default.parallelism': 422.97619927461807, 'spark.executor.cores': 2.5435620873200566, 'spark.executor.instances': 7.043536194891918, 'spark.executor.memory': 3.7721973319472704, 'spark.executor.memoryOverhead': 565.2744258666198, 'spark.kryoserializer.buffer': 45.68243745513908, 'spark.kryoserializer.buffer.max': 93.63286794103531, 'spark.locality.wait': 6.842074171607591, 'spark.maxRemoteBlockSizeFetchToMem': 1749876568.1439648, 'spark.memory.fraction': 0.5908798212343205, 'spark.memory.offHeap.enabled': 0.8711758974873663, 'spark.memory.offHeap.size': 948.9141056770678, 'spark.memory.storageFraction': 0.7016073900775381, 'spark.rdd.compress': 0.009883611715431395, 'spark.reducer.maxBlocksInFlightPerAddress': 1936019473.469111, 'spark.reducer.maxSizeInFlight': 59.39593818750908, 'spark.scheduler.revive.interval': 764.6273946194515, 'spark.shuffle.file.buffer': 44.467081584641434, 'spark.shuffle.io.numConnectionsPerPeer': 1.30075904960453, 'spark.shuffle.sort.bypassMergeThreshold': 254.50658720891792, 'spark.sql.autoBroadcastJoinThreshold': 5734278.144845981, 'spark.sql.inMemoryColumnarStorage.batchSize': 13727.087056295786, 'spark.sql.inMemoryColumnarStorage.compressed': 0.002814805133277698, 'spark.sql.shuffle.partitions': 350.57549514068455, 'spark.storage.memoryMapThreshold': 2.8153068119043336}
target = -1194.0
训练集长度= 28
accuracy= 1.5214185376879133e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1023.85714286 -1023.85714286 -1023.85714286]  max_stds [170.42629624 170.42629624 170.42629624]
所有模型的可信度所占权重  [0.07164938167917809, 0.07272365777351854, 0.06991401980253058, 0.06987392957951936, 0.07042552398578011, 0.07035370303648945, 0.07112559670636856, 0.07098149318646124, 0.07147918151839812, 0.0718492469951474, 0.0721897072364089, 0.07230517320316439, 0.07321614200879742, 0.07191324328823781]
三个函数的累计增益为[0.12354399508129088, 0.12354399508129088, 0.12354399508129088]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 1 1 1 2 1 1 0 0 0 1 0 0 2 0 0 2 0 0 0 1 0 2 0 1 1 0 1 1 0 1 2 0 2 2 1
 0 1 2 0 1 1 2 1 2 1 1 1 1 1 2 0 1 0 1 2 1 2 0 2 0 0 1 0 2 0 1 1 1 1 0 0 2
 1 2 2 0 0 1 1 1 2 2 0 0 1 2 0 0 1 1 2 2 2 2 2 0 1 1]
每个概率被转中的次数, count: [33 39 28]
choose which one? [1]
ys [0.05533828 0.05533828 0.05533828 ... 0.05533828 0.05533828 0.05533828]
14 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [715]
configNum = 29	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 29 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669275188.0
1669276166.0
978.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config30 =================
2022年 12月 13日 星期二 15:23:04 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 56020 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config31 =================
2022年 12月 13日 星期二 15:57:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1405 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 60.18562408431971, 'spark.broadcast.checksum': 0.07822264137284607, 'spark.broadcast.compress': 0.13278530416999357, 'spark.default.parallelism': 302.444259536868, 'spark.executor.cores': 2.5682677679851116, 'spark.executor.instances': 5.669354852731797, 'spark.executor.memory': 4.493106731445774, 'spark.executor.memoryOverhead': 387.1519883399778, 'spark.kryoserializer.buffer': 72.78233451884373, 'spark.kryoserializer.buffer.max': 76.77937714128697, 'spark.locality.wait': 8.770162152646563, 'spark.maxRemoteBlockSizeFetchToMem': 1686987625.5049202, 'spark.memory.fraction': 0.5927661478247024, 'spark.memory.offHeap.enabled': 0.7154107987961206, 'spark.memory.offHeap.size': 85.3989104357671, 'spark.memory.storageFraction': 0.5862377206796263, 'spark.rdd.compress': 0.7230489759625716, 'spark.reducer.maxBlocksInFlightPerAddress': 1578941577.2442727, 'spark.reducer.maxSizeInFlight': 59.48769400249141, 'spark.scheduler.revive.interval': 937.174523396267, 'spark.shuffle.file.buffer': 22.788147873859238, 'spark.shuffle.io.numConnectionsPerPeer': 2.12476197881265, 'spark.shuffle.sort.bypassMergeThreshold': 175.37239470036496, 'spark.sql.autoBroadcastJoinThreshold': 9741503.741975278, 'spark.sql.inMemoryColumnarStorage.batchSize': 9896.320053955162, 'spark.sql.inMemoryColumnarStorage.compressed': 0.43938861578682165, 'spark.sql.shuffle.partitions': 285.0462617886699, 'spark.storage.memoryMapThreshold': 2.424293690996126}
target = -978.0
训练集长度= 29
accuracy= 1.5283354063055243e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1022.27586207 -1022.27586207 -1022.27586207]  max_stds [167.67104423 167.67104423 167.67104423]
所有模型的可信度所占权重  [0.06682213809309447, 0.06782403683728123, 0.06520369298938004, 0.06516630377044397, 0.06568073553137073, 0.0656137533847143, 0.06633364215685755, 0.06619924734309537, 0.06666340485101248, 0.06700853785581011, 0.06732606022269741, 0.06743374688509089, 0.06828334086485587, 0.06706822251789808, 0.06737313669639756]
三个函数的累计增益为[0.12082616915679863, 0.12082616915679863, 0.12082616915679863]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 2 2 2 0 0 2 1 2 1 0 0 2 2 2 0 1 1 2 1 0 1 0 1 1 1 0 2 2 0 0 0 1 0 2 2
 1 0 1 0 2 2 1 1 0 2 2 0 2 0 1 0 2 2 0 1 0 1 2 2 1 0 1 2 0 0 1 2 1 1 2 1 1
 0 1 1 1 0 1 2 0 2 2 1 2 0 2 0 1 0 1 2 2 2 1 0 0 1 0]
每个概率被转中的次数, count: [32 34 34]
choose which one? [1]
ys [0.05348737 0.05348737 0.05348737 ... 0.05348737 0.05348737 0.05348737]
15 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5613]
configNum = 30	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 30 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669276221.0
1669277154.0
933.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 43.03827606264822, 'spark.broadcast.checksum': 0.07351015448906273, 'spark.broadcast.compress': 0.6722179391372437, 'spark.default.parallelism': 322.4167774458931, 'spark.executor.cores': 2.3307993765713135, 'spark.executor.instances': 6.620241278554289, 'spark.executor.memory': 5.027816833157569, 'spark.executor.memoryOverhead': 602.4992391719716, 'spark.kryoserializer.buffer': 111.26815621021505, 'spark.kryoserializer.buffer.max': 80.77010910402669, 'spark.locality.wait': 9.954131861874664, 'spark.maxRemoteBlockSizeFetchToMem': 1449520248.6954098, 'spark.memory.fraction': 0.7662481956130112, 'spark.memory.offHeap.enabled': 0.35425170409875095, 'spark.memory.offHeap.size': 633.6841453470743, 'spark.memory.storageFraction': 0.7771976517107138, 'spark.rdd.compress': 0.135808130317301, 'spark.reducer.maxBlocksInFlightPerAddress': 1920975177.9758945, 'spark.reducer.maxSizeInFlight': 68.35833639744632, 'spark.scheduler.revive.interval': 906.2048702273314, 'spark.shuffle.file.buffer': 19.03606872412754, 'spark.shuffle.io.numConnectionsPerPeer': 2.754806937355262, 'spark.shuffle.sort.bypassMergeThreshold': 202.21031879492745, 'spark.sql.autoBroadcastJoinThreshold': 12176997.122120172, 'spark.sql.inMemoryColumnarStorage.batchSize': 8751.126950714792, 'spark.sql.inMemoryColumnarStorage.compressed': 0.295504506228054, 'spark.sql.shuffle.partitions': 299.1980147895592, 'spark.storage.memoryMapThreshold': 3.3578346166358264}
target = -933.0
训练集长度= 30
accuracy= 1.541352478867028e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1019.3 -1019.3 -1019.3]  max_stds [165.62993892 165.62993892 165.62993892]
所有模型的可信度所占权重  [0.0625706522217717, 0.06350880624786112, 0.06105517892782438, 0.06102016855728469, 0.06150187015683451, 0.061439149676420245, 0.06211323630826941, 0.06198739221838699, 0.062422018209604815, 0.06274519250228251, 0.0630425128538621, 0.06314334806946324, 0.06393888755614541, 0.06280107979264843, 0.06308659413811578, 0.0636239125632245]
三个函数的累计增益为[0.11973873011162044, 0.11973873011162044, 0.11973873011162044]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 1 0 1 1 0 2 1 1 1 2 2 1 2 2 1 0 0 2 0 0 0 1 2 0 0 0 2 1 1 2 1 0 2 2
 2 2 0 1 2 1 0 1 2 1 0 1 2 1 2 2 0 1 2 2 0 2 2 2 1 2 2 0 1 2 0 2 1 1 1 0 1
 0 1 0 0 0 2 2 1 0 0 0 1 1 2 1 1 0 0 1 0 1 0 2 2 2 0]
每个概率被转中的次数, count: [32 33 35]
choose which one? [2]
ys [-592.63727734 -592.63727734 -592.63727734 ... -592.63727734 -592.63727734
 -592.63727734]
16 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5288]
configNum = 31	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 31 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669277192.0
1669278220.0
1028.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config32 =================
2022年 12月 13日 星期二 16:31:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29524 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config33 =================
2022年 12月 13日 星期二 17:05:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55685 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 49.6869882453782, 'spark.broadcast.checksum': 0.9284824014438525, 'spark.broadcast.compress': 0.978746514094568, 'spark.default.parallelism': 238.35384551262194, 'spark.executor.cores': 2.5282493802277775, 'spark.executor.instances': 4.787566730212221, 'spark.executor.memory': 6.266830899092403, 'spark.executor.memoryOverhead': 660.49257166953, 'spark.kryoserializer.buffer': 44.54047437301851, 'spark.kryoserializer.buffer.max': 47.66526442618064, 'spark.locality.wait': 5.559169411006687, 'spark.maxRemoteBlockSizeFetchToMem': 1960641028.237883, 'spark.memory.fraction': 0.8051114690208272, 'spark.memory.offHeap.enabled': 0.27341487553572785, 'spark.memory.offHeap.size': 955.5583599164081, 'spark.memory.storageFraction': 0.5207784266947375, 'spark.rdd.compress': 0.9542932956860378, 'spark.reducer.maxBlocksInFlightPerAddress': 1228485934.3247263, 'spark.reducer.maxSizeInFlight': 59.533071052893305, 'spark.scheduler.revive.interval': 744.7265763812868, 'spark.shuffle.file.buffer': 40.22991688651723, 'spark.shuffle.io.numConnectionsPerPeer': 2.3015077063520977, 'spark.shuffle.sort.bypassMergeThreshold': 302.51098279245434, 'spark.sql.autoBroadcastJoinThreshold': 9042853.733525362, 'spark.sql.inMemoryColumnarStorage.batchSize': 5756.99172427228, 'spark.sql.inMemoryColumnarStorage.compressed': 0.08759452462718054, 'spark.sql.shuffle.partitions': 342.3931035134177, 'spark.storage.memoryMapThreshold': 1.0700390816309668}
target = -1028.0
训练集长度= 31
accuracy= 1.5401248759290894e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1019.58064516 -1019.58064516 -1019.58064516]  max_stds [162.94384035 162.94384035 162.94384035]
所有模型的可信度所占权重  [0.05883060036888105, 0.059712677870609875, 0.057405711853895994, 0.057372794167331265, 0.05782570289201139, 0.05776673141916949, 0.05840052569562622, 0.05828220371722622, 0.058690850696142764, 0.05899470780785435, 0.05927425635280667, 0.05936906431886582, 0.0601170518171067, 0.05904725453269211, 0.05931570275500307, 0.05982090390627714, 0.05977325982849976]
三个函数的累计增益为[0.11594785077989253, 0.11594785077989253, 0.11594785077989253]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 0 2 0 1 0 0 2 2 0 2 1 1 2 2 2 0 0 0 0 1 1 0 2 1 2 1 0 0 2 0 0 0 1 1 0 0
 0 2 0 0 1 1 0 2 1 1 2 0 1 0 2 0 0 0 0 0 1 0 1 1 2 2 1 1 1 2 1 1 0 1 2 2 0
 0 1 1 1 1 2 2 0 1 2 0 0 0 2 1 0 0 2 0 1 0 0 0 2 2 0]
每个概率被转中的次数, count: [43 30 27]
choose which one? [0]
ys [3.4263459 3.4263459 3.4263459 ... 3.4263459 3.4263459 3.4263459]
17 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4449]
configNum = 32	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 32 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669278271.0
1669279344.0
1073.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 35.078757221194124, 'spark.broadcast.checksum': 0.5283263885915418, 'spark.broadcast.compress': 0.8407405928124265, 'spark.default.parallelism': 471.21977918854105, 'spark.executor.cores': 1.2179224561390596, 'spark.executor.instances': 4.825166613788046, 'spark.executor.memory': 6.113392572979449, 'spark.executor.memoryOverhead': 457.4978831830685, 'spark.kryoserializer.buffer': 105.8636932058289, 'spark.kryoserializer.buffer.max': 69.6731604528578, 'spark.locality.wait': 6.3656496189628395, 'spark.maxRemoteBlockSizeFetchToMem': 1102195145.4549167, 'spark.memory.fraction': 0.7962458814966961, 'spark.memory.offHeap.enabled': 0.6712717241167853, 'spark.memory.offHeap.size': 633.0994436284883, 'spark.memory.storageFraction': 0.8203125681704089, 'spark.rdd.compress': 0.9462411696437546, 'spark.reducer.maxBlocksInFlightPerAddress': 1951326925.5904927, 'spark.reducer.maxSizeInFlight': 58.89982812838136, 'spark.scheduler.revive.interval': 616.164623470421, 'spark.shuffle.file.buffer': 37.696062802322444, 'spark.shuffle.io.numConnectionsPerPeer': 1.3563467195922956, 'spark.shuffle.sort.bypassMergeThreshold': 260.5578999439897, 'spark.sql.autoBroadcastJoinThreshold': 6350311.108978247, 'spark.sql.inMemoryColumnarStorage.batchSize': 13868.313855229662, 'spark.sql.inMemoryColumnarStorage.compressed': 0.9021877946034973, 'spark.sql.shuffle.partitions': 347.89008415111294, 'spark.storage.memoryMapThreshold': 3.1093830078927445}
target = -1073.0
训练集长度= 32
accuracy= 1.5328227516709255e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1021.25 -1021.25 -1021.25]  max_stds [160.64673977 160.64673977 160.64673977]
所有模型的可信度所占权重  [0.05552728970160344, 0.05635983896458311, 0.05418240800962748, 0.05415133863575189, 0.05457881674758499, 0.05452315649533378, 0.0551213635198986, 0.05500968526518953, 0.055395386907561114, 0.05568218258471057, 0.05594603460974344, 0.056035519152895764, 0.05674150750330479, 0.055731778835550125, 0.05598515381586098, 0.05646198815901715, 0.05641701927390087, 0.05614953181788226]
三个函数的累计增益为[0.11167107267113718, 0.11167107267113718, 0.11167107267113718]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 2 1 2 2 1 0 1 1 2 1 0 2 0 1 2 2 0 2 2 1 0 2 2 1 1 1 0 1 2 0 1 1 1
 2 0 2 1 1 2 1 2 1 2 2 1 2 2 2 0 0 1 0 1 2 1 2 0 0 2 1 1 2 2 0 0 1 1 2 1 2
 1 0 0 2 0 2 2 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1]
每个概率被转中的次数, count: [26 41 33]
choose which one? [1]
ys [0.0468654 0.0468654 0.0468654 ... 0.0468654 0.0468654 0.0468654]
18 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3165]
configNum = 33	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 33 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669279384.0
1669280367.0
983.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config34 =================
2022年 12月 13日 星期二 17:39:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:   924 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config35 =================
2022年 12月 13日 星期二 18:13:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29099 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 34.12540637896787, 'spark.broadcast.checksum': 0.34664751070707733, 'spark.broadcast.compress': 0.43974450292442613, 'spark.default.parallelism': 223.84986197317357, 'spark.executor.cores': 1.1671506612524063, 'spark.executor.instances': 7.7845798893735605, 'spark.executor.memory': 6.717213771549094, 'spark.executor.memoryOverhead': 867.4455769578108, 'spark.kryoserializer.buffer': 126.61183369265594, 'spark.kryoserializer.buffer.max': 117.0583874723881, 'spark.locality.wait': 5.750979529843592, 'spark.maxRemoteBlockSizeFetchToMem': 1262054745.0213604, 'spark.memory.fraction': 0.7831204147492254, 'spark.memory.offHeap.enabled': 0.19025490861756655, 'spark.memory.offHeap.size': 142.9955693482093, 'spark.memory.storageFraction': 0.5199557116402224, 'spark.rdd.compress': 0.9294279945333782, 'spark.reducer.maxBlocksInFlightPerAddress': 1318038391.464664, 'spark.reducer.maxSizeInFlight': 42.51126989107377, 'spark.scheduler.revive.interval': 758.0106356459623, 'spark.shuffle.file.buffer': 23.815761496252296, 'spark.shuffle.io.numConnectionsPerPeer': 2.6456991971547144, 'spark.shuffle.sort.bypassMergeThreshold': 223.9214675243119, 'spark.sql.autoBroadcastJoinThreshold': 7831897.636378469, 'spark.sql.inMemoryColumnarStorage.batchSize': 10721.589355983648, 'spark.sql.inMemoryColumnarStorage.compressed': 0.4852753059116227, 'spark.sql.shuffle.partitions': 396.88317515620236, 'spark.storage.memoryMapThreshold': 3.0979733009335693}
target = -983.0
训练集长度= 33
accuracy= 1.5378928688793922e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1020.09090909 -1020.09090909 -1020.09090909]  max_stds [158.32979842 158.32979842 158.32979842]
所有模型的可信度所占权重  [0.052565972121062156, 0.05335412082384201, 0.05129281411341508, 0.05126340169566987, 0.051668082036268846, 0.05161539019260402, 0.052181694327829806, 0.052075971969416254, 0.05244110381519707, 0.052712604434991296, 0.05296238500714776, 0.05304709726351555, 0.05371543465482035, 0.05275955567559662, 0.052999417952735835, 0.05345082231486857, 0.053408251658637364, 0.05315502953612123, 0.05333085040626023]
三个函数的累计增益为[0.1090534627722089, 0.1090534627722089, 0.1090534627722089]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 2 1 2 2 2 0 0 0 2 1 1 2 1 1 0 0 1 2 0 2 0 2 2 1 2 1 2 0 0 1 1 2 2 2 2
 2 0 2 0 0 1 1 0 2 1 0 1 2 2 2 0 1 2 2 0 2 2 0 2 1 0 2 1 1 1 0 0 0 2 0 0 2
 2 0 0 0 0 2 1 2 2 2 2 1 0 0 2 1 1 1 2 1 2 1 2 2 2 2]
每个概率被转中的次数, count: [29 28 43]
choose which one? [2]
ys [-612.23334835 -612.23334835 -612.23334835 ... -612.23334835 -612.23334835
 -612.23334835]
19 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7694]
configNum = 34	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 34 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669280388.0
1669281371.0
983.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.844043947736694, 'spark.broadcast.checksum': 0.6620062268558846, 'spark.broadcast.compress': 0.3155415496063033, 'spark.default.parallelism': 298.5455009271027, 'spark.executor.cores': 2.911709421447595, 'spark.executor.instances': 7.954604803861506, 'spark.executor.memory': 3.1405316202723035, 'spark.executor.memoryOverhead': 465.77932177476055, 'spark.kryoserializer.buffer': 43.874853158975, 'spark.kryoserializer.buffer.max': 125.88935954145863, 'spark.locality.wait': 5.4449561608790615, 'spark.maxRemoteBlockSizeFetchToMem': 1894118089.999244, 'spark.memory.fraction': 0.8195525494425218, 'spark.memory.offHeap.enabled': 0.49958885293580646, 'spark.memory.offHeap.size': 936.9808864631702, 'spark.memory.storageFraction': 0.591921336481065, 'spark.rdd.compress': 0.5805458091927486, 'spark.reducer.maxBlocksInFlightPerAddress': 1559144526.462627, 'spark.reducer.maxSizeInFlight': 63.8523137931748, 'spark.scheduler.revive.interval': 549.9306055100059, 'spark.shuffle.file.buffer': 25.266212013619143, 'spark.shuffle.io.numConnectionsPerPeer': 2.1191449024659996, 'spark.shuffle.sort.bypassMergeThreshold': 243.78261120873862, 'spark.sql.autoBroadcastJoinThreshold': 12468549.231548667, 'spark.sql.inMemoryColumnarStorage.batchSize': 9072.158945519204, 'spark.sql.inMemoryColumnarStorage.compressed': 0.28213308840689133, 'spark.sql.shuffle.partitions': 377.82307612886717, 'spark.storage.memoryMapThreshold': 2.746903788353202}
target = -983.0
训练集长度= 34
accuracy= 1.5426647445707733e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1019. -1019. -1019.]  max_stds [156.10987835 156.10987835 156.10987835]
所有模型的可信度所占权重  [0.049896682768861486, 0.05064480944112632, 0.04868817546539343, 0.048660256604227535, 0.0490443873595983, 0.048994371197017016, 0.04953191852365978, 0.049431564725061945, 0.04977815525012206, 0.050035869123770636, 0.050272965889374285, 0.05035337647462673, 0.05098777582939757, 0.05008043618994593, 0.05030811830953212, 0.05073660045014477, 0.05069619152316176, 0.05045582796842437, 0.050622720690607206, 0.05077979621594669]
三个函数的累计增益为[0.10650423052747832, 0.10650423052747832, 0.10650423052747832]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 2 2 0 0 0 0 1 0 2 1 1 0 0 2 2 2 2 0 0 0 2 0 2 1 2 0 2 1 1 1 2 2 2 0 1
 0 0 1 2 1 0 1 0 0 2 0 1 0 0 1 0 1 2 0 1 1 2 0 2 1 1 2 2 2 1 1 2 0 1 2 0 2
 0 0 1 0 2 0 2 1 1 0 1 1 1 1 2 1 0 1 0 2 2 2 1 0 2 0]
每个概率被转中的次数, count: [35 31 34]
choose which one? [0]
ys [2.78379082 2.78379082 2.78379082 ... 2.78379082 2.78379082 2.78379082]
20 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8419]
configNum = 35	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 35 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669281403.0
1669282432.0
1029.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config36 =================
2022年 12月 13日 星期二 18:47:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55761 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config37 =================
2022年 12月 13日 星期二 19:21:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:  1109 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 41.93095497333162, 'spark.broadcast.checksum': 0.8951017211985993, 'spark.broadcast.compress': 0.6383488932781427, 'spark.default.parallelism': 449.62965759796856, 'spark.executor.cores': 2.489773859258705, 'spark.executor.instances': 5.435624971687524, 'spark.executor.memory': 3.951021987408382, 'spark.executor.memoryOverhead': 426.9105027037538, 'spark.kryoserializer.buffer': 78.16619034154095, 'spark.kryoserializer.buffer.max': 55.400834003813486, 'spark.locality.wait': 6.780931283019155, 'spark.maxRemoteBlockSizeFetchToMem': 1985929953.829052, 'spark.memory.fraction': 0.7067502613504869, 'spark.memory.offHeap.enabled': 0.9525928405433881, 'spark.memory.offHeap.size': 909.266399541784, 'spark.memory.storageFraction': 0.8605346922335447, 'spark.rdd.compress': 0.5364082974025781, 'spark.reducer.maxBlocksInFlightPerAddress': 1915900913.7390127, 'spark.reducer.maxSizeInFlight': 68.11269101604773, 'spark.scheduler.revive.interval': 779.7304840810666, 'spark.shuffle.file.buffer': 28.621496793825475, 'spark.shuffle.io.numConnectionsPerPeer': 1.0358642084691612, 'spark.shuffle.sort.bypassMergeThreshold': 202.33717798952287, 'spark.sql.autoBroadcastJoinThreshold': 11066356.07526708, 'spark.sql.inMemoryColumnarStorage.batchSize': 13802.099298360949, 'spark.sql.inMemoryColumnarStorage.compressed': 0.274004438604198, 'spark.sql.shuffle.partitions': 365.3852289787248, 'spark.storage.memoryMapThreshold': 1.9882312686885362}
target = -1029.0
训练集长度= 35
accuracy= 1.5414149682562252e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1019.28571429 -1019.28571429 -1019.28571429]  max_stds [153.87259506 153.87259506 153.87259506]
所有模型的可信度所占权重  [0.047487243775616146, 0.04819924448767653, 0.04633709355039488, 0.0463105228508503, 0.04667610448493413, 0.046628503530854265, 0.04714009347080006, 0.047044585612694534, 0.047374439780156735, 0.04761970902178146, 0.04784535672583399, 0.047921884399661746, 0.04852564952269908, 0.04766212400847775, 0.04787881168621824, 0.048286603040986795, 0.04824814540292612, 0.048019388658285145, 0.04817822237112704, 0.04832771294543099, 0.048288560672593975]
三个函数的累计增益为[0.10315858898883931, 0.10315858898883931, 0.10315858898883931]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 1 2 2 1 0 0 0 2 2 0 0 1 0 1 0 0 2 0 2 1 1 2 2 2 2 1 1 0 1 0 1 1 0 1
 2 0 2 0 2 1 2 2 1 0 2 0 0 0 2 2 1 1 1 2 2 1 1 0 1 1 1 1 0 1 2 2 0 2 2 1 2
 2 0 0 2 2 0 2 1 0 2 2 1 0 2 2 2 0 2 2 2 2 1 1 2 1 1]
每个概率被转中的次数, count: [28 32 40]
choose which one? [2]
ys [-622.90990941 -622.90990941 -622.90990941 ... -622.90990941 -622.90990941
 -622.90990941]
21 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3437]
configNum = 36	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 36 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669282465.0
1669283619.0
1154.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 63.4969730123658, 'spark.broadcast.checksum': 0.7786337832734636, 'spark.broadcast.compress': 0.06356024828135576, 'spark.default.parallelism': 334.4746859389078, 'spark.executor.cores': 1.2251387401860403, 'spark.executor.instances': 7.71529438141627, 'spark.executor.memory': 3.3854119511400262, 'spark.executor.memoryOverhead': 550.8230063212161, 'spark.kryoserializer.buffer': 67.11917107891722, 'spark.kryoserializer.buffer.max': 61.8186652700077, 'spark.locality.wait': 4.487449838722812, 'spark.maxRemoteBlockSizeFetchToMem': 1637804996.0086834, 'spark.memory.fraction': 0.6968323998531917, 'spark.memory.offHeap.enabled': 0.17943759106786317, 'spark.memory.offHeap.size': 262.5258889527231, 'spark.memory.storageFraction': 0.6769686969985251, 'spark.rdd.compress': 0.5989695152724752, 'spark.reducer.maxBlocksInFlightPerAddress': 1452518521.7269645, 'spark.reducer.maxSizeInFlight': 40.57380001696069, 'spark.scheduler.revive.interval': 963.4461656166693, 'spark.shuffle.file.buffer': 37.033365506000166, 'spark.shuffle.io.numConnectionsPerPeer': 1.726583115214672, 'spark.shuffle.sort.bypassMergeThreshold': 326.45189409130955, 'spark.sql.autoBroadcastJoinThreshold': 7301357.033221986, 'spark.sql.inMemoryColumnarStorage.batchSize': 12012.177297752925, 'spark.sql.inMemoryColumnarStorage.compressed': 0.1651583494022446, 'spark.sql.shuffle.partitions': 288.59166984863776, 'spark.storage.memoryMapThreshold': 1.8380014819110235}
target = -1154.0
训练集长度= 36
accuracy= 1.5250463622090363e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1023.02777778 -1023.02777778 -1023.02777778]  max_stds [153.32708069 153.32708069 153.32708069]
所有模型的可信度所占权重  [0.045321952402000786, 0.046001487784906314, 0.04422424595247644, 0.044198886805802494, 0.044547798894642256, 0.044502368416821904, 0.04499063122308466, 0.04489947826799784, 0.04521429196718751, 0.04544837758704609, 0.045663736358993616, 0.04573677457546805, 0.04631300962287539, 0.045488858563732464, 0.0456956658626159, 0.04608486302171187, 0.04604815894914209, 0.04582983290054589, 0.04598142422067531, 0.046124098424408115, 0.046086731390550896, 0.04559732680731401]
三个函数的累计增益为[0.0995827552364501, 0.0995827552364501, 0.0995827552364501]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 1 0 1 0 2 2 0 1 0 1 0 0 2 0 2 1 1 0 0 1 2 2 1 2 1 2 2 2 1 0 1 1 0 1 2
 1 2 0 0 2 2 2 2 0 0 2 0 1 2 0 0 0 1 1 2 2 1 1 1 0 2 1 0 2 2 0 1 2 2 2 2 1
 0 2 1 2 2 2 1 0 2 0 0 2 0 2 1 0 2 1 1 2 0 0 2 0 1 2]
每个概率被转中的次数, count: [32 30 38]
choose which one? [2]
ys [-628.05721792 -628.05721792 -628.05721792 ... -628.05721792 -628.05721792
 -628.05721792]
22 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9123]
configNum = 37	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 37 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669283640.0
1669284477.0
837.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config38 =================
2022年 12月 13日 星期二 19:55:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 29132 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config39 =================
2022年 12月 13日 星期二 20:29:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55548 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 53.2189815666579, 'spark.broadcast.checksum': 0.08145764578550219, 'spark.broadcast.compress': 0.4396559264050873, 'spark.default.parallelism': 333.9805632491326, 'spark.executor.cores': 1.1081623282053485, 'spark.executor.instances': 6.712650330761528, 'spark.executor.memory': 4.983310851123778, 'spark.executor.memoryOverhead': 412.3228078482501, 'spark.kryoserializer.buffer': 100.31604889182815, 'spark.kryoserializer.buffer.max': 32.31275820839712, 'spark.locality.wait': 8.764060138726052, 'spark.maxRemoteBlockSizeFetchToMem': 1278474496.347536, 'spark.memory.fraction': 0.5162756448406169, 'spark.memory.offHeap.enabled': 0.8379542599385553, 'spark.memory.offHeap.size': 470.1972495825603, 'spark.memory.storageFraction': 0.5720832860336414, 'spark.rdd.compress': 0.6014866693529483, 'spark.reducer.maxBlocksInFlightPerAddress': 1347627712.4205108, 'spark.reducer.maxSizeInFlight': 47.374334913071394, 'spark.scheduler.revive.interval': 927.2716910154419, 'spark.shuffle.file.buffer': 45.20359955871113, 'spark.shuffle.io.numConnectionsPerPeer': 1.8386158369381225, 'spark.shuffle.sort.bypassMergeThreshold': 337.5983276247267, 'spark.sql.autoBroadcastJoinThreshold': 5701037.456577739, 'spark.sql.inMemoryColumnarStorage.batchSize': 8955.186716065484, 'spark.sql.inMemoryColumnarStorage.compressed': 0.421820135107318, 'spark.sql.shuffle.partitions': 387.8669222818268, 'spark.storage.memoryMapThreshold': 1.3518255985329413}
target = -837.0
训练集长度= 37
accuracy= 1.5470389638841522e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1018. -1018. -1018.]  max_stds [154.22009544 154.22009544 154.22009544]
所有模型的可信度所占权重  [0.04331827084746476, 0.043967764000496665, 0.0422690939525743, 0.042244855932677475, 0.042578342633167635, 0.04253492063480587, 0.04300159736353169, 0.04291447427664492, 0.04321537007581593, 0.043439106780549845, 0.0436449445505085, 0.04371475375059308, 0.044265513471489194, 0.04347779809500859, 0.04367546245215728, 0.04404745322169084, 0.044012371834581114, 0.04380369797114602, 0.043948587445572125, 0.04408495402893166, 0.04404923899002433, 0.04358147096223499, 0.04420995672833309]
三个函数的累计增益为[0.10231059157941008, 0.10231059157941008, 0.10231059157941008]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 1 1 2 0 2 1 0 1 0 0 2 0 1 1 1 1 2 0 2 0 1 2 2 1 1 2 0 0 0 2 1 1 0 2
 0 0 1 1 0 0 2 1 0 0 2 2 0 0 1 0 1 1 2 2 2 1 0 1 1 1 2 1 0 2 1 0 0 2 2 1 1
 2 2 0 2 1 0 0 0 0 1 1 2 1 0 0 2 1 2 1 0 0 2 0 0 2 1]
每个概率被转中的次数, count: [37 35 28]
choose which one? [0]
ys [2.65424539 2.65424539 2.65424539 ... 2.65424539 2.65424539 2.65424539]
23 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2921]
configNum = 38	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 38 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669284504.0
1669285376.0
872.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 33.75328006691472, 'spark.broadcast.checksum': 0.36344369041530233, 'spark.broadcast.compress': 0.5939737165498313, 'spark.default.parallelism': 382.08152979330487, 'spark.executor.cores': 1.9387435460740983, 'spark.executor.instances': 4.092950334153131, 'spark.executor.memory': 4.845825956465074, 'spark.executor.memoryOverhead': 619.0199034602362, 'spark.kryoserializer.buffer': 89.78215128226576, 'spark.kryoserializer.buffer.max': 109.62642974489451, 'spark.locality.wait': 6.958136453707483, 'spark.maxRemoteBlockSizeFetchToMem': 1492791825.0230808, 'spark.memory.fraction': 0.6212537340952479, 'spark.memory.offHeap.enabled': 0.5249745486925963, 'spark.memory.offHeap.size': 674.8495159673458, 'spark.memory.storageFraction': 0.7140466286791514, 'spark.rdd.compress': 0.5933444755625966, 'spark.reducer.maxBlocksInFlightPerAddress': 2097962941.9511828, 'spark.reducer.maxSizeInFlight': 65.79435595010051, 'spark.scheduler.revive.interval': 757.4659992704615, 'spark.shuffle.file.buffer': 21.618746989600744, 'spark.shuffle.io.numConnectionsPerPeer': 2.1589373953321456, 'spark.shuffle.sort.bypassMergeThreshold': 206.06932861116132, 'spark.sql.autoBroadcastJoinThreshold': 13578543.510369794, 'spark.sql.inMemoryColumnarStorage.batchSize': 12183.15575132463, 'spark.sql.inMemoryColumnarStorage.compressed': 0.0643298989966461, 'spark.sql.shuffle.partitions': 291.37870727616234, 'spark.storage.memoryMapThreshold': 3.74131263802137}
target = -872.0
训练集长度= 38
accuracy= 1.5638451738604003e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1014.15789474 -1014.15789474 -1014.15789474]  max_stds [153.96146584 153.96146584 153.96146584]
所有模型的可信度所占权重  [0.04146518230389749, 0.042086891145656974, 0.040460887571800254, 0.04043768641685928, 0.040756907072744694, 0.040715342600228924, 0.04116205562120204, 0.041078659525052234, 0.04136668346790621, 0.04158084906289343, 0.041777881411816535, 0.041844704282429014, 0.04237190335537949, 0.04161788522283755, 0.04180709380489324, 0.04216317138537632, 0.042129590725679615, 0.04192984360696698, 0.042068534934055025, 0.042199067966157654, 0.04216488076130597, 0.04171712312535327, 0.042318723243659644, 0.04277845138584814]
三个函数的累计增益为[0.10357769528307278, 0.10357769528307278, 0.10357769528307278]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 0 1 2 1 2 2 0 0 0 0 2 2 1 0 0 1 2 2 1 1 0 2 1 0 2 2 1 0 2 1 1 0 0 2
 2 0 1 2 1 0 0 2 2 2 0 1 2 2 2 2 1 0 2 2 1 1 0 2 0 0 1 2 1 1 0 1 0 1 1 2 0
 1 1 2 1 0 2 1 1 0 1 2 2 0 0 2 0 0 0 2 0 2 1 1 0 1 2]
每个概率被转中的次数, count: [34 31 35]
choose which one? [2]
ys [-617.55315873 -617.55315873 -617.55315873 ... -617.55315873 -617.55315873
 -617.55315873]
24 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [178]
configNum = 39	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 39 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669285392.0
1669286275.0
883.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config40 =================
2022年 12月 13日 星期二 21:03:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:   853 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config41 =================
2022年 12月 13日 星期二 21:37:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28935 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 44.83005871911616, 'spark.broadcast.checksum': 0.5905773171688139, 'spark.broadcast.compress': 0.9405037771046105, 'spark.default.parallelism': 370.9575396225604, 'spark.executor.cores': 2.971946475282265, 'spark.executor.instances': 4.993008541993476, 'spark.executor.memory': 4.533090126940303, 'spark.executor.memoryOverhead': 500.2110790672011, 'spark.kryoserializer.buffer': 92.36586678306556, 'spark.kryoserializer.buffer.max': 55.77451927084898, 'spark.locality.wait': 8.15757528807613, 'spark.maxRemoteBlockSizeFetchToMem': 1459064375.8152092, 'spark.memory.fraction': 0.5927741827282365, 'spark.memory.offHeap.enabled': 0.7622321318921036, 'spark.memory.offHeap.size': 1018.5072256062203, 'spark.memory.storageFraction': 0.5890277500653215, 'spark.rdd.compress': 0.48170133580880103, 'spark.reducer.maxBlocksInFlightPerAddress': 2073619581.1502018, 'spark.reducer.maxSizeInFlight': 59.34252622940602, 'spark.scheduler.revive.interval': 746.6451717031483, 'spark.shuffle.file.buffer': 17.376933626548997, 'spark.shuffle.io.numConnectionsPerPeer': 2.2048659057560447, 'spark.shuffle.sort.bypassMergeThreshold': 270.0949123449354, 'spark.sql.autoBroadcastJoinThreshold': 12358909.197834577, 'spark.sql.inMemoryColumnarStorage.batchSize': 9946.739119325848, 'spark.sql.inMemoryColumnarStorage.compressed': 0.31150911202172826, 'spark.sql.shuffle.partitions': 313.5485425733249, 'spark.storage.memoryMapThreshold': 3.7937799299062553}
target = -883.0
训练集长度= 39
accuracy= 1.578555772691425e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1010.79487179 -1010.79487179 -1010.79487179]  max_stds [153.38224072 153.38224072 153.38224072]
所有模型的可信度所占权重  [0.039748795343692106, 0.04034476951144921, 0.03878607183560979, 0.03876383105652127, 0.039069838068073126, 0.03902999409248201, 0.03945821612025189, 0.0393782720762579, 0.0396543737143667, 0.03985967425645564, 0.0400485507566488, 0.04011260759809199, 0.04061798408245205, 0.0398951773619562, 0.040076553947986426, 0.04041789224886177, 0.040385701608531104, 0.04019422271223659, 0.04032717312677872, 0.040452302946312906, 0.04041953086782395, 0.039990307465292654, 0.0405670052790402, 0.04100770368725312, 0.04139345023557387]
三个函数的累计增益为[0.10442812070746452, 0.10442812070746452, 0.10442812070746452]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 1 2 2 0 0 0 2 1 0 2 2 0 2 1 0 2 1 2 1 1 0 0 1 2 0 2 1 2 1 1 1 2 0 0
 2 2 1 0 0 1 0 0 0 2 0 2 1 0 0 1 1 0 2 2 2 1 2 1 1 0 2 2 0 1 2 1 1 0 0 2 0
 0 2 2 2 1 2 2 0 1 0 0 2 0 0 2 1 1 2 1 1 2 1 0 1 0 2]
每个概率被转中的次数, count: [35 30 35]
choose which one? [0]
ys [2.89332519 2.89332519 2.89332519 ... 2.89332519 2.89332519 2.89332519]
25 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3653]
configNum = 40	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 40 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669286312.0
1669287501.0
1189.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 57.18935388266643, 'spark.broadcast.checksum': 0.5210038985603134, 'spark.broadcast.compress': 0.07670865362830259, 'spark.default.parallelism': 344.722890722794, 'spark.executor.cores': 2.2286616024750954, 'spark.executor.instances': 5.9049022619926586, 'spark.executor.memory': 3.4276711004226867, 'spark.executor.memoryOverhead': 692.8974990794452, 'spark.kryoserializer.buffer': 75.38799244553917, 'spark.kryoserializer.buffer.max': 122.0543952010706, 'spark.locality.wait': 9.883987473044446, 'spark.maxRemoteBlockSizeFetchToMem': 1406523887.089346, 'spark.memory.fraction': 0.7539270829393898, 'spark.memory.offHeap.enabled': 0.6359152537179613, 'spark.memory.offHeap.size': 682.784410183411, 'spark.memory.storageFraction': 0.7972304754464392, 'spark.rdd.compress': 0.651940330524797, 'spark.reducer.maxBlocksInFlightPerAddress': 1660749229.730738, 'spark.reducer.maxSizeInFlight': 66.98777435053954, 'spark.scheduler.revive.interval': 680.1315716546137, 'spark.shuffle.file.buffer': 24.063390021060183, 'spark.shuffle.io.numConnectionsPerPeer': 1.3273590379944424, 'spark.shuffle.sort.bypassMergeThreshold': 181.09504147807786, 'spark.sql.autoBroadcastJoinThreshold': 11358637.770567685, 'spark.sql.inMemoryColumnarStorage.batchSize': 8281.789903657416, 'spark.sql.inMemoryColumnarStorage.compressed': 0.33537683528261486, 'spark.sql.shuffle.partitions': 335.7652694998934, 'spark.storage.memoryMapThreshold': 2.058227770056539}
target = -1189.0
训练集长度= 40
accuracy= 1.55906806624393e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1015.25 -1015.25 -1015.25]  max_stds [153.9871342 153.9871342 153.9871342]
所有模型的可信度所占权重  [0.03818759347183511, 0.03876015973557309, 0.0372626825749251, 0.037241315340447036, 0.03753530340362309, 0.03749702436827072, 0.03790842724402495, 0.03783162313899133, 0.038096880413377616, 0.03829411742579651, 0.03847557547863544, 0.03853711637815129, 0.039022643337348305, 0.03832822608615012, 0.03850247879677298, 0.038830410452499575, 0.03879948415458498, 0.03861552591919934, 0.038743254478984544, 0.038863469610996945, 0.03883198471190145, 0.03841961979209102, 0.03897366681356841, 0.03939705603860038, 0.039767651731955754, 0.0392767091016949]
三个函数的累计增益为[0.1018190501949146, 0.1018190501949146, 0.1018190501949146]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 1 1 2 1 0 1 1 1 1 1 1 1 1 1 2 1 2 0 1 0 2 0 1 2 0 1 1 2 1 2 0 2 0
 2 2 0 2 1 1 0 0 1 1 0 1 2 2 0 2 2 0 2 0 2 0 0 0 2 0 1 0 0 1 0 0 2 2 0 1 0
 0 2 0 0 0 1 2 2 2 0 0 0 0 1 2 1 0 2 0 0 0 2 1 0 1 0]
每个概率被转中的次数, count: [38 33 29]
choose which one? [0]
ys [2.75114783 2.75114783 2.75114783 ... 2.75114783 2.75114783 2.75114783]
26 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [8376]
configNum = 41	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 41 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669287533.0
1669288537.0
1004.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config42 =================
2022年 12月 13日 星期二 22:11:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55180 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config43 =================
2022年 12月 13日 星期二 22:45:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 81834 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 42.86264792887455, 'spark.broadcast.checksum': 0.6768144570430945, 'spark.broadcast.compress': 0.8303802701297608, 'spark.default.parallelism': 302.8793431084573, 'spark.executor.cores': 1.9097761102517417, 'spark.executor.instances': 4.997539145500351, 'spark.executor.memory': 3.010223330518702, 'spark.executor.memoryOverhead': 385.8758458057461, 'spark.kryoserializer.buffer': 113.71558524958354, 'spark.kryoserializer.buffer.max': 71.58978335649473, 'spark.locality.wait': 7.805472433042235, 'spark.maxRemoteBlockSizeFetchToMem': 1455200298.6000752, 'spark.memory.fraction': 0.5816905588369221, 'spark.memory.offHeap.enabled': 0.04331422116904993, 'spark.memory.offHeap.size': 666.1857470396965, 'spark.memory.storageFraction': 0.7295390061157828, 'spark.rdd.compress': 0.49621742961752213, 'spark.reducer.maxBlocksInFlightPerAddress': 1983689822.650148, 'spark.reducer.maxSizeInFlight': 56.788863079012565, 'spark.scheduler.revive.interval': 606.2612478151534, 'spark.shuffle.file.buffer': 46.28726815185197, 'spark.shuffle.io.numConnectionsPerPeer': 1.4532341920296414, 'spark.shuffle.sort.bypassMergeThreshold': 256.12197942587284, 'spark.sql.autoBroadcastJoinThreshold': 13539954.159097625, 'spark.sql.inMemoryColumnarStorage.batchSize': 7941.540364716298, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8695482761553102, 'spark.sql.shuffle.partitions': 334.2883449171424, 'spark.storage.memoryMapThreshold': 2.0147584318265084}
target = -1004.0
训练集长度= 41
accuracy= 1.5602683095494306e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1014.97560976 -1014.97560976 -1014.97560976]  max_stds [152.10754985 152.10754985 152.10754985]
所有模型的可信度所占权重  [0.03674332555316343, 0.03729423716388851, 0.03585339510447209, 0.035832835986150655, 0.036115705319668324, 0.036078874010598, 0.03647471748810056, 0.036400818140733954, 0.03665604329377505, 0.03684582073455005, 0.037020415981423124, 0.03707962938295399, 0.037546793545570605, 0.03687863939363835, 0.03704630180681605, 0.037361830974540045, 0.037332074319848814, 0.03715507344819281, 0.037277971269918234, 0.03739363982429325, 0.037363345694909914, 0.036966576558188226, 0.03749966933076419, 0.037907045829692426, 0.03826362546646896, 0.03779125045533072, 0.037820343922349633]
三个函数的累计增益为[0.09951329308210145, 0.09951329308210145, 0.09951329308210145]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 1 1 1 1 1 0 1 2 1 2 2 2 0 2 0 0 2 1 1 2 2 0 2 0 1 1 2 0 0 0 1 0 2 2 1
 1 0 1 1 2 2 2 2 1 1 1 0 0 2 0 1 1 2 1 0 0 2 1 1 0 0 1 0 1 2 2 1 1 1 1 0 2
 2 0 0 2 0 2 0 1 0 0 0 2 0 0 2 0 0 1 2 2 1 0 1 2 2 2]
每个概率被转中的次数, count: [33 35 32]
choose which one? [1]
ys [0.04191534 0.04191534 0.04191534 ... 0.04191534 0.04191534 0.04191534]
27 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4895]
configNum = 42	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 42 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669288575.0
1669289618.0
1043.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 41.48900922219269, 'spark.broadcast.checksum': 0.2344839116242876, 'spark.broadcast.compress': 0.9122361592491782, 'spark.default.parallelism': 309.97827699038055, 'spark.executor.cores': 1.5684950720200752, 'spark.executor.instances': 7.3537217735762415, 'spark.executor.memory': 6.989221557493494, 'spark.executor.memoryOverhead': 533.2918099936526, 'spark.kryoserializer.buffer': 105.23191326359071, 'spark.kryoserializer.buffer.max': 64.20626473171096, 'spark.locality.wait': 7.283624151808862, 'spark.maxRemoteBlockSizeFetchToMem': 1711906901.4002042, 'spark.memory.fraction': 0.6434231241009147, 'spark.memory.offHeap.enabled': 0.38481871113696864, 'spark.memory.offHeap.size': 615.1294467343137, 'spark.memory.storageFraction': 0.6291017889307257, 'spark.rdd.compress': 0.5785145916630211, 'spark.reducer.maxBlocksInFlightPerAddress': 1729292286.452851, 'spark.reducer.maxSizeInFlight': 55.001662909676696, 'spark.scheduler.revive.interval': 784.8899850242481, 'spark.shuffle.file.buffer': 40.33862128391716, 'spark.shuffle.io.numConnectionsPerPeer': 2.7564812403270262, 'spark.shuffle.sort.bypassMergeThreshold': 324.9741479562617, 'spark.sql.autoBroadcastJoinThreshold': 9233635.216026384, 'spark.sql.inMemoryColumnarStorage.batchSize': 14306.821466896758, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2793253742963818, 'spark.sql.shuffle.partitions': 300.90423264677815, 'spark.storage.memoryMapThreshold': 2.9489732481169315}
target = -1043.0
训练集长度= 42
accuracy= 1.5573496230939835e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1015.64285714 -1015.64285714 -1015.64285714]  max_stds [150.34655545 150.34655545 150.34655545]
所有模型的可信度所占权重  [0.035406735588657375, 0.03593760701741363, 0.03454917760731682, 0.03452936635573891, 0.034801945920795115, 0.03476645440221304, 0.035147898518428075, 0.03507668736339537, 0.03532262834378446, 0.0355055023641692, 0.035673746464233776, 0.03573080589529357, 0.03618097630674232, 0.035537127198536266, 0.03569869065644782, 0.036002742008466794, 0.03597406779379532, 0.0358035055769209, 0.035921932818133946, 0.03603339376672862, 0.03600420162876025, 0.03562186552547754, 0.03613556630129631, 0.03652812390911859, 0.03687173246184414, 0.036416540753791984, 0.036444575905172215, 0.03637640154732753]
三个函数的累计增益为[0.09677978383322723, 0.09677978383322723, 0.09677978383322723]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 0 0 0 2 0 0 0 2 1 2 0 2 0 0 1 0 2 0 1 2 1 0 2 0 2 0 1 0 0 1 1 1 0 0 0
 1 1 1 2 0 2 0 0 1 2 0 1 2 1 1 1 2 2 1 1 0 2 1 2 0 1 1 0 0 1 1 0 0 0 1 0 2
 1 0 1 1 2 1 1 2 1 2 0 1 2 0 2 2 1 0 1 0 0 0 0 0 0 0]
每个概率被转中的次数, count: [43 34 23]
choose which one? [0]
ys [2.41026951 2.41026951 2.41026951 ... 2.41026951 2.41026951 2.41026951]
28 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5888]
configNum = 43	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 43 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669289650.0
1669290533.0
883.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config44 =================
2022年 12月 13日 星期二 23:19:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28491 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config45 =================
2022年 12月 13日 星期二 23:53:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 54711 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 57.33562766462043, 'spark.broadcast.checksum': 0.7787806893350264, 'spark.broadcast.compress': 0.5675417121073338, 'spark.default.parallelism': 291.08403419957665, 'spark.executor.cores': 2.550409466789441, 'spark.executor.instances': 6.820387965061034, 'spark.executor.memory': 6.528638234621613, 'spark.executor.memoryOverhead': 661.371048844987, 'spark.kryoserializer.buffer': 39.34461337187858, 'spark.kryoserializer.buffer.max': 66.65816146050295, 'spark.locality.wait': 7.15107553995491, 'spark.maxRemoteBlockSizeFetchToMem': 1789315297.8276806, 'spark.memory.fraction': 0.8766944122403422, 'spark.memory.offHeap.enabled': 0.031900939564791675, 'spark.memory.offHeap.size': 107.1215663046388, 'spark.memory.storageFraction': 0.6834077765635769, 'spark.rdd.compress': 0.32494352615047895, 'spark.reducer.maxBlocksInFlightPerAddress': 1821981869.9709592, 'spark.reducer.maxSizeInFlight': 57.58338164691304, 'spark.scheduler.revive.interval': 587.7310166719856, 'spark.shuffle.file.buffer': 19.95109769815914, 'spark.shuffle.io.numConnectionsPerPeer': 2.3077526384720217, 'spark.shuffle.sort.bypassMergeThreshold': 288.6327101521731, 'spark.sql.autoBroadcastJoinThreshold': 14736163.560626745, 'spark.sql.inMemoryColumnarStorage.batchSize': 11057.087108892141, 'spark.sql.inMemoryColumnarStorage.compressed': 0.48017671262654193, 'spark.sql.shuffle.partitions': 384.8196505639698, 'spark.storage.memoryMapThreshold': 3.258973967961875}
target = -883.0
训练集长度= 43
accuracy= 1.5708428538032484e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1012.55813953 -1012.55813953 -1012.55813953]  max_stds [149.92685074 149.92685074 149.92685074]
所有模型的可信度所占权重  [0.03415358670238637, 0.03466566902424986, 0.03332638022934962, 0.033307270156444004, 0.03357020232609108, 0.03353596695711568, 0.033903910640109114, 0.033835219858054474, 0.03407245626117772, 0.03424885783017255, 0.03441114727491201, 0.03446618720427828, 0.034900424756050465, 0.03427936336830101, 0.034435208618533206, 0.034728498695703845, 0.034700839346130295, 0.03453631382957751, 0.034650549581149874, 0.03475806559776277, 0.03472990665572661, 0.03436110255572079, 0.03485662194473868, 0.035235285780066516, 0.03556673301184557, 0.035127651881978667, 0.03515469478659724, 0.03508893332051411, 0.03539295180526199]
三个函数的累计增益为[0.09753011798573416, 0.09753011798573416, 0.09753011798573416]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 2 1 0 1 1 1 1 2 2 2 2 2 2 0 1 0 1 1 0 2 1 2 0 0 0 2 2 0 1 2 1 0 0 0
 0 0 2 2 1 0 0 2 0 2 1 2 1 1 1 0 1 1 1 0 2 1 1 0 0 1 0 1 0 0 0 1 2 1 0 2 0
 0 0 2 1 0 1 0 1 1 0 2 1 0 0 2 0 1 1 0 0 0 0 1 2 1 1]
每个概率被转中的次数, count: [39 36 25]
choose which one? [0]
ys [2.49850067 2.49850067 2.49850067 ... 2.49850067 2.49850067 2.49850067]
29 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6972]
configNum = 44	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 44 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669290561.0
1669291539.0
978.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 59.459261881199765, 'spark.broadcast.checksum': 0.9167114683030403, 'spark.broadcast.compress': 0.8958436030103947, 'spark.default.parallelism': 233.77479344749779, 'spark.executor.cores': 2.9942733872321137, 'spark.executor.instances': 7.395906821488487, 'spark.executor.memory': 4.534427575442214, 'spark.executor.memoryOverhead': 836.6834208623197, 'spark.kryoserializer.buffer': 100.82191588112545, 'spark.kryoserializer.buffer.max': 63.81628106273893, 'spark.locality.wait': 4.340027327965827, 'spark.maxRemoteBlockSizeFetchToMem': 1997005525.9376073, 'spark.memory.fraction': 0.675658869365661, 'spark.memory.offHeap.enabled': 0.6022938684915475, 'spark.memory.offHeap.size': 470.2657481477952, 'spark.memory.storageFraction': 0.5649239814678919, 'spark.rdd.compress': 0.2337177939191346, 'spark.reducer.maxBlocksInFlightPerAddress': 1539712147.2609944, 'spark.reducer.maxSizeInFlight': 68.64302422243915, 'spark.scheduler.revive.interval': 927.0091373218606, 'spark.shuffle.file.buffer': 30.15364540402017, 'spark.shuffle.io.numConnectionsPerPeer': 1.3936844017439503, 'spark.shuffle.sort.bypassMergeThreshold': 225.38468390350027, 'spark.sql.autoBroadcastJoinThreshold': 8281350.595024522, 'spark.sql.inMemoryColumnarStorage.batchSize': 11767.065204627754, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5159243201490313, 'spark.sql.shuffle.partitions': 351.37860879862507, 'spark.storage.memoryMapThreshold': 1.8193894154381}
target = -978.0
训练集长度= 44
accuracy= 1.574278418664076e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1011.77272727 -1011.77272727 -1011.77272727]  max_stds [148.30280198 148.30280198 148.30280198]
所有模型的可信度所占权重  [0.03298364496910435, 0.03347818575178941, 0.0321847747110391, 0.03216631925962356, 0.032420244606034966, 0.03238718198027004, 0.03274252163798254, 0.032676183880028055, 0.03290529367638855, 0.03307565255478161, 0.03323238272412413, 0.03328553724359411, 0.03370489985299484, 0.03310511311621512, 0.03325561983893719, 0.033538863173309494, 0.03351215130335686, 0.03335326165953633, 0.03346358422991452, 0.033567417251943926, 0.033540222903223844, 0.03318405230235128, 0.033662597520605964, 0.03402829010850099, 0.034348383512284815, 0.03392434324306321, 0.033950459784574505, 0.03388695099796199, 0.03418055523497375, 0.03425531097149096]
三个函数的累计增益为[0.0958099745039625, 0.0958099745039625, 0.0958099745039625]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 0 0 0 1 1 2 1 2 1 1 1 0 0 0 1 1 2 1 0 0 1 0 2 0 1 1 2 2 1 1 0 2
 2 0 2 1 2 2 2 2 1 1 1 1 0 0 0 0 2 0 1 0 0 0 2 0 1 1 0 0 0 1 1 1 2 0 2 0 1
 2 2 2 0 0 2 1 0 0 2 1 0 0 2 0 2 2 0 1 2 2 0 1 1 2 1]
每个概率被转中的次数, count: [36 34 30]
choose which one? [0]
ys [2.38890883 2.38890883 2.38890883 ... 2.38890883 2.38890883 2.38890883]
30 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3139]
configNum = 45	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 45 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669291566.0
1669292564.0
998.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config46 =================
2022年 12月 14日 星期三 00:27:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 81713 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 52.385680037430355, 'spark.broadcast.checksum': 0.9501462125492888, 'spark.broadcast.compress': 0.524992566531631, 'spark.default.parallelism': 389.7405719555493, 'spark.executor.cores': 2.404893732417837, 'spark.executor.instances': 4.024955548204023, 'spark.executor.memory': 6.798644249522271, 'spark.executor.memoryOverhead': 488.4143376978701, 'spark.kryoserializer.buffer': 97.62842766465054, 'spark.kryoserializer.buffer.max': 96.36940222822346, 'spark.locality.wait': 8.76548671621208, 'spark.maxRemoteBlockSizeFetchToMem': 1800934308.4227657, 'spark.memory.fraction': 0.6839408720909184, 'spark.memory.offHeap.enabled': 0.9865250855261207, 'spark.memory.offHeap.size': 281.7841079047108, 'spark.memory.storageFraction': 0.8251710412432569, 'spark.rdd.compress': 0.4148943709078686, 'spark.reducer.maxBlocksInFlightPerAddress': 1713013366.3167717, 'spark.reducer.maxSizeInFlight': 65.63716776144116, 'spark.scheduler.revive.interval': 830.7663594969935, 'spark.shuffle.file.buffer': 44.87342171844369, 'spark.shuffle.io.numConnectionsPerPeer': 1.5633069826675272, 'spark.shuffle.sort.bypassMergeThreshold': 215.24104599889537, 'spark.sql.autoBroadcastJoinThreshold': 5316718.901113152, 'spark.sql.inMemoryColumnarStorage.batchSize': 9466.140268868323, 'spark.sql.inMemoryColumnarStorage.compressed': 0.567794017471408, 'spark.sql.shuffle.partitions': 253.65617016968594, 'spark.storage.memoryMapThreshold': 1.1207765207521254}
target = -998.0
训练集长度= 45
accuracy= 1.575617195121557e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1011.46666667 -1011.46666667 -1011.46666667]  max_stds [146.65978772 146.65978772 146.65978772]
所有模型的可信度所占权重  [0.0318903037043404, 0.032368451458137215, 0.031117914383089557, 0.031100070692642555, 0.03134557892628, 0.031313612259833826, 0.031657173125022094, 0.03159303432986422, 0.03181454959885343, 0.031979261424237626, 0.032130796304771524, 0.03218218885919489, 0.03258765044443088, 0.032007745427515465, 0.032153263156124524, 0.032427117545590085, 0.0324012911202178, 0.0322476683474267, 0.032354333947244414, 0.03245472511414421, 0.032428432203201914, 0.032084067938942376, 0.03254675034898821, 0.03290032096561722, 0.0332098039190623, 0.03279981972898828, 0.03282507055985559, 0.03276366696134899, 0.03304753881044137, 0.033119816545161364, 0.03314798184943097]
三个函数的累计增益为[0.09379481310456081, 0.09379481310456081, 0.09379481310456081]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 1 1 1 2 2 1 2 1 1 0 0 1 0 2 1 0 1 0 2 2 1 0 0 1 1 0 2 2 2 1 1 1 1 0
 2 2 0 2 1 2 1 0 0 1 0 1 0 2 1 0 0 1 1 2 2 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 0
 1 2 0 1 0 0 1 0 0 1 0 2 2 0 0 2 2 1 1 1 1 1 2 1 1 1]
每个概率被转中的次数, count: [36 42 22]
choose which one? [1]
ys [0.03843243 0.03843243 0.03843243 ... 0.03843243 0.03843243 0.03843243]
31 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1838]
configNum = 46	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 46 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669292591.0
1669293639.0
1048.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 52.622553120301006, 'spark.broadcast.checksum': 0.9517198999440802, 'spark.broadcast.compress': 0.6626178761056715, 'spark.default.parallelism': 404.4340081272663, 'spark.executor.cores': 1.9525235960367062, 'spark.executor.instances': 4.32374895256816, 'spark.executor.memory': 6.046445904610265, 'spark.executor.memoryOverhead': 403.3405842821354, 'spark.kryoserializer.buffer': 110.11173734671854, 'spark.kryoserializer.buffer.max': 85.30628891997428, 'spark.locality.wait': 6.430312935005258, 'spark.maxRemoteBlockSizeFetchToMem': 1489033409.4366446, 'spark.memory.fraction': 0.6363807648334707, 'spark.memory.offHeap.enabled': 0.874957110131069, 'spark.memory.offHeap.size': 668.9979422619077, 'spark.memory.storageFraction': 0.8114527042004249, 'spark.rdd.compress': 0.6175511658193966, 'spark.reducer.maxBlocksInFlightPerAddress': 1608681992.199682, 'spark.reducer.maxSizeInFlight': 43.71238572252268, 'spark.scheduler.revive.interval': 746.0760337435456, 'spark.shuffle.file.buffer': 16.058531527354297, 'spark.shuffle.io.numConnectionsPerPeer': 2.892420584854926, 'spark.shuffle.sort.bypassMergeThreshold': 180.1174973941127, 'spark.sql.autoBroadcastJoinThreshold': 9741663.713563252, 'spark.sql.inMemoryColumnarStorage.batchSize': 13570.40497663086, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5452352846973032, 'spark.sql.shuffle.partitions': 334.4244673405508, 'spark.storage.memoryMapThreshold': 2.6588089048241907}
target = -1048.0
训练集长度= 46
accuracy= 1.572143177519706e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1012.26086957 -1012.26086957 -1012.26086957]  max_stds [145.15470529 145.15470529 145.15470529]
所有模型的可信度所占权重  [0.03086930468864616, 0.031332144078166826, 0.03012164416095091, 0.030104371753566988, 0.030342019802892223, 0.030311076580289014, 0.030643638011027218, 0.030581552681629067, 0.03079597592434923, 0.030955414340826763, 0.031102097685128748, 0.031151844857056958, 0.031544325196229385, 0.030982986401102138, 0.03112384523843649, 0.03138893191390722, 0.031363932346602154, 0.031215227955939433, 0.03131847855308323, 0.03141565559936695, 0.03139020448148002, 0.03105686537327133, 0.03150473455702696, 0.03184698526730125, 0.03214655982370593, 0.03174970167527757, 0.031774144076294225, 0.03171470637357264, 0.03198948978998047, 0.032059453482893595, 0.03208671704761871, 0.03201597028238019]
三个函数的累计增益为[0.09130765155797471, 0.09130765155797471, 0.09130765155797471]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 2 2 2 0 0 2 1 1 0 2 1 2 1 2 1 2 1 0 2 0 2 0 1 0 2 2 2 2 1 0 2 0 0 0 2
 2 1 2 2 2 2 1 2 0 1 2 0 2 2 0 2 0 2 0 1 0 2 0 2 0 0 2 0 2 1 0 0 2 0 1 1 1
 0 2 1 2 0 1 0 2 1 0 0 0 0 0 1 2 1 1 2 1 0 1 2 2 1 1]
每个概率被转中的次数, count: [33 26 41]
choose which one? [2]
ys [-638.34234873 -638.34234873 -638.34234873 ... -638.34234873 -638.34234873
 -638.34234873]
32 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [831]
================= config47 =================
2022年 12月 14日 星期三 01:01:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28605 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config48 =================
2022年 12月 14日 星期三 01:35:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55263 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
configNum = 47	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 47 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669293649.0
1669294672.0
1023.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.25719304563046, 'spark.broadcast.checksum': 0.9221181456971487, 'spark.broadcast.compress': 0.44411085878232903, 'spark.default.parallelism': 417.86552916969845, 'spark.executor.cores': 1.52789618853351, 'spark.executor.instances': 7.286897137171609, 'spark.executor.memory': 4.12699993643192, 'spark.executor.memoryOverhead': 406.94990641487004, 'spark.kryoserializer.buffer': 83.17306277960702, 'spark.kryoserializer.buffer.max': 119.2177012887709, 'spark.locality.wait': 9.77354470521848, 'spark.maxRemoteBlockSizeFetchToMem': 1756523125.9535975, 'spark.memory.fraction': 0.7386035423299775, 'spark.memory.offHeap.enabled': 0.9536917908105585, 'spark.memory.offHeap.size': 511.5105678041266, 'spark.memory.storageFraction': 0.8527366670885383, 'spark.rdd.compress': 0.36607635570013985, 'spark.reducer.maxBlocksInFlightPerAddress': 2018060686.5753307, 'spark.reducer.maxSizeInFlight': 61.68607386043139, 'spark.scheduler.revive.interval': 530.025821879742, 'spark.shuffle.file.buffer': 21.091190518580177, 'spark.shuffle.io.numConnectionsPerPeer': 1.5713654547562315, 'spark.shuffle.sort.bypassMergeThreshold': 150.81244901173946, 'spark.sql.autoBroadcastJoinThreshold': 12314689.222003596, 'spark.sql.inMemoryColumnarStorage.batchSize': 10334.183588160802, 'spark.sql.inMemoryColumnarStorage.compressed': 0.2937745141173508, 'spark.sql.shuffle.partitions': 259.63623517069294, 'spark.storage.memoryMapThreshold': 3.242655192158048}
target = -1023.0
训练集长度= 47
accuracy= 1.5711437025591722e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1012.4893617 -1012.4893617 -1012.4893617]  max_stds [143.61056565 143.61056565 143.61056565]
所有模型的可信度所占权重  [0.029912244002791133, 0.030360733688356907, 0.029187763669941212, 0.029171026769988506, 0.029401306865698543, 0.029371322995505305, 0.02969357381270033, 0.02963341335425521, 0.029841188696810114, 0.029995683942660233, 0.03013781956994957, 0.030186024398667747, 0.030566336420270936, 0.030022401168815317, 0.03015889287003087, 0.030415760894709303, 0.03039153640488889, 0.030247442391024504, 0.030347491844238624, 0.030441656048752708, 0.030416994008060298, 0.030093989624224, 0.030527973234834988, 0.030859612928670354, 0.03114989958457616, 0.030765345481721645, 0.030789030079434437, 0.030731435161612166, 0.030997699293001384, 0.03106549385704686, 0.031091912152135425, 0.031023358793853886, 0.031003635990772407]
三个函数的累计增益为[0.0891016567464603, 0.0891016567464603, 0.0891016567464603]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 2 2 0 1 2 0 0 1 1 0 2 1 0 2 1 2 0 0 1 2 2 1 0 0 1 0 2 2 1 1 1 0 1 1 2
 0 0 0 2 1 1 2 1 1 1 0 0 1 1 1 2 2 2 2 0 2 0 0 0 0 0 2 0 0 1 1 1 2 0 1 2 0
 1 2 2 1 1 2 2 2 0 2 1 0 1 1 1 1 1 0 1 2 1 0 2 0 2 2]
每个概率被转中的次数, count: [31 37 32]
choose which one? [1]
ys [0.03484969 0.03484969 0.03484969 ... 0.03484969 0.03484969 0.03484969]
33 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9288]
configNum = 48	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 48 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669294688.0
1669295736.0
1048.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 43.397406179048645, 'spark.broadcast.checksum': 0.6015971326368169, 'spark.broadcast.compress': 0.9250432256472738, 'spark.default.parallelism': 227.1875703965012, 'spark.executor.cores': 1.4032900396303172, 'spark.executor.instances': 4.352788522005462, 'spark.executor.memory': 3.995416279320364, 'spark.executor.memoryOverhead': 652.8267268599056, 'spark.kryoserializer.buffer': 42.31432702290956, 'spark.kryoserializer.buffer.max': 74.46665866466074, 'spark.locality.wait': 5.275024596440297, 'spark.maxRemoteBlockSizeFetchToMem': 1480998653.166612, 'spark.memory.fraction': 0.6355030864755055, 'spark.memory.offHeap.enabled': 0.7711319118136436, 'spark.memory.offHeap.size': 327.70330527987926, 'spark.memory.storageFraction': 0.6326258960568472, 'spark.rdd.compress': 0.5394370080426181, 'spark.reducer.maxBlocksInFlightPerAddress': 1320958380.9836369, 'spark.reducer.maxSizeInFlight': 67.03478623752333, 'spark.scheduler.revive.interval': 998.6803650920027, 'spark.shuffle.file.buffer': 23.90276895336684, 'spark.shuffle.io.numConnectionsPerPeer': 2.129337879737247, 'spark.shuffle.sort.bypassMergeThreshold': 277.3809376799969, 'spark.sql.autoBroadcastJoinThreshold': 9769146.265966784, 'spark.sql.inMemoryColumnarStorage.batchSize': 8608.845843567124, 'spark.sql.inMemoryColumnarStorage.compressed': 0.22218854850572256, 'spark.sql.shuffle.partitions': 319.1535604186407, 'spark.storage.memoryMapThreshold': 1.1507383462730134}
target = -1048.0
训练集长度= 48
accuracy= 1.567907633890802e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1013.22916667 -1013.22916667 -1013.22916667]  max_stds [142.19722799 142.19722799 142.19722799]
所有模型的可信度所占权重  [0.02901454055580563, 0.029449570511080613, 0.028311802773999754, 0.02829556816911986, 0.028518937274277942, 0.028489853257122274, 0.028802432928636528, 0.028744077959973895, 0.02894561770745968, 0.02909547635985564, 0.029233346321133922, 0.029280104463308036, 0.029649002850658596, 0.029121391769001907, 0.029253787185409986, 0.029502946282896174, 0.029479448799983408, 0.029339679225733915, 0.029436726071085818, 0.02952806429133182, 0.029504142388990018, 0.02919083176630164, 0.029611790991876708, 0.029933477768228335, 0.03021505256247655, 0.029842039403980895, 0.029865013197616093, 0.029809146774528384, 0.03006741998993904, 0.030133179955248796, 0.03015880540461966, 0.030092309417427566, 0.030073178520065656, 0.030011237100825285]
三个函数的累计增益为[0.08676794985886321, 0.08676794985886321, 0.08676794985886321]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: ================= config49 =================
2022年 12月 14日 星期三 02:09:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 81860 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config50 =================
2022年 12月 14日 星期三 02:43:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28600 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[2 1 2 1 2 1 0 2 1 0 2 2 2 1 1 2 2 1 0 2 2 0 1 0 0 0 2 1 2 0 1 1 2 2 1 1 2
 1 0 1 2 1 1 1 0 0 2 0 2 2 2 2 0 2 1 2 1 1 0 1 2 1 1 1 2 0 2 0 1 1 0 2 1 0
 2 2 2 2 2 2 2 2 1 2 0 0 0 2 1 0 0 2 1 1 2 0 1 2 2 1]
每个概率被转中的次数, count: [24 34 42]
choose which one? [2]
ys [-646.92910735 -646.92910735 -646.92910735 ... -646.92910735 -646.92910735
 -646.92910735]
34 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [6561]
configNum = 49	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 49 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669295763.0
1669296711.0
948.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.41455229542385, 'spark.broadcast.checksum': 0.6491952332195835, 'spark.broadcast.compress': 0.9604290404593894, 'spark.default.parallelism': 279.5499689618409, 'spark.executor.cores': 1.1366806115742443, 'spark.executor.instances': 6.724351487529361, 'spark.executor.memory': 3.097291622332237, 'spark.executor.memoryOverhead': 711.6684431139905, 'spark.kryoserializer.buffer': 71.17591593301562, 'spark.kryoserializer.buffer.max': 43.05468116721837, 'spark.locality.wait': 8.79349337430955, 'spark.maxRemoteBlockSizeFetchToMem': 1670089629.4716377, 'spark.memory.fraction': 0.7833114631670155, 'spark.memory.offHeap.enabled': 0.47796748246142107, 'spark.memory.offHeap.size': 948.8736778973168, 'spark.memory.storageFraction': 0.6245042447138895, 'spark.rdd.compress': 0.7218536778729221, 'spark.reducer.maxBlocksInFlightPerAddress': 1783630483.5390615, 'spark.reducer.maxSizeInFlight': 62.2861069944101, 'spark.scheduler.revive.interval': 872.0286715887128, 'spark.shuffle.file.buffer': 47.94815032537359, 'spark.shuffle.io.numConnectionsPerPeer': 2.406960430229945, 'spark.shuffle.sort.bypassMergeThreshold': 338.34203296873034, 'spark.sql.autoBroadcastJoinThreshold': 15214694.783578644, 'spark.sql.inMemoryColumnarStorage.batchSize': 6056.664926872451, 'spark.sql.inMemoryColumnarStorage.compressed': 0.689197091920397, 'spark.sql.shuffle.partitions': 325.6459779061547, 'spark.storage.memoryMapThreshold': 1.5656913987003371}
target = -948.0
训练集长度= 49
accuracy= 1.5737306273132147e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1011.89795918 -1011.89795918 -1011.89795918]  max_stds [141.04062881 141.04062881 141.04062881]
所有模型的可信度所占权重  [0.02816610167391233, 0.02858841054790279, 0.02748391324585937, 0.027468153370882084, 0.027684990749871168, 0.0276567572032218, 0.027960196466446905, 0.027903547905103382, 0.028099194257252266, 0.028244670765211498, 0.02837850915357658, 0.028423900001107883, 0.028782011116652642, 0.028269828359815858, 0.02839835228913804, 0.02864022551333328, 0.028617415140322924, 0.028481732687186755, 0.02857594170311298, 0.028664609024700066, 0.028641386643070532, 0.028337237803036878, 0.028745887401513678, 0.02905816746097028, 0.02933150848694145, 0.02896940292377776, 0.028991704921154555, 0.02893747213570618, 0.02918819296414436, 0.02925202998632381, 0.02927690610011342, 0.029212354578694106, 0.029193783104189026, 0.029133652966722427, 0.029241851349030897]
三个函数的累计增益为[0.08575330357344206, 0.08575330357344206, 0.08575330357344206]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 1 0 0 1 2 2 1 2 0 0 2 2 1 2 2 0 1 2 2 0 1 2 0 2 2 1 2 0 2 1 1 2 2 0 0
 0 2 2 1 2 0 2 0 0 2 2 2 0 2 0 1 1 2 0 2 1 0 0 1 1 0 0 2 1 0 2 0 0 2 0 1 1
 1 2 1 2 2 0 1 1 0 0 2 0 0 2 0 2 0 2 1 2 2 0 0 1 1 1]
每个概率被转中的次数, count: [34 28 38]
choose which one? [2]
ys [-648.57729937 -648.57729937 -648.57729937 ... -648.57729937 -648.57729937
 -648.57729937]
35 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5559]
configNum = 50	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 50 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669296727.0
1669297735.0
1008.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 45.58297415922232, 'spark.broadcast.checksum': 0.3915553636198582, 'spark.broadcast.compress': 0.38895373739369177, 'spark.default.parallelism': 439.2897464954312, 'spark.executor.cores': 1.170855070360673, 'spark.executor.instances': 6.508972925646377, 'spark.executor.memory': 3.4788326278851356, 'spark.executor.memoryOverhead': 815.4658576364144, 'spark.kryoserializer.buffer': 104.8992081114736, 'spark.kryoserializer.buffer.max': 61.37346545066728, 'spark.locality.wait': 6.268061772665202, 'spark.maxRemoteBlockSizeFetchToMem': 1119356755.2027166, 'spark.memory.fraction': 0.6056196126451947, 'spark.memory.offHeap.enabled': 0.12786854764752253, 'spark.memory.offHeap.size': 261.54796463955176, 'spark.memory.storageFraction': 0.8296270962011548, 'spark.rdd.compress': 0.8225150528059328, 'spark.reducer.maxBlocksInFlightPerAddress': 1739266159.4334917, 'spark.reducer.maxSizeInFlight': 40.043900763449415, 'spark.scheduler.revive.interval': 786.1401083608326, 'spark.shuffle.file.buffer': 30.13587002637467, 'spark.shuffle.io.numConnectionsPerPeer': 1.5485507889511996, 'spark.shuffle.sort.bypassMergeThreshold': 219.8547635865807, 'spark.sql.autoBroadcastJoinThreshold': 12581084.905630682, 'spark.sql.inMemoryColumnarStorage.batchSize': 10748.902124221862, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8673339636284759, 'spark.sql.shuffle.partitions': 330.7722300225213, 'spark.storage.memoryMapThreshold': 1.4761075277757767}
target = -1008.0
训练集长度= 50
accuracy= 1.574071637674603e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1011.82 -1011.82 -1011.82]  max_stds [139.62416553 139.62416553 139.62416553]
所有模型的可信度所占权重  ================= config51 =================
2022年 12月 14日 星期三 03:17:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 54840 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config52 =================
2022年 12月 14日 星期三 03:51:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 81603 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[0.02736570441355665, 0.027776012519046052, 0.026702901761894805, 0.026687589735927702, 0.02689826523827177, 0.026870834005469378, 0.02716565042277205, 0.02711061164590731, 0.027300698307685424, 0.027442040803782996, 0.027572075901205726, 0.027616176875170928, 0.027964111532535446, 0.027466483493995136, 0.027591355153574398, 0.027826355056490015, 0.027804192886780085, 0.027672366127450103, 0.027763898001927325, 0.02785004566061952, 0.02782748319035615, 0.02753197736031805, 0.027929014346483316, 0.0282324203307503, 0.028497993813635, 0.028146178219032494, 0.028167846459639982, 0.02811515480946822, 0.028358750893896053, 0.02842077385681188, 0.028444943065061064, 0.02838222590685942, 0.02836418217870301, 0.02830576076180592, 0.028410884466270176, 0.028417040796846104]
三个函数的累计增益为[0.08387140042882282, 0.08387140042882282, 0.08387140042882282]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 2 1 2 1 1 2 2 0 1 0 2 1 0 0 1 1 0 2 0 2 0 2 0 2 2 0 1 1 0 1 2 1 0 1 0
 2 1 1 0 0 2 1 2 2 0 2 2 2 1 2 0 2 1 2 2 1 2 2 0 2 2 1 1 2 0 2 1 0 1 0 1 2
 2 0 2 0 2 1 2 1 1 0 2 1 1 0 0 1 0 0 1 2 2 1 0 0 2 1]
每个概率被转中的次数, count: [29 32 39]
choose which one? [2]
ys [-652.14814959 -652.14814959 -652.14814959 ... -652.14814959 -652.14814959
 -652.14814959]
36 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [4819]
configNum = 51	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 51 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669297744.0
1669298762.0
1018.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 61.102192058678476, 'spark.broadcast.checksum': 0.29482348739231246, 'spark.broadcast.compress': 0.21664418646006622, 'spark.default.parallelism': 367.6874440287536, 'spark.executor.cores': 1.254814090589531, 'spark.executor.instances': 4.168775367799435, 'spark.executor.memory': 6.5348586616188715, 'spark.executor.memoryOverhead': 539.0952233068949, 'spark.kryoserializer.buffer': 57.72297900687865, 'spark.kryoserializer.buffer.max': 104.33632256373288, 'spark.locality.wait': 9.976866650847828, 'spark.maxRemoteBlockSizeFetchToMem': 1076893377.989014, 'spark.memory.fraction': 0.7209593921426604, 'spark.memory.offHeap.enabled': 0.23130486621143787, 'spark.memory.offHeap.size': 649.019783668368, 'spark.memory.storageFraction': 0.8523156459275318, 'spark.rdd.compress': 0.7894904752250153, 'spark.reducer.maxBlocksInFlightPerAddress': 1528462621.9462075, 'spark.reducer.maxSizeInFlight': 58.05552610072101, 'spark.scheduler.revive.interval': 801.428148506287, 'spark.shuffle.file.buffer': 45.95486666037729, 'spark.shuffle.io.numConnectionsPerPeer': 1.2207021051743416, 'spark.shuffle.sort.bypassMergeThreshold': 305.5661111852718, 'spark.sql.autoBroadcastJoinThreshold': 5640377.707573189, 'spark.sql.inMemoryColumnarStorage.batchSize': 6606.763879567742, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8659886635914665, 'spark.sql.shuffle.partitions': 281.97570774998195, 'spark.storage.memoryMapThreshold': 1.806293210099731}
target = -1018.0
训练集长度= 51
accuracy= 1.573541585377742e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1011.94117647 -1011.94117647 -1011.94117647]  max_stds [138.25117973 138.25117973 138.25117973]
所有模型的可信度所占权重  [0.026609787625879087, 0.027008761881511294, 0.025965293424960435, 0.025950404359692866, 0.026155260419329827, 0.02612858691339127, 0.02641525968214194, 0.02636174122921173, 0.02654657716926238, 0.02668401539291742, 0.026810458559665035, 0.02685334134220094, 0.02719166507764136, 0.026707782908115308, 0.02682920526551858, 0.02705771381820137, 0.02703616382919331, 0.0269079784912182, 0.026996982001013876, 0.027080750022023793, 0.02705881078987576, 0.026771467651884852, 0.027157537373380607, 0.02745256244139112, 0.027710800046819837, 0.027368702576410584, 0.02738977228001032, 0.02733853611961267, 0.027575403403391017, 0.027635713119749, 0.027659214707315583, 0.027598229971274306, 0.027580684661021544, 0.027523877005974872, 0.027626096901650344, 0.027632083177271262, 0.02762277835987629]
三个函数的累计增益为[0.08194565761070743, 0.08194565761070743, 0.08194565761070743]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 2 1 1 2 0 1 0 0 1 1 0 2 0 1 0 0 1 1 0 0 2 0 2 0 0 2 0 0 1 1 0 1 0 0 1
 0 2 0 2 0 0 1 2 1 0 2 1 2 0 2 1 1 2 1 0 2 1 2 0 2 0 0 0 0 2 1 0 0 2 2 2 0
 2 1 1 2 0 2 0 2 0 2 0 1 0 0 1 0 2 2 0 0 1 2 2 1 2 1]
每个概率被转中的次数, count: [41 29 30]
choose which one? [0]
ys [1.60864637 1.60864637 1.60864637 ... 1.60864637 1.60864637 1.60864637]
37 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5602]
configNum = 52	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 52 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669298766.0
1669299936.0
1170.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 46.78513061404375, 'spark.broadcast.checksum': 0.7432591124790681, 'spark.broadcast.compress': 0.25012179771076026, 'spark.default.parallelism': 249.87313149546205, 'spark.executor.cores': 1.4708809372954859, 'spark.executor.instances': 4.8052287711806825, 'spark.executor.memory': 4.990777047817492, 'spark.executor.memoryOverhead': 807.5337932132762, 'spark.kryoserializer.buffer': 80.01605974411801, 'spark.kryoserializer.buffer.max': 70.33952985549023, 'spark.locality.wait': 4.4974444842071835, 'spark.maxRemoteBlockSizeFetchToMem': 1328074340.416945, 'spark.memory.fraction': 0.5346298929925094, 'spark.memory.offHeap.enabled': 0.15430872055189693, 'spark.memory.offHeap.size': 364.4540924737345, 'spark.memory.storageFraction': 0.8842905224019628, 'spark.rdd.compress': 0.6380428093189223, 'spark.reducer.maxBlocksInFlightPerAddress': 1089946884.3449264, 'spark.reducer.maxSizeInFlight': 64.52241260235937, 'spark.scheduler.revive.interval': 683.8513624746234, 'spark.shuffle.file.buffer': 23.536023313184227, 'spark.shuffle.io.numConnectionsPerPeer': 1.3848222904363403, 'spark.shuffle.sort.bypassMergeThreshold': 245.1098351260328, 'spark.sql.autoBroadcastJoinThreshold': 5842491.099800408, 'spark.sql.inMemoryColumnarStorage.batchSize': 5585.735146033688, 'spark.sql.inMemoryColumnarStorage.compressed': 0.26192325516948345, 'spark.sql.shuffle.partitions': 366.1580134846294, 'spark.storage.memoryMapThreshold': 3.430200736265562}
target = -1170.0
训练集长度= 52
accuracy= 1.560245740991353e-07
所有模型的可信度  ================= config53 =================
2022年 12月 14日 星期三 04:25:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28681 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config54 =================
2022年 12月 14日 星期三 04:59:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 54970 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1014.98076923 -1014.98076923 -1014.98076923]  max_stds [138.62546253 138.62546253 138.62546253]
所有模型的可信度所占权重  [0.02590039204697616, 0.02628872996920275, 0.025273079544129974, 0.02525858740939125, 0.025457982170912604, 0.025432019759232025, 0.025711050062074928, 0.02565895836814153, 0.025838866730394948, 0.025972640961326558, 0.026095713254742366, 0.02613745281671711, 0.02646675711293713, 0.025995774853647034, 0.026113960188465502, 0.026336376886553516, 0.02631540140295462, 0.026190633383197836, 0.02627726413086389, 0.026358798963672787, 0.02633744461384359, 0.026057761813266293, 0.026433539225878266, 0.026720699162386993, 0.026972052360537707, 0.026639074934094016, 0.02665958293630806, 0.026609712690820256, 0.026840265282942227, 0.026898967190671644, 0.026921842244778005, 0.026862483312848226, 0.026845405746483496, 0.026790112537921875, 0.02688960733322873, 0.02689543401954667, 0.026886377261114633, 0.026659197317794793]
三个函数的累计增益为[0.08023299016335195, 0.08023299016335195, 0.08023299016335195]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 0 1 0 0 0 2 0 0 0 1 2 2 2 2 0 0 1 1 1 0 2 0 0 2 2 2 1 0 1 1 1 2 0 1 2
 2 1 0 1 2 1 0 2 1 2 0 2 2 0 0 2 0 0 1 1 0 1 0 1 0 0 1 1 2 1 0 1 2 0 0 1 1
 2 0 2 2 0 1 2 1 0 1 2 2 2 1 0 2 0 0 2 2 2 1 1 2 0 0]
每个概率被转中的次数, count: [36 31 33]
choose which one? [0]
ys [1.54415908 1.54415908 1.54415908 ... 1.54415908 1.54415908 1.54415908]
38 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [7162]
configNum = 53	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 53 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669299950.0
1669300863.0
913.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 34.286792343523366, 'spark.broadcast.checksum': 0.37538641812635654, 'spark.broadcast.compress': 0.8487997281633176, 'spark.default.parallelism': 486.6731771505397, 'spark.executor.cores': 2.0565460246673086, 'spark.executor.instances': 7.70616372526502, 'spark.executor.memory': 6.120834233352161, 'spark.executor.memoryOverhead': 875.0047581978392, 'spark.kryoserializer.buffer': 63.66761567026023, 'spark.kryoserializer.buffer.max': 60.27600722356864, 'spark.locality.wait': 6.42096777614926, 'spark.maxRemoteBlockSizeFetchToMem': 1216855815.592342, 'spark.memory.fraction': 0.8718243307063576, 'spark.memory.offHeap.enabled': 0.8442876061494473, 'spark.memory.offHeap.size': 501.17471922948243, 'spark.memory.storageFraction': 0.6672812032844067, 'spark.rdd.compress': 0.016657042581252668, 'spark.reducer.maxBlocksInFlightPerAddress': 1299862145.975981, 'spark.reducer.maxSizeInFlight': 40.693545352009664, 'spark.scheduler.revive.interval': 853.5704542042349, 'spark.shuffle.file.buffer': 32.04728512607615, 'spark.shuffle.io.numConnectionsPerPeer': 2.813734983218769, 'spark.shuffle.sort.bypassMergeThreshold': 248.8778255199074, 'spark.sql.autoBroadcastJoinThreshold': 11675498.103187602, 'spark.sql.inMemoryColumnarStorage.batchSize': 10259.916944393115, 'spark.sql.inMemoryColumnarStorage.compressed': 0.0864260127829296, 'spark.sql.shuffle.partitions': 327.8665081413395, 'spark.storage.memoryMapThreshold': 3.248886937379459}
target = -913.0
训练集长度= 53
accuracy= 1.5686624617835268e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1013.05660377 -1013.05660377 -1013.05660377]  max_stds [138.01072082 138.01072082 138.01072082]
所有模型的可信度所占权重  [0.025224304756046936, 0.025602505753190417, 0.024613367218098814, 0.02459925337678891, 0.024793443264812677, 0.024768158559343927, 0.025039905233383297, 0.024989173307756397, 0.02516438545703239, 0.025294667730883864, 0.025414527423760918, 0.025455177442869716, 0.025775885790074022, 0.025317197750855256, 0.02543229805118081, 0.025648908925843636, 0.025628480972871175, 0.025506969817810452, 0.02559133921177211, 0.025670745711383187, 0.025649948781862508, 0.025377566642472843, 0.025743535001522058, 0.026023199098462586, 0.026267991133272765, 0.025943705536890047, 0.02596367821131314, 0.025915109746860492, 0.026139644141375967, 0.02619681373200002, 0.026219091670304714, 0.02616128220602037, 0.026144650421540263, 0.026090800551578128, 0.026187698198297478, 0.02619337278851739, 0.026184552441922745, 0.025963302658739244, 0.02610336128128832]
三个函数的累计增益为[0.08001221369774274, 0.08001221369774274, 0.08001221369774274]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 2 1 2 0 2 0 1 0 0 1 0 1 0 1 1 0 1 2 0 2 0 0 1 1 2 1 0 0 2 0 1 1 0 1 2
 2 0 0 1 0 0 2 0 0 1 0 1 2 2 2 1 0 2 0 1 1 1 0 1 0 0 0 1 2 2 1 2 1 2 1 2 1
 1 1 0 2 1 2 1 0 2 0 0 1 0 0 2 1 2 1 2 0 1 0 2 1 0 1]
每个概率被转中的次数, count: [36 36 28]
choose which one? [1]
ys [0.02927431 0.02927431 0.02927431 ... 0.02927431 0.02927431 0.02927431]
39 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2945]
configNum = 54	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 54 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669300873.0
1669302658.0
1785.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config55 =================
2022年 12月 14日 星期三 05:33:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:   389 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 61.86836289861495, 'spark.broadcast.checksum': 0.13570790577925285, 'spark.broadcast.compress': 0.5990615811873077, 'spark.default.parallelism': 283.0106247235532, 'spark.executor.cores': 1.334855189718098, 'spark.executor.instances': 7.673106566380273, 'spark.executor.memory': 6.671873933883234, 'spark.executor.memoryOverhead': 425.3507831672644, 'spark.kryoserializer.buffer': 46.556830042311695, 'spark.kryoserializer.buffer.max': 95.96503860122164, 'spark.locality.wait': 7.079631895019229, 'spark.maxRemoteBlockSizeFetchToMem': 2147254927.2954664, 'spark.memory.fraction': 0.7540984190800929, 'spark.memory.offHeap.enabled': 0.7092944760630131, 'spark.memory.offHeap.size': 831.2302557571718, 'spark.memory.storageFraction': 0.8098385161384496, 'spark.rdd.compress': 0.8501386432335762, 'spark.reducer.maxBlocksInFlightPerAddress': 2039293610.899716, 'spark.reducer.maxSizeInFlight': 52.58855355663131, 'spark.scheduler.revive.interval': 579.7076535805322, 'spark.shuffle.file.buffer': 18.458258323132764, 'spark.shuffle.io.numConnectionsPerPeer': 2.5913654585079033, 'spark.shuffle.sort.bypassMergeThreshold': 322.473882372322, 'spark.sql.autoBroadcastJoinThreshold': 11315701.558124818, 'spark.sql.inMemoryColumnarStorage.batchSize': 8156.220791672753, 'spark.sql.inMemoryColumnarStorage.compressed': 0.4731208868854412, 'spark.sql.shuffle.partitions': 394.48068192832267, 'spark.storage.memoryMapThreshold': 1.608528545715307}
target = -1785.0
训练集长度= 54
accuracy= 1.506131914714497e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1027.35185185 -1027.35185185 -1027.35185185]  max_stds [171.82841974 171.82841974 171.82841974]
所有模型的可信度所占权重  [0.02460756965787173, 0.024976523627937196, 0.024011569563238275, 0.02399780080582226, 0.024187242744564047, 0.024162576250992926, 0.024427678709728312, 0.02437818718138628, 0.02454911538772984, 0.024676212255611504, 0.0247931413749735, 0.02483279749975029, 0.025145664517097873, 0.024698191415838164, 0.024810477509956335, 0.02502179224146109, 0.025001863752624656, 0.024883323549384828, 0.02496563010883148, 0.02504309511686104, 0.025022806672965386, 0.024757084286028855, 0.025114104706412163, 0.025386931006792953, 0.025625737868133287, 0.025309381065469806, 0.025328865407332684, 0.02528148444346656, 0.025500528964497532, 0.025556300756711395, 0.025578033998676572, 0.025521637977734896, 0.02550541284094373, 0.025452879602110144, 0.025547408098113927, 0.025552943944412442, 0.025544339255588175, 0.02532849903703183, 0.025465133221557204, 0.02445003357435889]
三个函数的累计增益为[0.10473771332244404, 0.10473771332244404, 0.10473771332244404]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 1 0 2 0 1 0 0 0 1 1 2 0 2 0 0 1 0 2 0 2 0 2 2 2 2 0 2 0 0 0 0 1 2 2 2 0
 1 0 0 0 1 0 0 0 2 2 1 2 1 2 2 1 1 0 2 1 0 1 1 2 2 2 2 0 0 2 2 2 1 1 0 1 0
 2 0 1 1 1 2 1 0 0 2 2 2 1 1 0 1 2 2 0 2 2 2 0 2 2 2]
每个概率被转中的次数, count: [35 26 39]
choose which one? [2]
ys [-584.7218426 -584.7218426 -584.7218426 ... -584.7218426 -584.7218426
 -584.7218426]
40 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5907]
configNum = 55	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 55 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669302707.0
1669303730.0
1023.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.816345795720835, 'spark.broadcast.checksum': 0.034623388756763185, 'spark.broadcast.compress': 0.3933552778929289, 'spark.default.parallelism': 471.6765297478975, 'spark.executor.cores': 1.679036242329445, 'spark.executor.instances': 4.523639217961866, 'spark.executor.memory': 3.8132960891378573, 'spark.executor.memoryOverhead': 546.8379512871257, 'spark.kryoserializer.buffer': 110.40177971859015, 'spark.kryoserializer.buffer.max': 62.340766090178526, 'spark.locality.wait': 7.14351956987325, 'spark.maxRemoteBlockSizeFetchToMem': 1945666174.5611546, 'spark.memory.fraction': 0.7849788434928532, 'spark.memory.offHeap.enabled': 0.98020517300153, 'spark.memory.offHeap.size': 204.62623691123076, 'spark.memory.storageFraction': 0.5993708813753789, 'spark.rdd.compress': 0.5848081650896344, 'spark.reducer.maxBlocksInFlightPerAddress': 1726042402.4906592, 'spark.reducer.maxSizeInFlight': 57.52424094200063, 'spark.scheduler.revive.interval': 754.5930021507539, 'spark.shuffle.file.buffer': 45.862513980133734, 'spark.shuffle.io.numConnectionsPerPeer': 1.6230811877218856, 'spark.shuffle.sort.bypassMergeThreshold': 346.1439310654814, 'spark.sql.autoBroadcastJoinThreshold': 5934582.484308546, 'spark.sql.inMemoryColumnarStorage.batchSize': 14869.31373901956, 'spark.sql.inMemoryColumnarStorage.compressed': 0.06773309873539746, 'spark.sql.shuffle.partitions': 291.0815795663087, 'spark.storage.memoryMapThreshold': 1.3463256596547095}
target = -1023.0
训练集长度= 55
accuracy= 1.5064780232245174e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1027.27272727 -1027.27272727 -1027.27272727]  max_stds [170.26017039 170.26017039 170.26017039]
所有模型的可信度所占权重  ================= config56 =================
2022年 12月 14日 星期三 06:07:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28601 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config57 =================
2022年 12月 14日 星期三 06:41:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 54796 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[0.024020141433602624, 0.024380287789649888, 0.02343836896413177, 0.02342492889243449, 0.02360984850153444, 0.02358577084281044, 0.023844544815281254, 0.02379623474130528, 0.023963082575059188, 0.024087145405510584, 0.024201283210414995, 0.02423999267010933, 0.024545390972789516, 0.024108599882509994, 0.02421820549977511, 0.024424475757598974, 0.02440502299866892, 0.024289312569440173, 0.02436965431900378, 0.02444527009394196, 0.02442546597274605, 0.024166086870907433, 0.024514584553186593, 0.0247808979849097, 0.02501400408455553, 0.02470519930419282, 0.024724218518759476, 0.02467796862617975, 0.024891784149149793, 0.024946224565477293, 0.0249674389947392, 0.02491238925117876, 0.02489655143842756, 0.02484527226521818, 0.024937544191096495, 0.02494294788649973, 0.024934548607520753, 0.024723860894395672, 0.024857233368093604, 0.023866366027925218, 0.023871850509267673]
三个函数的累计增益为[0.10327925401503299, 0.10327925401503299, 0.10327925401503299]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 2 0 0 1 0 1 2 2 2 1 1 1 0 2 0 2 1 1 1 1 2 0 0 0 1 2 2 2 2 0 0 2 1 0 2
 0 0 0 2 1 2 1 0 1 2 1 2 1 2 0 1 0 2 2 2 2 0 2 2 2 2 1 1 2 1 1 1 1 1 1 0 0
 2 0 0 2 1 1 2 2 0 0 1 1 1 1 2 1 1 1 2 0 0 1 1 2 1 2]
每个概率被转中的次数, count: [28 37 35]
choose which one? [1]
ys [0.05296321 0.05296321 0.05296321 ... 0.05296321 0.05296321 0.05296321]
41 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5647]
configNum = 56	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 56 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669303775.0
1669304713.0
938.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 51.99564965052953, 'spark.broadcast.checksum': 0.29834613391913267, 'spark.broadcast.compress': 0.11109315259524732, 'spark.default.parallelism': 300.3198745076016, 'spark.executor.cores': 1.6994008202342599, 'spark.executor.instances': 5.338454363139025, 'spark.executor.memory': 5.457054820600247, 'spark.executor.memoryOverhead': 826.3031087186341, 'spark.kryoserializer.buffer': 101.63755610556184, 'spark.kryoserializer.buffer.max': 67.61642650909711, 'spark.locality.wait': 4.272589845844598, 'spark.maxRemoteBlockSizeFetchToMem': 1395982894.8827364, 'spark.memory.fraction': 0.770593515384042, 'spark.memory.offHeap.enabled': 0.5919381374872056, 'spark.memory.offHeap.size': 466.67201669996905, 'spark.memory.storageFraction': 0.5433831788797095, 'spark.rdd.compress': 0.20252850633211883, 'spark.reducer.maxBlocksInFlightPerAddress': 1498846198.510706, 'spark.reducer.maxSizeInFlight': 65.40238437719083, 'spark.scheduler.revive.interval': 887.8160740314331, 'spark.shuffle.file.buffer': 19.073217319703822, 'spark.shuffle.io.numConnectionsPerPeer': 1.486660992401968, 'spark.shuffle.sort.bypassMergeThreshold': 340.4603359619276, 'spark.sql.autoBroadcastJoinThreshold': 6973949.956746101, 'spark.sql.inMemoryColumnarStorage.batchSize': 12740.99988238149, 'spark.sql.inMemoryColumnarStorage.compressed': 0.43440199665018453, 'spark.sql.shuffle.partitions': 296.08166041512, 'spark.storage.memoryMapThreshold': 1.7037948067801967}
target = -938.0
训练集长度= 56
accuracy= 1.513451209786467e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1025.67857143 -1025.67857143 -1025.67857143]  max_stds [169.1468199 169.1468199 169.1468199]
所有模型的可信度所占权重  [0.02345757372444905, 0.02380928521298974, 0.02288942675365827, 0.022876301457390873, 0.02305689012609414, 0.023033376382172534, 0.023286089695871467, 0.02323891107600124, 0.02340185122237239, 0.023523008418712053, 0.023634473040212843, 0.023672275898581664, 0.02397052156962589, 0.02354396041757202, 0.02365099899828635, 0.023852438269301442, 0.023833441106940557, 0.02372044069302443, 0.02379890078530778, 0.0238727455884388, 0.023853405292950318, 0.02360010102241638, 0.02394043665688633, 0.024200512850680776, 0.02442815945023041, 0.024126587083479607, 0.02414516085537482, 0.024099994166080514, 0.02430880198710712, 0.024361967372628354, 0.024382684945828695, 0.024328924503924113, 0.024313457623295114, 0.02426337944247287, 0.024353490298396452, 0.024358767435654627, 0.024350564873383034, 0.024144811606811787, 0.02427506040835317, 0.02330739984118296, 0.023312755872319853, 0.023420665973539194]
三个函数的累计增益为[0.10320996464365764, 0.10320996464365764, 0.10320996464365764]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 1 1 2 0 2 1 1 0 2 0 2 1 1 2 2 0 1 1 1 0 2 2 0 2 1 1 2 1 1 2 0 2 1 0 1 0
 0 0 1 2 1 2 2 0 2 0 1 0 1 1 2 0 0 2 2 0 0 2 2 2 2 1 0 0 0 1 0 1 0 0 2 1 1
 0 1 0 1 2 0 0 2 2 2 2 2 1 1 2 0 0 2 1 0 1 0 2 1 2 1]
每个概率被转中的次数, count: [32 33 35]
choose which one? [2]
ys [-589.95636336 -589.95636336 -589.95636336 ... -589.95636336 -589.95636336
 -589.95636336]
42 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2207]
configNum = 57	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 57 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669304767.0
1669305720.0
953.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 59.3273436100186, 'spark.broadcast.checksum': 0.025893303952605362, 'spark.broadcast.compress': 0.07865475825237878, 'spark.default.parallelism': 330.51205837186365, 'spark.executor.cores': 2.4148012520956894, 'spark.executor.instances': 4.475686113068091, 'spark.executor.memory': 5.769090531978894, 'spark.executor.memoryOverhead': 722.5641844789945, 'spark.kryoserializer.buffer': 49.54468820320834, 'spark.kryoserializer.buffer.max': 94.01598307468359, 'spark.locality.wait': 6.633459574135761, 'spark.maxRemoteBlockSizeFetchToMem': 1705597042.3954976, 'spark.memory.fraction': 0.6264483930207296, 'spark.memory.offHeap.enabled': 0.49312144671574976, 'spark.memory.offHeap.size': 838.7421906092316, 'spark.memory.storageFraction': 0.7147063666642911, 'spark.rdd.compress': 0.8914699198991028, 'spark.reducer.maxBlocksInFlightPerAddress': 1976296013.3537831, 'spark.reducer.maxSizeInFlight': 42.800236587250545, 'spark.scheduler.revive.interval': 612.7821453843842, 'spark.shuffle.file.buffer': 44.98193724148473, 'spark.shuffle.io.numConnectionsPerPeer': 1.3709417851794878, 'spark.shuffle.sort.bypassMergeThreshold': 216.1425277144586, 'spark.sql.autoBroadcastJoinThreshold': 10947536.61725372, 'spark.sql.inMemoryColumnarStorage.batchSize': 13644.260501635554, 'spark.sql.inMemoryColumnarStorage.compressed': 0.616086366132937, 'spark.sql.shuffle.partitions': 284.89535613436914, 'spark.storage.memoryMapThreshold': 2.1493381876448527}
target = -953.0
训练集长度= 57
accuracy= 1.5190286135803334e-07
所有模型的可信度  ================= config58 =================
2022年 12月 14日 星期三 07:15:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 81468 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config59 =================
2022年 12月 14日 星期三 07:49:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 28059 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1024.40350877 -1024.40350877 -1024.40350877]  max_stds [167.92781027 167.92781027 167.92781027]
所有模型的可信度所占权重  [0.02291882152928125, 0.02326245522858667, 0.022363723240817427, 0.02235089939440411, 0.022527340466990696, 0.022504366765330203, 0.022751275989735725, 0.022705180925450517, 0.02286437881089692, 0.022982753379064753, 0.02309165798262752, 0.02312859261936485, 0.0234199884553894, 0.023003224171491716, 0.023107804387542886, 0.02330461718479189, 0.02328605633195918, 0.02317565120866293, 0.023252309300984677, 0.023324458103913124, 0.02330556199872207, 0.023058075390040064, 0.02339059450553331, 0.023644697506108224, 0.023867115725831767, 0.023572469598618674, 0.023590616785032426, 0.023546487443133535, 0.023750499556246453, 0.02380244388760015, 0.02382268563844259, 0.023770159917418755, 0.02375504826602144, 0.023706120235260104, 0.023794161507090825, 0.02379931744386529, 0.023791303270575513, 0.023590275557692397, 0.023717532923351593, 0.022772096703032603, 0.022777329721723017, 0.022882761441989766, 0.022967089499382976]
三个函数的累计增益为[0.1028203905395618, 0.1028203905395618, 0.1028203905395618]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 0 1 1 0 1 1 0 0 2 1 2 2 1 1 1 0 1 2 2 0 0 1 2 0 2 0 0 0 0 1 0 2 1 1 2
 0 0 0 1 1 1 1 2 0 1 0 0 1 0 2 1 0 0 2 1 0 0 1 0 2 0 1 0 1 2 1 1 0 2 1 1 1
 2 2 0 1 1 2 1 0 0 0 0 1 1 2 2 0 2 1 2 1 0 2 0 0 2 2]
每个概率被转中的次数, count: [39 36 25]
choose which one? [0]
ys [3.70368777 3.70368777 3.70368777 ... 3.70368777 3.70368777 3.70368777]
43 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5282]
configNum = 58	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 58 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669305772.0
1669306675.0
903.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 34.409244180243846, 'spark.broadcast.checksum': 0.2540109161607689, 'spark.broadcast.compress': 0.13578370680197704, 'spark.default.parallelism': 487.88523199124313, 'spark.executor.cores': 2.8721392935062235, 'spark.executor.instances': 5.779610440168367, 'spark.executor.memory': 6.368141192247657, 'spark.executor.memoryOverhead': 862.0123293365411, 'spark.kryoserializer.buffer': 88.32571954021253, 'spark.kryoserializer.buffer.max': 109.97596713237377, 'spark.locality.wait': 9.13756391284957, 'spark.maxRemoteBlockSizeFetchToMem': 1534606001.0139942, 'spark.memory.fraction': 0.8826418840303608, 'spark.memory.offHeap.enabled': 0.4211248736430283, 'spark.memory.offHeap.size': 93.02959544543558, 'spark.memory.storageFraction': 0.5654071212828296, 'spark.rdd.compress': 0.9864957784383959, 'spark.reducer.maxBlocksInFlightPerAddress': 1344877225.9375877, 'spark.reducer.maxSizeInFlight': 65.83417392461942, 'spark.scheduler.revive.interval': 515.738130844542, 'spark.shuffle.file.buffer': 30.071029500481774, 'spark.shuffle.io.numConnectionsPerPeer': 1.1020245313435775, 'spark.shuffle.sort.bypassMergeThreshold': 347.3224877417932, 'spark.sql.autoBroadcastJoinThreshold': 5558903.708362254, 'spark.sql.inMemoryColumnarStorage.batchSize': 11099.726870477767, 'spark.sql.inMemoryColumnarStorage.compressed': 0.7795112663306252, 'spark.sql.shuffle.partitions': 395.8015824837428, 'spark.storage.memoryMapThreshold': 1.696440874656147}
target = -903.0
训练集长度= 58
accuracy= 1.5281845716193968e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1022.31034483 -1022.31034483 -1022.31034483]  max_stds [167.22225628 167.22225628 167.22225628]
所有模型的可信度所占权重  [0.022401229389816747, 0.022737102563504023, 0.02185866728303975, 0.02184613304672234, 0.02201858942436583, 0.02199613455424206, 0.022237467651029054, 0.022192413584550454, 0.02234801619028227, 0.022463717420908826, 0.02257016255391445, 0.02260626306933255, 0.022891078104768977, 0.022483725906788512, 0.02258594431301877, 0.022778312346095588, 0.022760170666278192, 0.022652258900849483, 0.022727185768642022, 0.02279770518354893, 0.022779235822616997, 0.022537338381035613, 0.02286234797950674, 0.023110712390270488, 0.023328107580251622, 0.023040115657277357, 0.02305785301280041, 0.02301472027539348, 0.02321412503703469, 0.023264896272399832, 0.023284680889304923, 0.02323334139420841, 0.02321857102004333, 0.023170747965996837, 0.02325680093881359, 0.02326184043538005, 0.023254007251897878, 0.023057519491641466, 0.023181902913190142, 0.022257818155265365, 0.022262932992951734, 0.022365983673268825, 0.02244840728982561, 0.0225837152579257]
三个函数的累计增益为[0.10347446221893733, 0.10347446221893733, 0.10347446221893733]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 0 1 1 2 1 0 0 2 2 1 1 1 2 1 1 1 1 2 2 0 1 0 1 1 0 2 0 2 0 2 0 0 2 2
 1 0 0 2 2 0 1 2 2 1 0 0 2 0 2 1 1 1 2 0 2 1 2 1 0 0 1 2 0 0 1 2 2 0 0 1 1
 1 0 2 2 2 0 0 0 1 2 2 1 2 2 0 2 1 0 0 2 0 1 0 2 0 0]
每个概率被转中的次数, count: [35 31 34]
choose which one? [0]
ys [3.73811158 3.73811158 3.73811158 ... 3.73811158 3.73811158 3.73811158]
44 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [5788]
configNum = 59	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 59 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669045123.0
1669046171.0
1048.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config60 =================
2022年 12月 14日 星期三 08:23:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 54291 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 44.244115062663184, 'spark.broadcast.checksum': 0.6237069087109955, 'spark.broadcast.compress': 0.9546237158014335, 'spark.default.parallelism': 215.6057692506691, 'spark.executor.cores': 1.9353763021102242, 'spark.executor.instances': 6.277383989787603, 'spark.executor.memory': 6.847457880294796, 'spark.executor.memoryOverhead': 747.5894825420132, 'spark.kryoserializer.buffer': 47.819980163463626, 'spark.kryoserializer.buffer.max': 112.87031352276888, 'spark.locality.wait': 8.750697838665065, 'spark.maxRemoteBlockSizeFetchToMem': 2130684644.4193728, 'spark.memory.fraction': 0.7471843672517045, 'spark.memory.offHeap.enabled': 0.42913929549166907, 'spark.memory.offHeap.size': 373.36285025806967, 'spark.memory.storageFraction': 0.5796651043547628, 'spark.rdd.compress': 0.8976204403638105, 'spark.reducer.maxBlocksInFlightPerAddress': 2027518418.50569, 'spark.reducer.maxSizeInFlight': 46.25098014912348, 'spark.scheduler.revive.interval': 811.5738322055095, 'spark.shuffle.file.buffer': 43.32300785261354, 'spark.shuffle.io.numConnectionsPerPeer': 1.0106185068175564, 'spark.shuffle.sort.bypassMergeThreshold': 157.2414000586847, 'spark.sql.autoBroadcastJoinThreshold': 12071763.991783006, 'spark.sql.inMemoryColumnarStorage.batchSize': 12013.784579730782, 'spark.sql.inMemoryColumnarStorage.compressed': 0.09033201740429231, 'spark.sql.shuffle.partitions': 398.5292177318362, 'spark.storage.memoryMapThreshold': 3.1801360412072315}
target = -1048.0
训练集长度= 59
accuracy= 1.526279957511158e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1022.74576271 -1022.74576271 -1022.74576271]  max_stds [165.83222001 165.83222001 165.83222001]
所有模型的可信度所占权重  [0.021907102242001812, 0.022235566712780264, 0.021376507990277276, 0.021364250234608934, 0.021532902563085092, 0.021510943003318433, 0.021746952765715442, 0.02170289250350442, 0.021855062821194145, 0.021968211909788968, 0.022072309072107114, 0.022107613281018648, 0.022386145855851417, 0.021987779047745834, 0.022087742716584417, 0.022275867488460655, 0.0222581259784888, 0.0221525945347799, 0.022225868662946728, 0.02229483255798698, 0.022276770594902743, 0.022040208936049726, 0.022358049460756625, 0.02260093544014619, 0.022813535318972532, 0.02253189593250493, 0.022549242036782713, 0.022507060722895513, 0.022702067006916772, 0.022751718328491228, 0.022771066535583633, 0.022720859488972015, 0.02270641492026749, 0.022659646748918932, 0.02274380156207315, 0.02274872989723764, 0.022741069498406926, 0.02254891587244585, 0.02267055563987377, 0.021766854377775355, 0.02177185639218254, 0.021872633976775312, 0.021953239490144407, 0.02208556283007117, 0.022058037048607503]
三个函数的累计增益为[0.10180545235664767, 0.10180545235664767, 0.10180545235664767]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 2 0 2 1 1 1 0 0 2 2 2 0 1 0 1 0 2 2 0 0 0 1 2 0 1 0 2 1 2 2 0 2 1 1 0 0
 0 0 2 0 0 2 2 1 0 1 0 2 1 0 1 1 2 2 2 1 0 1 1 2 0 2 0 0 2 1 2 0 0 0 1 2 2
 2 0 2 2 1 0 1 1 2 0 1 0 1 0 2 0 1 1 2 2 0 2 0 1 0 2]
每个概率被转中的次数, count: [38 28 34]
choose which one? [0]
ys [3.56720647 3.56720647 3.56720647 ... 3.56720647 3.56720647 3.56720647]
45 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1781]
configNum = 60	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 60 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669308823.0
1669309710.0
887.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 63.36185589338876, 'spark.broadcast.checksum': 0.3223391147408474, 'spark.broadcast.compress': 0.11171790704017415, 'spark.default.parallelism': 471.40320027168354, 'spark.executor.cores': 2.1559088689377957, 'spark.executor.instances': 7.527529906283846, 'spark.executor.memory': 3.2257386069463707, 'spark.executor.memoryOverhead': 407.1107892716011, 'spark.kryoserializer.buffer': 125.85973363934175, 'spark.kryoserializer.buffer.max': 99.84672441335826, 'spark.locality.wait': 9.505139741030721, 'spark.maxRemoteBlockSizeFetchToMem': 1330189243.2608187, 'spark.memory.fraction': 0.7391860402558275, 'spark.memory.offHeap.enabled': 0.534632851716097, 'spark.memory.offHeap.size': 436.6589141504254, 'spark.memory.storageFraction': 0.8258008464661282, 'spark.rdd.compress': 0.10822944413710489, 'spark.reducer.maxBlocksInFlightPerAddress': 1977295289.3926086, 'spark.reducer.maxSizeInFlight': 62.552641791056985, 'spark.scheduler.revive.interval': 833.3567201337129, 'spark.shuffle.file.buffer': 19.03666038803001, 'spark.shuffle.io.numConnectionsPerPeer': 2.431067700128489, 'spark.shuffle.sort.bypassMergeThreshold': 152.61591412082905, 'spark.sql.autoBroadcastJoinThreshold': 13372853.53219388, 'spark.sql.inMemoryColumnarStorage.batchSize': 6038.216544858867, 'spark.sql.inMemoryColumnarStorage.compressed': 0.6972313746192833, 'spark.sql.shuffle.partitions': 274.72482054665153, 'spark.storage.memoryMapThreshold': 1.0044143450012977}
target = -887.0
训练集长度= 60
accuracy= 1.5361763194420468e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07, 1.5361763194420468e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1020.48333333 -1020.48333333 -1020.48333333]  max_stds [165.36016163 165.36016163 165.36016163]
所有模型的可信度所占权重  ================= config61 =================
2022年 12月 14日 星期三 08:57:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 80862 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config62 =================
2022年 12月 14日 星期三 09:31:05 CST
-----------------开始查询-------------------
-----------------数据库为tpch_hdfs_1-----------
进程0 Q2 查询中
run_cmd命令执行成功
spark-submit --class 'main.scala.TpchQuery' /usr/local/home/TPCH/target/scala-2.11/spark-tpc-h-queries_2.11-1.0.jar 2 > /usr/local/home/TPCH/result/query_result_tpch_1_12-14-09-31-05/Q02.out 2>&1 &
进程1 Q3 查询中
run_cmd命令执行成功
spark-submit --class 'main.scala.TpchQuery' /usr/local/home/TPCH/target/scala-2.11/spark-tpc-h-queries_2.11-1.0.jar 3 > /usr/local/home/TPCH/result/query_result_tpch_1_12-14-09-31-05/Q03.out 2>&1 &
进程2 Q5 查询中
run_cmd命令执行成功
spark-submit --class 'main.scala.TpchQuery' /usr/local/home/TPCH/target/scala-2.11/spark-tpc-h-queries_2.11-1.0.jar 5 > /usr/local/home/TPCH/result/query_result_tpch_1_12-14-09-31-05/Q05.out 2>&1 &
进程3 Q8 查询中
run_cmd命令执行成功
spark-submit --class 'main.scala.TpchQuery' /usr/local/home/TPCH/target/scala-2.11/spark-tpc-h-queries_2.11-1.0.jar 8 > /usr/local/home/TPCH/result/query_result_tpch_1_12-14-09-31-05/Q08.out 2>&1 &
Traceback (most recent call last):
  File "/usr/local/home/TPCH/tpchMulti.py", line 204, in <module>
    runSparkJob(arguments)
  File "/usr/local/home/TPCH/tpchMulti.py", line 52, in runSparkJob
    execsql(spendtime, thread, isExit,  log_path, result, database, resultPath, configName)
  File "/usr/local/home/TPCH/tpchMulti.py", line 96, in execsql
    for line in open(TPCH_EXECUTION_TIMES):
FileNotFoundError: [Errno 2] No such file or directory: '/usr/local/home/TPCH/runtime/config62/tpch-times.txt'
[0.0214313045462842, 0.021752635137072724, 0.02091223420673859, 0.020900242675778436, 0.021065232064794142, 0.021043749442041817, 0.02127463333704318, 0.021231530014321515, 0.02138039536334338, 0.02149108698061081, 0.021592923269290142, 0.021627460710371606, 0.02189994387000451, 0.02151022914227237, 0.021608021712315528, 0.021792060625095602, 0.021774704440826336, 0.02167146502173976, 0.02174314771800691, 0.021810613794577816, 0.021792944117078442, 0.02156152031219324, 0.021872457697105992, 0.022110068465377306, 0.02231805091322907, 0.0220425284184263, 0.022059497784769785, 0.02201823260172126, 0.022209003567918974, 0.022257576518464092, 0.022276504504194078, 0.02222738789833645, 0.022213257049467135, 0.022167504630357954, 0.02224983169533535, 0.022254652992586332, 0.022247158969028426, 0.022059178704356582, 0.022178176592433665, 0.021294102708405323, 0.021298996084668467, 0.021397584893128298, 0.021476439745131984, 0.02160588917049299, 0.021578961218137366, 0.02171887867512575]
三个函数的累计增益为[0.10277766887733888, 0.10277766887733888, 0.10277766887733888]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [2 2 1 2 2 0 2 2 1 0 2 1 1 0 0 1 0 2 1 2 1 0 1 1 0 2 0 1 1 1 1 0 0 1 2 0 1
 2 1 2 0 1 2 0 1 2 1 2 1 1 2 0 2 1 0 1 0 0 2 2 1 2 2 0 0 0 0 0 2 2 0 2 1 2
 0 2 1 1 1 1 2 2 1 0 1 0 0 0 2 2 1 0 1 2 1 2 2 0 0 1]
每个概率被转中的次数, count: [31 35 34]
choose which one? [1]
ys [0.05222765 0.05222765 0.05222765 ... 0.05222765 0.05222765 0.05222765]
46 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [507]
configNum = 61	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 61 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669047414.0
1669048563.0
1149.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 62.38719407129443, 'spark.broadcast.checksum': 0.5794720634156519, 'spark.broadcast.compress': 0.6762110690195294, 'spark.default.parallelism': 432.6918055878541, 'spark.executor.cores': 1.6566297879973937, 'spark.executor.instances': 7.325120085931866, 'spark.executor.memory': 6.178538308747886, 'spark.executor.memoryOverhead': 556.9799198459115, 'spark.kryoserializer.buffer': 41.83092109581125, 'spark.kryoserializer.buffer.max': 90.30132825825325, 'spark.locality.wait': 5.709259017337373, 'spark.maxRemoteBlockSizeFetchToMem': 1228575048.779329, 'spark.memory.fraction': 0.7518223988303492, 'spark.memory.offHeap.enabled': 0.22304020478289388, 'spark.memory.offHeap.size': 88.27396564619914, 'spark.memory.storageFraction': 0.6253635550817829, 'spark.rdd.compress': 0.5676970941368197, 'spark.reducer.maxBlocksInFlightPerAddress': 1704695305.963361, 'spark.reducer.maxSizeInFlight': 47.45277626797754, 'spark.scheduler.revive.interval': 647.8101935394759, 'spark.shuffle.file.buffer': 36.795294203019736, 'spark.shuffle.io.numConnectionsPerPeer': 2.219572074252172, 'spark.shuffle.sort.bypassMergeThreshold': 263.31774164718155, 'spark.sql.autoBroadcastJoinThreshold': 14499515.296635212, 'spark.sql.inMemoryColumnarStorage.batchSize': 5834.512064838241, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5646333879784499, 'spark.sql.shuffle.partitions': 354.70589256409176, 'spark.storage.memoryMapThreshold': 2.7333042965304113}
target = -1149.0
训练集长度= 61
accuracy= 1.5269605809811443e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07, 1.5361763194420468e-07, 1.5269605809811443e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1022.59016393 -1022.59016393 -1022.59016393]  max_stds [164.80911731 164.80911731 164.80911731]
所有模型的可信度所占权重  [0.02097841037059745, 0.021292950485672105, 0.020470309215547548, 0.020458571094010874, 0.02062007386683978, 0.02059904522273826, 0.020825049994722164, 0.02078285754720043, 0.020928577019153172, 0.0210369294606299, 0.021136613707565026, 0.021170421290794154, 0.021437146236516005, 0.021055667103121487, 0.021151393084763444, 0.021331542819844704, 0.02131455341281715, 0.02121349568694036, 0.021283663558220225, 0.021349703916955363, 0.021332407641551435, 0.02110587436925707, 0.02141024091148845, 0.02164283040199302, 0.02184641768859486, 0.02157671763604694, 0.021593328399526778, 0.021552935247437493, 0.02173967477171834, 0.021787221260885416, 0.021805749253489642, 0.021757670597733206, 0.021743838367136826, 0.021699052804902523, 0.021779640104195138, 0.021784359516027082, 0.02177702385891927, 0.02159301606203771, 0.02170949924316764, 0.020844107932199117, 0.020848897899843143, 0.020945403293499972, 0.021022591755894944, 0.021149305608595622, 0.021122946707590032, 0.021259907377640407, 0.021132366193978295]
三个函数的累计增益为[0.10089707947154808, 0.10089707947154808, 0.10089707947154808]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 2 1 0 2 1 0 2 1 0 0 1 1 0 1 1 0 2 0 1 1 2 1 1 1 2 0 0 1 1 1 0 2 0 1 1 2
 0 1 1 0 1 1 1 2 0 2 0 0 2 1 0 0 0 2 1 0 2 0 0 1 1 0 2 1 0 1 2 1 2 1 0 2 1
 0 2 1 2 2 2 1 1 0 2 1 2 0 1 0 1 1 1 0 0 0 2 0 1 0 1]
每个概率被转中的次数, count: [34 42 24]
choose which one? [1]
ys [0.05031161 0.05031161 0.05031161 ... 0.05031161 0.05031161 0.05031161]
47 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [9101]
configNum = 62	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 62 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669048713.0
1669049937.0
1224.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
================= config63 =================
2022年 12月 14日 星期三 10:03:29 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 52510 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
x_probe = {'spark.broadcast.blockSize': 54.87969768153141, 'spark.broadcast.checksum': 0.42148830178406704, 'spark.broadcast.compress': 0.03268173015722986, 'spark.default.parallelism': 355.8174694169985, 'spark.executor.cores': 2.125042010783519, 'spark.executor.instances': 4.512570354014506, 'spark.executor.memory': 6.575861248871149, 'spark.executor.memoryOverhead': 823.1144602276327, 'spark.kryoserializer.buffer': 70.20783899994483, 'spark.kryoserializer.buffer.max': 81.93924330269815, 'spark.locality.wait': 5.447757951851805, 'spark.maxRemoteBlockSizeFetchToMem': 1488847833.9684763, 'spark.memory.fraction': 0.6686810887517, 'spark.memory.offHeap.enabled': 0.4586536311639289, 'spark.memory.offHeap.size': 793.3468636982535, 'spark.memory.storageFraction': 0.5209202669237233, 'spark.rdd.compress': 0.5212586878431045, 'spark.reducer.maxBlocksInFlightPerAddress': 1687369551.5765393, 'spark.reducer.maxSizeInFlight': 40.093862528515174, 'spark.scheduler.revive.interval': 759.8883557881655, 'spark.shuffle.file.buffer': 35.973016758795936, 'spark.shuffle.io.numConnectionsPerPeer': 2.5176411806909087, 'spark.shuffle.sort.bypassMergeThreshold': 215.08294476309524, 'spark.sql.autoBroadcastJoinThreshold': 9133814.63484481, 'spark.sql.inMemoryColumnarStorage.batchSize': 14963.81040895281, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8849096262995316, 'spark.sql.shuffle.partitions': 373.3583940051143, 'spark.storage.memoryMapThreshold': 3.0728777327771626}
target = -1224.0
训练集长度= 62
accuracy= 1.512750729849715e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07, 1.5361763194420468e-07, 1.5269605809811443e-07, 1.512750729849715e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1025.83870968 -1025.83870968 -1025.83870968]  max_stds [165.43180971 165.43180971 165.43180971]
所有模型的可信度所占权重  [0.020548218840412247, 0.020856308872233775, 0.02005053700739478, 0.020039039592392876, 0.020197230525871468, 0.020176633103412767, 0.02039800333269437, 0.0203566761000884, 0.020499407391263394, 0.02060553791497921, 0.02070317799755837, 0.020736292309195214, 0.020997547688323997, 0.02062389131600764, 0.02071765430303782, 0.020894109816830243, 0.020877468801262147, 0.02077848340484045, 0.020847212386167144, 0.02091189849534398, 0.020894956904163074, 0.02067306901220614, 0.020971194094468598, 0.021199014013444272, 0.021398426459111917, 0.021134256981867227, 0.021150527118501048, 0.02111096228426804, 0.021293872454452113, 0.021340443936620643, 0.02135859198692472, 0.02131149925098412, 0.021297950669546137, 0.021254083497657308, 0.021333018242109793, 0.021337640875827398, 0.021330455646588063, 0.02115022118592732, 0.021264315717152614, 0.020416670460613278, 0.020421362203297745, 0.020515888619413617, 0.02059149422485405, 0.020715609633476937, 0.020689791258457695, 0.02082394335916543, 0.02069901758515505, 0.020506393124435248]
三个函数的累计增益为[0.09951203221899915, 0.09951203221899915, 0.09951203221899915]
probability [0.33333333333333337, 0.33333333333333337, 0.33333333333333337]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 1 2 2 0 1 0 1 1 1 1 1 2 0 0 2 1 0 2 0 0 0 1 2 0 1 0 2 2 2 0 1 1 2 1 0 1
 1 0 0 2 1 0 2 0 0 0 1 0 2 1 0 1 2 2 1 0 2 1 1 2 0 1 1 2 0 0 0 0 0 1 0 0 1
 1 0 1 1 1 2 2 2 1 0 2 1 0 2 1 1 1 0 2 2 1 1 0 0 1 0]
每个概率被转中的次数, count: [37 38 25]
choose which one? [1]
ys [0.04893218 0.04893218 0.04893218 ... 0.04893218 0.04893218 0.04893218]
48 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [2705]
configNum = 63	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 63 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669050086.0
1669051516.0
1430.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 57.1930745181598, 'spark.broadcast.checksum': 0.4246694367054714, 'spark.broadcast.compress': 0.9487736890143686, 'spark.default.parallelism': 250.63830815030735, 'spark.executor.cores': 1.8271521288292147, 'spark.executor.instances': 7.425056573607524, 'spark.executor.memory': 4.296652499750286, 'spark.executor.memoryOverhead': 451.5374714417661, 'spark.kryoserializer.buffer': 69.17136420423401, 'spark.kryoserializer.buffer.max': 78.12765882939252, 'spark.locality.wait': 6.100396394311668, 'spark.maxRemoteBlockSizeFetchToMem': 1080541234.7452228, 'spark.memory.fraction': 0.7388394122719566, 'spark.memory.offHeap.enabled': 0.6439804152080342, 'spark.memory.offHeap.size': 153.15455566594198, 'spark.memory.storageFraction': 0.5498739430625996, 'spark.rdd.compress': 0.9757520673402293, 'spark.reducer.maxBlocksInFlightPerAddress': 1123675543.0475883, 'spark.reducer.maxSizeInFlight': 71.4231372226361, 'spark.scheduler.revive.interval': 643.7963299888356, 'spark.shuffle.file.buffer': 30.898433510159837, 'spark.shuffle.io.numConnectionsPerPeer': 1.9721022377862725, 'spark.shuffle.sort.bypassMergeThreshold': 204.95746509584217, 'spark.sql.autoBroadcastJoinThreshold': 9262612.220095731, 'spark.sql.inMemoryColumnarStorage.batchSize': 12617.587387328926, 'spark.sql.inMemoryColumnarStorage.compressed': 0.3677599339093278, 'spark.sql.shuffle.partitions': 319.66111616006816, 'spark.storage.memoryMapThreshold': 1.0590618705691952}
target = -1430.0
训练集长度= 63
accuracy= 1.4846889831840946e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07, 1.5361763194420468e-07, 1.5269605809811443e-07, 1.512750729849715e-07, 1.4846889831840946e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1032.25396825 -1032.25396825 -1032.25396825]  max_stds [171.7117341 171.7117341 171.7117341]
所有模型的可信度所占权重  ================= config64 =================
2022年 12月 14日 星期三 10:05:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20: 55442 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
================= config65 =================
2022年 12月 14日 星期三 10:39:05 CST
/usr/local/home/auto_tool/common/tpch-ga.sh: 行 20:   636 已终止               python3 /usr/local/home/TPCH/tpchMulti.py 4 tpch-$3 $1 False
[0.0201428244256903, 0.020444836170186685, 0.01965496132377458, 0.01964369074049282, 0.019798760735782562, 0.019778569678473433, 0.019995572509527798, 0.019955060619088683, 0.020094975974308458, 0.020199012656125857, 0.020294726404143468, 0.020327187405773776, 0.02058328849526133, 0.020217003964151197, 0.020308917107574743, 0.02048189134251308, 0.020465578636411557, 0.02036854611615689, 0.020435919148076204, 0.02049932906939588, 0.020482721717717416, 0.020265211436919502, 0.020557454829670262, 0.02078078010492852, 0.02097625835599139, 0.020717300660431853, 0.020733249804644416, 0.020694465542340397, 0.020873767090192556, 0.020919419766750585, 0.020937209775402074, 0.020891046128852266, 0.020877764846457817, 0.02083476312702555, 0.020912140573262693, 0.020916672007353462, 0.020909628535014067, 0.02073294990779367, 0.020844793475756976, 0.020013871354947088, 0.0200184705345586, 0.02011113204542723, 0.020185246033009915, 0.020306912777160836, 0.020281603771109838, 0.020413109194128747, 0.02029064807223405, 0.020101823886424747, 0.01972893212158401]
三个函数的累计增益为[0.10187456904338402, 0.10187456904338402, 0.10187456904338402]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [1 0 0 2 1 0 0 2 0 0 0 0 0 2 0 0 0 2 2 2 1 0 2 2 0 0 0 0 2 0 2 2 0 1 1 1 2
 0 0 2 0 2 0 0 1 1 2 2 0 0 0 2 1 2 0 0 0 1 2 2 0 1 2 0 1 2 2 2 1 0 0 2 2 1
 1 0 2 2 1 2 0 0 0 0 1 0 2 1 1 1 1 2 0 2 0 1 1 1 1 1]
每个概率被转中的次数, count: [42 26 32]
choose which one? [0]
ys [3.69834731 3.69834731 3.69834731 ... 3.69834731 3.69834731 3.69834731]
49 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [3117]
configNum = 64	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 64 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1669051654.0
1669052893.0
1239.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 42.02146605648226, 'spark.broadcast.checksum': 0.1254303934681794, 'spark.broadcast.compress': 0.49204364788010757, 'spark.default.parallelism': 439.30857985440207, 'spark.executor.cores': 1.8643485677916631, 'spark.executor.instances': 5.038306726397311, 'spark.executor.memory': 3.4658187178962323, 'spark.executor.memoryOverhead': 594.3490788957665, 'spark.kryoserializer.buffer': 95.65837019527237, 'spark.kryoserializer.buffer.max': 97.5108790109221, 'spark.locality.wait': 8.232290896284667, 'spark.maxRemoteBlockSizeFetchToMem': 2075277915.0763721, 'spark.memory.fraction': 0.7429190867552107, 'spark.memory.offHeap.enabled': 0.5952776051814024, 'spark.memory.offHeap.size': 845.238015000886, 'spark.memory.storageFraction': 0.694103403886508, 'spark.rdd.compress': 0.7500219464708491, 'spark.reducer.maxBlocksInFlightPerAddress': 1864132656.6310375, 'spark.reducer.maxSizeInFlight': 57.93741544215493, 'spark.scheduler.revive.interval': 530.8866748341636, 'spark.shuffle.file.buffer': 43.02024249799452, 'spark.shuffle.io.numConnectionsPerPeer': 2.1334552138969434, 'spark.shuffle.sort.bypassMergeThreshold': 264.7320463109843, 'spark.sql.autoBroadcastJoinThreshold': 6544681.920432962, 'spark.sql.inMemoryColumnarStorage.batchSize': 10403.524370073294, 'spark.sql.inMemoryColumnarStorage.compressed': 0.5811335157964903, 'spark.sql.shuffle.partitions': 364.86169850627863, 'spark.storage.memoryMapThreshold': 3.3219208486347584}
target = -1239.0
训练集长度= 64
accuracy= 1.4801785057759876e-07
所有模型的可信度  [1.5158362009019256e-07, 1.5385639140433498e-07, 1.4791223550509452e-07, 1.4782741940491555e-07, 1.4899438937678347e-07, 1.4884244278301467e-07, 1.5047548460504872e-07, 1.5017061479733565e-07, 1.5122353943204422e-07, 1.520064612566489e-07, 1.5272674934089617e-07, 1.529710326665553e-07, 1.5489830609321803e-07, 1.5214185376879133e-07, 1.5283354063055243e-07, 1.541352478867028e-07, 1.5401248759290894e-07, 1.5328227516709255e-07, 1.5378928688793922e-07, 1.5426647445707733e-07, 1.5414149682562252e-07, 1.5250463622090363e-07, 1.5470389638841522e-07, 1.5638451738604003e-07, 1.578555772691425e-07, 1.55906806624393e-07, 1.5602683095494306e-07, 1.5573496230939835e-07, 1.5708428538032484e-07, 1.574278418664076e-07, 1.575617195121557e-07, 1.572143177519706e-07, 1.5711437025591722e-07, 1.567907633890802e-07, 1.5737306273132147e-07, 1.574071637674603e-07, 1.573541585377742e-07, 1.560245740991353e-07, 1.5686624617835268e-07, 1.506131914714497e-07, 1.5064780232245174e-07, 1.513451209786467e-07, 1.5190286135803334e-07, 1.5281845716193968e-07, 1.526279957511158e-07, 1.5361763194420468e-07, 1.5269605809811443e-07, 1.512750729849715e-07, 1.4846889831840946e-07, 1.4801785057759876e-07]
三个采集函数选出的max_idx [0, 0, 0]
max_means [-1035.484375 -1035.484375 -1035.484375]  max_stds [172.28364985 172.28364985 172.28364985]
所有模型的可信度所占权重  [0.019754277623495718, 0.02005046368560172, 0.019275825200249085, 0.01926477202188535, 0.019416850780717244, 0.0193970492006028, 0.019609866136258813, 0.0195701357035313, 0.01970735214906991, 0.019809382006065884, 0.019903249475233403, 0.0199350843174874, 0.020186245322245226, 0.019827026269155876, 0.01991716644582947, 0.0200868040788878, 0.02007080603818061, 0.01997564523535033, 0.02004171866918185, 0.020103905439187914, 0.020087618436495827, 0.0198743038395932, 0.020160909977442857, 0.020379927399953302, 0.020571634955916823, 0.020317672447843754, 0.02033331393962136, 0.020295277809792466, 0.020471120704499756, 0.020515892759695387, 0.020533339606393693, 0.020488066437607356, 0.020475041345690188, 0.020432869111747205, 0.02050875397885731, 0.0205131980034474, 0.020506290396793764, 0.02033301982765757, 0.020442705979175208, 0.019627812004472858, 0.019632322467800445, 0.01972319657621877, 0.01979588093545021, 0.019915200778125242, 0.019890379972396108, 0.020019348709868566, 0.019899249812669863, 0.01971406796777674, 0.01934836913177913, 0.01928958888699989]
三个函数的累计增益为[0.10050077025881016, 0.10050077025881016, 0.10050077025881016]
probability [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
probabilityTotal [0.33333333 0.66666667 1.        ]
每一轮选择的下标，result: [0 0 1 0 1 0 2 2 2 0 0 0 1 1 1 0 2 0 1 0 2 1 1 1 2 1 0 2 2 1 1 2 1 0 0 0 1
 0 1 0 0 0 1 2 0 0 1 0 1 0 1 2 2 2 0 2 0 1 1 0 0 2 2 1 2 0 1 2 0 2 2 2 1 2
 0 2 2 0 1 0 2 2 0 0 1 1 0 1 0 2 1 1 1 0 1 0 2 1 0 0]
每个概率被转中的次数, count: [39 33 28]
choose which one? [0]
ys [3.59436898 3.59436898 3.59436898 ... 3.59436898 3.59436898 3.59436898]
50 所有候选样本的均值方差完全相同，随机选点 ys.argmax() [1661]
configNum = 65	 run_cmd = /usr/local/home/auto_tool/common/tpch-ga.sh 65 /usr/local/home/auto_tool/CCAGNBO/config/tpch-100G 100G
run_cmd命令执行失败
1668650404.0
1668651468.0
1064.0
修改的文件为 /usr/local/home/auto_tool/common/errorDetection/shutDowonDetection-tpch.sh	将stop_time修改为 3760
x_probe = {'spark.broadcast.blockSize': 36.12957107239628, 'spark.broadcast.checksum': 0.9451285848608598, 'spark.broadcast.compress': 0.04644025675343788, 'spark.default.parallelism': 368.06201326406506, 'spark.executor.cores': 2.263666103721565, 'spark.executor.instances': 7.765873169604577, 'spark.executor.memory': 4.6729104093015295, 'spark.executor.memoryOverhead': 544.2879501585593, 'spark.kryoserializer.buffer': 94.05219650832245, 'spark.kryoserializer.buffer.max': 99.17595678024071, 'spark.locality.wait': 4.950647799042281, 'spark.maxRemoteBlockSizeFetchToMem': 1138700626.6959548, 'spark.memory.fraction': 0.529296875552823, 'spark.memory.offHeap.enabled': 0.8787657915165273, 'spark.memory.offHeap.size': 610.4518924723541, 'spark.memory.storageFraction': 0.6777440505006519, 'spark.rdd.compress': 0.24269192737272383, 'spark.reducer.maxBlocksInFlightPerAddress': 1112349293.6480865, 'spark.reducer.maxSizeInFlight': 69.86839650619939, 'spark.scheduler.revive.interval': 625.2470418500981, 'spark.shuffle.file.buffer': 22.357475533257503, 'spark.shuffle.io.numConnectionsPerPeer': 2.0325124157323966, 'spark.shuffle.sort.bypassMergeThreshold': 237.32615405400608, 'spark.sql.autoBroadcastJoinThreshold': 10718861.004693002, 'spark.sql.inMemoryColumnarStorage.batchSize': 9792.737239908764, 'spark.sql.inMemoryColumnarStorage.compressed': 0.11913815161600516, 'spark.sql.shuffle.partitions': 387.6080826155502, 'spark.storage.memoryMapThreshold': 1.689370999048308}
target = -1064.0
算法搜索时间为： 130571s
{'maxIndex': 7, 'target': -752.0, 'params': {'spark.broadcast.blockSize': 46.27022262388078, 'spark.broadcast.checksum': 0.9376992949517655, 'spark.broadcast.compress': 0.7916470908732195, 'spark.default.parallelism': 358.069004848904, 'spark.executor.cores': 2.3984205299383268, 'spark.executor.instances': 5.242742886757952, 'spark.executor.memory': 5.716871362146106, 'spark.executor.memoryOverhead': 507.0225236747619, 'spark.kryoserializer.buffer': 72.58312954273204, 'spark.kryoserializer.buffer.max': 69.85555110479, 'spark.locality.wait': 5.81366747952884, 'spark.maxRemoteBlockSizeFetchToMem': 1080195465.757693, 'spark.memory.fraction': 0.5600015293866624, 'spark.memory.offHeap.enabled': 0.08130587704362534, 'spark.memory.offHeap.size': 204.07694739396865, 'spark.memory.storageFraction': 0.5043266369464668, 'spark.rdd.compress': 0.017519331302773656, 'spark.reducer.maxBlocksInFlightPerAddress': 1272729658.4054675, 'spark.reducer.maxSizeInFlight': 65.5810121187429, 'spark.scheduler.revive.interval': 789.2001795181611, 'spark.shuffle.file.buffer': 41.84733536319841, 'spark.shuffle.io.numConnectionsPerPeer': 2.8806353414193397, 'spark.shuffle.sort.bypassMergeThreshold': 216.36754983737654, 'spark.sql.autoBroadcastJoinThreshold': 9602466.486409344, 'spark.sql.inMemoryColumnarStorage.batchSize': 13013.23494896455, 'spark.sql.inMemoryColumnarStorage.compressed': 0.8971296521850889, 'spark.sql.shuffle.partitions': 254.7339051653591, 'spark.storage.memoryMapThreshold': 2.467958235905055}}
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/general_data.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/sgan_sample.csv" 的文件状态(stat): 没有那个文件或目录
mv: 无法获取"/usr/local/home/auto_tool/CCAGNBO/output.txt" 的文件状态(stat): 没有那个文件或目录
